{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-51920f510255b7c3c96e865b502ae54ee3c3ea772030c777be4b4dfa885a45d4d018191045a5a72269d6748905f62c4c6a2c3e2bce6eb2d0f8e010ee4f595976",
            "file": "apps/core-web/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ds-freud-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'core-web'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ds-freud-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'core-web';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/*\n * Remove template code below\n */\n:host {\n  display: block;\n  font-family: sans-serif;\n  min-width: 300px;\n  max-width: 600px;\n  margin: 50px auto;\n}\n\n.gutter-left {\n  margin-left: 9px;\n}\n\n.col-span-2 {\n  grid-column: span 2;\n}\n\n.flex {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\nheader {\n  background-color: #143055;\n  color: white;\n  padding: 5px;\n  border-radius: 3px;\n}\n\nmain {\n  padding: 0 36px;\n}\n\np {\n  text-align: center;\n}\n\nh1 {\n  text-align: center;\n  margin-left: 18px;\n  font-size: 24px;\n}\n\nh2 {\n  text-align: center;\n  font-size: 20px;\n  margin: 40px 0 10px 0;\n}\n\n.resources {\n  text-align: center;\n  list-style: none;\n  padding: 0;\n  display: grid;\n  grid-gap: 9px;\n  grid-template-columns: 1fr 1fr;\n}\n\n.resource {\n  color: #0094ba;\n  height: 36px;\n  background-color: rgba(0, 0, 0, 0);\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  border-radius: 4px;\n  padding: 3px 9px;\n  text-decoration: none;\n}\n\n.resource:hover {\n  background-color: rgba(68, 138, 255, 0.04);\n}\n\npre {\n  padding: 9px;\n  border-radius: 4px;\n  background-color: black;\n  color: #eee;\n}\n\ndetails {\n  border-radius: 4px;\n  color: #333;\n  background-color: rgba(0, 0, 0, 0);\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  padding: 3px 9px;\n  margin-bottom: 9px;\n}\n\nsummary {\n  cursor: pointer;\n  outline: none;\n  height: 36px;\n  line-height: 36px;\n}\n\n.github-star-container {\n  margin-top: 12px;\n  line-height: 20px;\n}\n\n.github-star-container a {\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  color: #333;\n}\n\n.github-star-badge {\n  color: #24292e;\n  display: flex;\n  align-items: center;\n  font-size: 12px;\n  padding: 3px 10px;\n  border: 1px solid rgba(27, 31, 35, 0.2);\n  border-radius: 3px;\n  background-image: linear-gradient(-180deg, #fafbfc, #eff3f6 90%);\n  margin-left: 4px;\n  font-weight: 600;\n}\n\n.github-star-badge:hover {\n  background-image: linear-gradient(-180deg, #f0f3f6, #e6ebf1 90%);\n  border-color: rgba(27, 31, 35, 0.35);\n  background-position: -0.5em;\n}\n.github-star-badge .material-icons {\n  height: 16px;\n  width: 16px;\n  margin-right: 4px;\n}\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<header class=\"flex\">\n  <img\n    alt=\"Nx logo\"\n    width=\"75\"\n    src=\"https://nx.dev/assets/images/nx-logo-white.svg\"\n  />\n  <h1>Welcome to {{ title }}!</h1>\n</header>\n<main>\n  <h2>Resources &amp; Tools</h2>\n  <p>Thank you for using and showing some â™¥ for Nx.</p>\n  <div class=\"flex github-star-container\">\n    <a\n      href=\"https://github.com/nrwl/nx\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      If you like Nx, please give it a star:\n      <div class=\"github-star-badge\">\n        <svg\n          class=\"material-icons\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n          <path\n            d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n          />\n        </svg>\n        Star\n      </div>\n    </a>\n  </div>\n  <p>Here are some links to help you get started.</p>\n  <ul class=\"resources\">\n    <li class=\"col-span-2\">\n      <a class=\"resource flex\" href=\"https://nxplaybook.com/p/nx-workspaces\">\n        Nx video course\n      </a>\n    </li>\n    <li class=\"col-span-2\">\n      <a\n        class=\"resource flex\"\n        href=\"https://nx.dev/latest/angular/getting-started/getting-started\"\n      >\n        Nx video tutorial\n      </a>\n    </li>\n    <li class=\"col-span-2\">\n      <a\n        class=\"resource flex\"\n        href=\"https://nx.dev/latest/angular/tutorial/01-create-application\"\n      >\n        Interactive tutorial\n      </a>\n    </li>\n    <li class=\"col-span-2\">\n      <a class=\"resource flex\" href=\"https://nx.app/\">\n        <svg\n          width=\"36\"\n          height=\"36\"\n          viewBox=\"0 0 120 120\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M120 15V30C103.44 30 90 43.44 90 60C90 76.56 76.56 90 60 90C43.44 90 30 103.44 30 120H15C6.72 120 0 113.28 0 105V15C0 6.72 6.72 0 15 0H105C113.28 0 120 6.72 120 15Z\"\n            fill=\"#0E2039\"\n          />\n          <path\n            d=\"M120 30V105C120 113.28 113.28 120 105 120H30C30 103.44 43.44 90 60 90C76.56 90 90 76.56 90 60C90 43.44 103.44 30 120 30Z\"\n            fill=\"white\"\n          />\n        </svg>\n        <span class=\"gutter-left\">Nx Cloud</span>\n      </a>\n    </li>\n  </ul>\n  <h2>Next Steps</h2>\n  <p>Here are some things you can do with Nx.</p>\n  <details open>\n    <summary>Add UI library</summary>\n    <pre>\n# Generate UI lib\nng g @nrwl/angular:lib ui\n\n# Add a component\nng g @nrwl/angular:component xyz --project ui</pre\n    >\n  </details>\n  <details>\n    <summary>View dependency graph</summary>\n    <pre>nx dep-graph</pre>\n  </details>\n  <details>\n    <summary>Run affected commands</summary>\n    <pre>\n# see what's been affected by changes\nng affected:dep-graph\n\n# run tests for current changes\nng affected:test\n\n# run e2e tests for current changes\nng affected:e2e\n</pre\n    >\n  </details>\n</main>\n"
        },
        {
            "name": "FreudAvatarComponent",
            "id": "component-FreudAvatarComponent-814b05dce34c85a2086910a278248bcef4f979507c5fff4cc1733c0ca42d991defcf49c038ba40a8d91c2b4df64f2efc39e04e54f4bc57af45d918062085b88f",
            "file": "apps/core-web/src/app/components/avatar/avatar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "freud-avatar",
            "styleUrls": [
                "./avatar.component.scss"
            ],
            "styles": [],
            "template": "<div class=\"freud-avatar-container\">\n  <span *ngIf=\"letter && !imgSrc\">{{ letter }}</span>\n  <img *ngIf=\"imgSrc\" [src]=\"imgSrc\" alt=\"avatar\" />\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "imgSrc",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "letter",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "avatarSizes",
                    "decorators": []
                },
                {
                    "name": "theme",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "avatarThemes",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\ntype avatarSizes = 'xs' | 'sm' | 'md' | 'lg' | 'xl';\ntype avatarThemes = 'light' | 'dark';\n\n@Component({\n  selector: 'freud-avatar',\n  styleUrls: ['./avatar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"freud-avatar-container\">\n      <span *ngIf=\"letter && !imgSrc\">{{ letter }}</span>\n      <img *ngIf=\"imgSrc\" [src]=\"imgSrc\" alt=\"avatar\" />\n    </div>\n  `,\n  host: {\n    class: 'freud-avatar',\n    '[class.freud-avatar-theme-dark]': `theme === 'dark'`,\n    '[class.freud-avatar-size-xsmall]': `size === 'xs'`,\n    '[class.freud-avatar-size-small]': `size === 'sm'`,\n    '[class.freud-avatar-size-medium]': `size === 'md'`,\n    '[class.freud-avatar-size-large]': `size === 'lg'`,\n    '[class.freud-avatar-size-xlarge]': `size === 'xl'`,\n  }\n})\nexport class FreudAvatarComponent {\n\n  @Input() imgSrc = '';\n  @Input() letter = '';\n  @Input() size: avatarSizes = 'md';\n  @Input() theme: avatarThemes = 'light';\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '~@freud-ds/core-support/dist/style/scss/_variables.scss';\n\n.freud-avatar {\n  display: inline-block;\n  font-family: $font-family-base;\n  font-weight: $font-weight-semibold;\n  line-height: $line-height-none;\n\n  color: $neutral-color-light-pure;\n  border-radius: $border-radius-circular;\n  border: $border-width-lg solid transparent;\n\n  &:hover {\n    border-color: rgba(41, 20, 84, 0.16);\n  }\n}\n\n.freud-avatar .freud-avatar-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 64px;\n  width: 64px;\n  overflow: hidden;\n\n  border-radius: $border-radius-circular;\n  background-color: $brand-color-pure;\n  border: $border-width-lg solid $brand-color-02;\n  font-size: $font-size-md;\n\n  img {\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n  }\n}\n\n.freud-avatar.freud-avatar-size {\n  &-xsmall .freud-avatar-container {\n    font-size: $font-size-xs;\n    border-width: $border-width-md;\n    height: 32px;\n    width: 32px;\n  }\n\n  &-small .freud-avatar-container {\n    font-size: $font-size-sm;\n    border-width: $border-width-md;\n    height: 40px;\n    width: 40px;\n  }\n\n  &-medium .freud-avatar-container {\n    font-size: $font-size-sm;\n    border-width: $border-width-lg;\n    height: 48px;\n    width: 48px;\n  }\n\n  &-large .freud-avatar-container {\n    font-size: $font-size-lg;\n    border-width: $border-width-lg;\n    height: 64px;\n    width: 64px;\n  }\n\n  &-xlarge .freud-avatar-container {\n    font-size: $font-size-lg;\n    border-width: $border-width-lg;\n    height: 80px;\n    width: 80px;\n  }\n}\n\n.freud-avatar.freud-avatar-theme {\n  &-dark {\n    &:hover {\n      border-color: rgba(225, 214, 246, 0.16);\n    }\n\n    .freud-avatar-container {\n      background-color: $brand-color-01;\n      border-color: $brand-color-02;\n      color: $brand-color-pure;\n    }\n  }\n}\n",
                    "styleUrl": "./avatar.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "FreudButtonComponent",
            "id": "component-FreudButtonComponent-0c3cdb65b1708d7e16b3bdd99a74eb01f32e17a79055c46ca0d4b58a165d00288f206faeaa71763a74ef36f42417b13686ef86cc1b6b5c6cdb29cec99a5f652d",
            "file": "apps/core-web/src/app/components/button/button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "exportAs": "freudButton",
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "button[freud-button]",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "template": "<ng-container *ngIf=\"!loading\">\n  <ng-content></ng-content>\n</ng-container>\n\n<freud-loader *ngIf=\"loading && (color == 'primary' && theme == 'light')\" theme=\"dark\"></freud-loader>\n<freud-loader *ngIf=\"loading && (color == 'primary' && theme == 'dark')\" theme=\"light\"></freud-loader>\n<freud-loader *ngIf=\"loading && (color == 'secondary')\" [theme]=\"theme\"></freud-loader>\n<freud-loader *ngIf=\"loading && (color == 'ghost')\" [theme]=\"theme\"></freud-loader>\n\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "buttonColors",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "buttonSizes",
                    "decorators": []
                },
                {
                    "name": "theme",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "buttonThemes",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\ntype buttonSizes = 'sm' | 'md' | 'lg';\ntype buttonThemes = 'light' | 'dark';\ntype buttonColors = 'primary' | 'secondary' | 'ghost';\n\n@Component({\n  selector: 'button[freud-button]',\n  exportAs: 'freudButton',\n  styleUrls: ['./button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-container *ngIf=\"!loading\">\n      <ng-content></ng-content>\n    </ng-container>\n\n    <freud-loader *ngIf=\"loading && (color == 'primary' && theme == 'light')\" theme=\"dark\"></freud-loader>\n    <freud-loader *ngIf=\"loading && (color == 'primary' && theme == 'dark')\" theme=\"light\"></freud-loader>\n    <freud-loader *ngIf=\"loading && (color == 'secondary')\" [theme]=\"theme\"></freud-loader>\n    <freud-loader *ngIf=\"loading && (color == 'ghost')\" [theme]=\"theme\"></freud-loader>\n\n  `,\n  host: {\n    class: 'freud-btn',\n    '[class.freud-btn-color-primary]': `color === 'primary'`,\n    '[class.freud-btn-color-secondary]': `color === 'secondary'`,\n    '[class.freud-btn-color-ghost]': `color === 'ghost'`,\n\n    '[class.freud-btn-theme-dark]': `theme === 'dark'`,\n    '[class.freud-btn-loading]': `loading`,\n\n    '[class.freud-btn-size-small]': `size === 'sm'`,\n    '[class.freud-btn-size-medium]': `size === 'md'`,\n    '[class.freud-btn-size-large]': `size === 'lg'`,\n  }\n})\nexport class FreudButtonComponent {\n\n  @Input() size: buttonSizes = 'md';\n  @Input() color: buttonColors = 'primary';\n  @Input() theme: buttonThemes = 'light';\n  @Input() loading = false;\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '~@freud-ds/core-support/dist/style/scss/_variables.scss';\n\n.freud-btn {\n  border: none;\n  margin: 0;\n  padding: 0;\n  width: auto;\n  overflow: visible;\n  background: transparent;\n  color: inherit;\n  cursor: pointer;\n  min-width: 120px;\n\n  font-family: $font-family-base;\n  font-weight: $font-weight-semibold;\n  font-size: $font-size-xs;\n  line-height: $line-height-none;\n\n  border-radius: $border-radius-md;\n  box-sizing: border-box;\n  user-select: none;\n\n  &:focus {\n    outline: none;\n    box-shadow: none;\n  }\n\n  &:focus-visible {\n    outline-offset: 2px;\n    outline: $feedback-color-warning-pure solid 2px;\n  }\n\n  &[disabled] {\n    cursor: default;\n    pointer-events: none;\n  }\n}\n\n.freud-btn.freud-btn-loading {\n  pointer-events: none;\n}\n\n\n// COLORS\n\n.freud-btn.freud-btn-color {\n\n  &-primary {\n    color: $neutral-color-light-pure;\n    background-color: $brand-color-pure;\n\n    &:hover {\n      color: $brand-color-pure;\n      background-color: $brand-color-01;\n    }\n\n    &[disabled] {\n      color: $neutral-color-dark-pure;\n      background-color: $neutral-color-light-03;\n      opacity: $opacity-level-6;\n    }\n  }\n\n  &-secondary {\n    color: $brand-color-pure;\n\n    background-color: transparent;\n    border-style: solid;\n    border-color: $brand-color-pure;\n    border-width: $border-width-sm;\n    border-radius: $border-radius-md;\n\n    &:hover {\n      color: $brand-color-pure;\n\n      background-color: $brand-color-01;\n      border-color: $brand-color-01;\n    }\n\n    &[disabled] {\n      color: $neutral-color-dark-pure;\n      border-color: $neutral-color-light-03;\n      opacity: $opacity-level-6;\n    }\n  }\n\n  &-ghost {\n    color: $brand-color-pure;\n    background-color: transparent;\n\n    &:hover {\n      color: $brand-color-pure;\n      background-color: $brand-color-01;\n    }\n\n    &[disabled] {\n      color: $neutral-color-dark-pure;\n      opacity: $opacity-level-6;\n    }\n  }\n\n}\n\n.freud-btn.freud-btn-theme-dark.freud-btn-color {\n\n  &-primary {\n    color: $brand-color-pure;\n    background-color: $neutral-color-light-pure;\n\n    &:hover {\n      color: $brand-color-pure;\n      background-color: $brand-color-01;\n    }\n  }\n\n  &-secondary {\n    color: $neutral-color-light-pure;\n\n    background-color: transparent;\n    border-color: $neutral-color-light-pure;\n    border-width: $border-width-sm;\n    border-radius: $border-radius-md;\n\n    &:hover {\n      color: $brand-color-pure;\n      background-color: $brand-color-01;\n      border-color: $brand-color-01;\n    }\n\n    &[disabled] {\n      color: $neutral-color-light-pure;\n      border-color: $neutral-color-light-03;\n      opacity: $opacity-level-6;\n    }\n  }\n\n  &-ghost {\n    color: $neutral-color-light-pure;\n    background-color: transparent;\n\n    &:hover {\n      color: $brand-color-pure;\n      background-color: $brand-color-01;\n    }\n\n    &[disabled] {\n      color: $neutral-color-light-pure;\n      opacity: $opacity-level-6;\n    }\n  }\n\n}\n\n\n// SIZES\n\n.freud-btn.freud-btn-size {\n  &-large {\n    height: 56px;\n    padding: 0 $spacing-size-xs;\n  }\n\n  &-medium {\n    height: 48px;\n    padding: 0 $spacing-size-xxs;\n  }\n\n  &-small {\n    font-size: $font-size-xxs;\n    height: 40px;\n    padding: 0 $spacing-size-xxs;\n  }\n}\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "FreudLoaderComponent",
            "id": "component-FreudLoaderComponent-4c4ce613aa2ab0e89d964d1577863e6dce87e0b31e09cf7a6233c09d0102816c4c61d78bb02d3386c1865e73bd95c5707a74afb0b073875018a11f44beb2ebf3",
            "file": "apps/core-web/src/app/components/loader/loader.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "freud-loader",
            "styleUrls": [
                "./loader.component.scss"
            ],
            "styles": [],
            "template": "<img [src]=\"imgSrc\" alt=\"loader\" />\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "size",
                    "defaultValue": "'sm'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "loaderSizes",
                    "decorators": []
                },
                {
                    "name": "theme",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "loaderThemes",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "imgSrc",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\ntype loaderSizes = 'sm' | 'lg';\ntype loaderThemes = 'light' | 'dark';\n\n@Component({\n  selector: 'freud-loader',\n  styleUrls: ['./loader.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <img [src]=\"imgSrc\" alt=\"loader\" />\n  `,\n  host: {\n    class: 'freud-loader',\n  }\n})\nexport class FreudLoaderComponent implements OnInit {\n\n  @Input() size: loaderSizes = 'sm';\n  @Input() theme: loaderThemes = 'light';\n\n  public imgSrc = '';\n\n  ngOnInit(): void {\n    this.imgSrc = `/assets/icons/loader/loader-${this.size}-${this.theme}.svg`;\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".freud-loader {\n  display: inline-block;\n\n  @keyframes svg-animation {\n    0% {\n      transform: rotateZ(0deg);\n    }\n    25% {\n      transform: rotateZ(90deg);\n    }\n    50% {\n      transform: rotateZ(180deg);\n    }\n    75% {\n      transform: rotateZ(270deg);\n    }\n    100% {\n      transform: rotateZ(360deg);\n    }\n  }\n\n  img {\n    animation: svg-animation 1.6s linear infinite;\n  }\n}\n",
                    "styleUrl": "./loader.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "FreudTooltipComponent",
            "id": "component-FreudTooltipComponent-fd895c3b5830393323fbb2c93b72ae508d45b79c92d55dd38e683f011db5e7cc762a0680f11e2696fe93d2de33f3ccb5ebe315ae982343277bebd1a1ffb401f5",
            "file": "apps/core-web/src/app/components/tooltip/tooltip.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "freud-tooltip",
            "styleUrls": [
                "./tooltip.component.scss"
            ],
            "styles": [],
            "template": "<ng-content></ng-content>\n<div class=\"freud-tooltip-container\" [class.freud-tooltip-open]=\"isOpen\">\n  <span class=\"freud-tooltip-text\" [innerHTML]=\"text\"></span>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'top'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "tooltipPositions",
                    "decorators": []
                },
                {
                    "name": "text",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "theme",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "tooltipThemes",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hideTask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "hide",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMouseEnter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseenter'"
                        }
                    ]
                },
                {
                    "name": "onMouseLeave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseleave'"
                        }
                    ]
                },
                {
                    "name": "show",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "mouseenter",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41
                },
                {
                    "name": "mouseleave",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostListener, Input, OnDestroy, ViewEncapsulation } from '@angular/core';\n\ntype tooltipPositions = 'top' | 'bottom' | 'left' | 'right';\ntype tooltipThemes = 'light' | 'dark';\n\n@Component({\n  selector: 'freud-tooltip',\n  styleUrls: ['./tooltip.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-content></ng-content>\n    <div class=\"freud-tooltip-container\" [class.freud-tooltip-open]=\"isOpen\">\n      <span class=\"freud-tooltip-text\" [innerHTML]=\"text\"></span>\n    </div>\n  `,\n  host: {\n    class: 'freud-tooltip',\n    '[class.freud-tooltip-theme-dark]': `theme === 'dark'`,\n\n    '[class.freud-tooltip-position-top]': `position === 'top'`,\n    '[class.freud-tooltip-position-bottom]': `position === 'bottom'`,\n    '[class.freud-tooltip-position-left]': `position === 'left'`,\n    '[class.freud-tooltip-position-right]': `position === 'right'`,\n  }\n})\nexport class FreudTooltipComponent implements OnDestroy{\n\n  @Input() theme: tooltipThemes = 'light';\n  @Input() position: tooltipPositions = 'top';\n  @Input() disabled = false;\n  @Input() text = '';\n\n  public isOpen = false;\n  public hideTask: any;\n\n  ngOnDestroy() {\n    this.hide();\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnter() {\n    this.show();\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave() {\n    this.hide();\n  }\n\n  private show() {\n    if (this.hideTask) {\n      clearTimeout(this.hideTask);\n    }\n\n    if (this.text && !this.disabled) {\n      this.isOpen = true;\n    }\n  }\n\n  private hide() {\n    if (this.hideTask) {\n      clearTimeout(this.hideTask);\n    }\n\n    this.hideTask = setTimeout(() => {\n      this.isOpen = false;\n    }, 200);\n  }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '~@freud-ds/core-support/dist/style/scss/_variables.scss';\n\n.freud-tooltip {\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n\n.freud-tooltip .freud-tooltip-container {\n\n  position: absolute;\n  background-color: $neutral-color-dark-01;\n  border-radius: $border-radius-md;\n  padding: 10px 12px;\n  width: fit-content;\n  z-index: 999;\n\n  color: $neutral-color-light-pure;\n  font-family: $font-family-base;\n  font-weight: $font-weight-regular;\n  font-size: $font-size-xxs;\n\n  transition: 0.2s;\n  visibility: hidden;\n  opacity: 0;\n\n  &::after {\n    content: '';\n    position: absolute;\n    border-width: 6px;\n    border-style: solid;\n    border-color: $neutral-color-dark-01;\n  }\n\n}\n\n.freud-tooltip.freud-tooltip-theme {\n  &-dark .freud-tooltip-container {\n    color: $neutral-color-dark-01;\n    background-color: $neutral-color-light-pure;\n\n    &::after {\n      border-color: $neutral-color-light-pure;\n    }\n  }\n}\n\n.freud-tooltip.freud-tooltip-position {\n\n  &-top .freud-tooltip-container {\n    bottom: calc(100% + #{$spacing-size-nano});\n    transform: translate3d(0px, 20px, 0px);\n\n    &.freud-tooltip-open {\n      visibility: visible;\n      opacity: 1;\n      transform: translate3d(0px, 0px, 0px);\n    }\n\n    &::after {\n      top: 100%;\n      left: 50%;\n      margin-left: -5px;\n      border-right-color: transparent;\n      border-bottom-color: transparent;\n      border-left-color: transparent;\n    }\n  }\n\n  &-bottom .freud-tooltip-container {\n    top: calc(100% + #{$spacing-size-nano});\n    transform: translate3d(0px, -20px, 0px);\n\n    &.freud-tooltip-open {\n      visibility: visible;\n      opacity: 1;\n      transform: translate3d(0px, 0px, 0px);\n    }\n\n    &::after {\n      bottom: 100%;\n      left: 50%;\n      margin-left: -5px;\n      border-top-color: transparent;\n      border-right-color: transparent;\n      border-left-color: transparent;\n    }\n  }\n\n  &-right .freud-tooltip-container {\n    left: calc(100% + #{$spacing-size-nano});\n    transform: translate3d(-20px, 0px, 0px);\n\n    &.freud-tooltip-open {\n      visibility: visible;\n      opacity: 1;\n      transform: translate3d(0px, 0px, 0px);\n    }\n\n    &::after {\n      bottom: 50%;\n      right: 100%;\n      margin-bottom: -6px;\n      border-top-color: transparent;\n      border-bottom-color: transparent;\n      border-left-color: transparent;\n    }\n  }\n\n  &-left .freud-tooltip-container {\n    right: calc(100% + #{$spacing-size-nano});\n    transform: translate3d(20px, 0px, 0px);\n\n    &.freud-tooltip-open {\n      visibility: visible;\n      opacity: 1;\n      transform: translate3d(0px, 0px, 0px);\n    }\n\n    &::after {\n      bottom: 50%;\n      left: 100%;\n      margin-bottom: -6px;\n      border-top-color: transparent;\n      border-right-color: transparent;\n      border-bottom-color: transparent;\n    }\n  }\n\n}\n",
                    "styleUrl": "./tooltip.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnDestroy"
            ]
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-6b98c3c06f4088d367b67db6b8ca962f2166437258de481afb8e3f7b2d921004abf7396765acbf24f818ef7402b10a733f82ea94f88a50173678500d4deb9259",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "apps/core-web/src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ComponentsModule",
            "id": "module-ComponentsModule-77703d5573cf386add10aa2a0f5645e5c2a5224865a3a0e14f5ab00cdb92dd3785e9abfb936df4cbeefc0d6b6958973a741f6a19c0d60f37534cef213a145c29",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "apps/core-web/src/app/components/components.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { FreudAvatarModule } from './avatar';\nimport { FreudButtonModule } from './button';\nimport { FreudTooltipModule } from './tooltip';\n\n@NgModule({\n  imports: [\n    FreudAvatarModule,\n    FreudButtonModule,\n    FreudTooltipModule,\n  ],\n  exports: [\n    FreudAvatarModule,\n    FreudButtonModule,\n    FreudTooltipModule,\n  ]\n})\nexport class ComponentsModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "FreudAvatarModule"
                        },
                        {
                            "name": "FreudButtonModule"
                        },
                        {
                            "name": "FreudTooltipModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FreudAvatarModule"
                        },
                        {
                            "name": "FreudButtonModule"
                        },
                        {
                            "name": "FreudTooltipModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FreudAvatarModule",
            "id": "module-FreudAvatarModule-23465550f4d5d6432f31d18ae8dab4d42843bf8f4f1b7b8d1686997ec270570ddd64f5a989766d2d45005adc0c0d38c96268a536c90e6badf7ba1a245ad27483",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "apps/core-web/src/app/components/avatar/avatar.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FreudAvatarComponent } from './avatar.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [FreudAvatarComponent],\n  exports: [FreudAvatarComponent]\n})\nexport class FreudAvatarModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FreudAvatarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FreudAvatarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FreudButtonModule",
            "id": "module-FreudButtonModule-4f57bed38a4de81e7df911a06214cf356d370aee8ada8e1d4bb080be4f885261c3ac422155d1f28dc95251d1de55df010324608b924499d81ff25e5c4faa442d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "apps/core-web/src/app/components/button/button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FreudLoaderModule } from '../loader';\n\nimport { FreudButtonComponent } from './button.component';\n\n@NgModule({\n  imports: [CommonModule, FreudLoaderModule],\n  declarations: [FreudButtonComponent],\n  exports: [FreudButtonComponent]\n})\nexport class FreudButtonModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FreudButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "FreudLoaderModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FreudButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FreudLoaderModule",
            "id": "module-FreudLoaderModule-867c2831fb169071aa7738e44f86be2b6d2588bdd20dcc3403741850c2da2ac36d45da9154783e5bc1194017ec4d4e55843b938c0025e8a64df9fdb094fb2ee8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "apps/core-web/src/app/components/loader/loader.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FreudLoaderComponent } from './loader.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [FreudLoaderComponent],\n  exports: [FreudLoaderComponent],\n})\nexport class FreudLoaderModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FreudLoaderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FreudLoaderComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FreudTooltipModule",
            "id": "module-FreudTooltipModule-c31bc979321716fc68661d616613b2f3c836f9409a6a7f3a5663b47b870173c1a05e15f67cc72a61681a4f54971beed8957f7b47d57741c505f5785f4d3a5d46",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "apps/core-web/src/app/components/tooltip/tooltip.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FreudTooltipComponent } from './tooltip.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [FreudTooltipComponent],\n  exports: [FreudTooltipComponent]\n})\nexport class FreudTooltipModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FreudTooltipComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FreudTooltipComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "avatarSizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/core-web/src/app/components/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\n  <div style=\"display: flex; align-items: center; justify-content: center; padding: 64px 32px; gap: 24px\">\n    <freud-avatar size=\"xs\" letter=\"Z\"></freud-avatar>\n    <freud-avatar size=\"sm\" letter=\"Z\"></freud-avatar>\n    <freud-avatar size=\"md\" letter=\"Z\"></freud-avatar>\n    <freud-avatar size=\"lg\" letter=\"Z\"></freud-avatar>\n    <freud-avatar size=\"xl\" letter=\"Z\"></freud-avatar>\n  </div>\n\n  <div style=\"display: flex; align-items: center; justify-content: center; gap: 24px; margin: -48px \">\n    <freud-avatar size=\"xs\" [imgSrc]=\"imgSrc\"></freud-avatar>\n    <freud-avatar size=\"sm\" [imgSrc]=\"imgSrc\"></freud-avatar>\n    <freud-avatar size=\"md\" [imgSrc]=\"imgSrc\"></freud-avatar>\n    <freud-avatar size=\"lg\" [imgSrc]=\"imgSrc\"></freud-avatar>\n    <freud-avatar size=\"xl\" [imgSrc]=\"imgSrc\"></freud-avatar>\n  </div>\n\n  <div style=\"display: flex; align-items: center; justify-content: center; padding: 64px 32px; gap: 24px; background-color: #6732D1\">\n    <freud-avatar size=\"xs\" letter=\"Z\" theme=\"dark\"></freud-avatar>\n    <freud-avatar size=\"sm\" letter=\"Z\" theme=\"dark\"></freud-avatar>\n    <freud-avatar size=\"md\" letter=\"Z\" theme=\"dark\"></freud-avatar>\n    <freud-avatar size=\"lg\" letter=\"Z\" theme=\"dark\"></freud-avatar>\n    <freud-avatar size=\"xl\" letter=\"Z\" theme=\"dark\"></freud-avatar>\n  </div>\n`"
            },
            {
                "name": "card",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/core-web/src/app/components/grid/grid.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\n  <div class=\"\">\n    Conteudo em construÃ§Ã£o\n  </div>\n`"
            },
            {
                "name": "cardSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/core-web/src/app/components/grid/grid.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "500"
            },
            {
                "name": "colors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/core-web/src/app/components/tooltip/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  return {\n    template: tooltipColors,\n  };\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/core-web/src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/core-web/src/app/components/loader/loader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  return {\n    template: loaders,\n  };\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/core-web/src/app/components/grid/grid.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  return {\n    template: card,\n  };\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/core-web/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/core-web/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n}"
            },
            {
                "name": "loaders",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/core-web/src/app/components/loader/loader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\n  <div style=\"display: flex; align-items: center; justify-content: center; padding: 64px 32px; gap: 24px\">\n    <freud-loader size=\"sm\"></freud-loader>\n    <freud-loader size=\"lg\"></freud-loader>\n  </div>\n\n  <div style=\"display: flex; align-items: center; justify-content: center; padding: 64px 32px; gap: 24px; background-color: #6732D1\">\n    <freud-loader size=\"sm\" theme=\"dark\"></freud-loader>\n    <freud-loader size=\"lg\" theme=\"dark\"></freud-loader>\n  </div>\n`"
            },
            {
                "name": "sizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/core-web/src/app/components/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  return {\n    template: avatarSizes,\n    props: {\n      imgSrc: '/assets/img/avatar.png',\n    }\n  };\n}"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/core-web/src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudButtonComponent>",
                "defaultValue": "(args: FreudButtonComponent) => ({\n  props: { ...args },\n  template: `\n    <button\n      freud-button\n      [size]=\"size\"\n      [color]=\"color\"\n      [theme]=\"theme\"\n      [loading]=\"loading\"\n    >{{ label }}</button>\n  `\n})"
            },
            {
                "name": "tooltipColors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/core-web/src/app/components/tooltip/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\n  <div style=\"display: flex; align-items: center; justify-content: center; padding: 56px 32px; gap: 24px\">\n    <freud-tooltip text=\"Tooltip\" position=\"top\" theme=\"light\">\n      <button freud-button color=\"primary\" theme=\"light\" size=\"sm\">TOP</button>\n    </freud-tooltip>\n\n    <freud-tooltip text=\"Tooltip\" position=\"bottom\" theme=\"light\">\n      <button freud-button color=\"primary\" theme=\"light\" size=\"sm\">BOTTOM</button>\n    </freud-tooltip>\n  </div>\n\n  <div style=\"display: flex; align-items: center; justify-content: center; padding: 0 32px 56px 32px; gap: 24px\">\n    <freud-tooltip text=\"Tooltip\" position=\"left\" theme=\"light\">\n      <button freud-button color=\"primary\" theme=\"light\" size=\"sm\">LEFT</button>\n    </freud-tooltip>\n\n    <freud-tooltip text=\"Tooltip\" position=\"right\" theme=\"light\">\n      <button freud-button color=\"primary\" theme=\"light\" size=\"sm\">RIGHT</button>\n    </freud-tooltip>\n  </div>\n\n  <div style=\"display: flex; align-items: center; justify-content: center; padding: 56px 32px; background-color: #6732D1; gap: 24px\">\n    <freud-tooltip text=\"Tooltip\" position=\"top\" theme=\"dark\">\n      <button freud-button color=\"primary\" theme=\"dark\" size=\"sm\">TOP</button>\n    </freud-tooltip>\n\n    <freud-tooltip text=\"Tooltip\" position=\"bottom\" theme=\"dark\">\n      <button freud-button color=\"primary\" theme=\"dark\" size=\"sm\">BOTTOM</button>\n    </freud-tooltip>\n  </div>\n\n  <div style=\"display: flex; align-items: center; justify-content: center; padding: 0 32px 56px 32px; background-color: #6732D1; gap: 24px\">\n    <freud-tooltip text=\"Tooltip\" position=\"left\" theme=\"dark\">\n      <button freud-button color=\"primary\" theme=\"dark\" size=\"sm\">LEFT</button>\n    </freud-tooltip>\n\n    <freud-tooltip text=\"Tooltip\" position=\"right\" theme=\"dark\">\n      <button freud-button color=\"primary\" theme=\"dark\" size=\"sm\">RIGHT</button>\n    </freud-tooltip>\n  </div>\n`"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "avatarSizes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\"",
                "file": "apps/core-web/src/app/components/avatar/avatar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "avatarThemes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"light\" | \"dark\"",
                "file": "apps/core-web/src/app/components/avatar/avatar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "buttonColors",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"ghost\"",
                "file": "apps/core-web/src/app/components/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "buttonSizes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"sm\" | \"md\" | \"lg\"",
                "file": "apps/core-web/src/app/components/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "buttonThemes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"light\" | \"dark\"",
                "file": "apps/core-web/src/app/components/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "loaderSizes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"sm\" | \"lg\"",
                "file": "apps/core-web/src/app/components/loader/loader.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "loaderThemes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"light\" | \"dark\"",
                "file": "apps/core-web/src/app/components/loader/loader.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "tooltipPositions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"top\" | \"bottom\" | \"left\" | \"right\"",
                "file": "apps/core-web/src/app/components/tooltip/tooltip.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "tooltipThemes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"light\" | \"dark\"",
                "file": "apps/core-web/src/app/components/tooltip/tooltip.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "apps/core-web/src/app/components/avatar/avatar.stories.ts": [
                {
                    "name": "avatarSizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/core-web/src/app/components/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\n  <div style=\"display: flex; align-items: center; justify-content: center; padding: 64px 32px; gap: 24px\">\n    <freud-avatar size=\"xs\" letter=\"Z\"></freud-avatar>\n    <freud-avatar size=\"sm\" letter=\"Z\"></freud-avatar>\n    <freud-avatar size=\"md\" letter=\"Z\"></freud-avatar>\n    <freud-avatar size=\"lg\" letter=\"Z\"></freud-avatar>\n    <freud-avatar size=\"xl\" letter=\"Z\"></freud-avatar>\n  </div>\n\n  <div style=\"display: flex; align-items: center; justify-content: center; gap: 24px; margin: -48px \">\n    <freud-avatar size=\"xs\" [imgSrc]=\"imgSrc\"></freud-avatar>\n    <freud-avatar size=\"sm\" [imgSrc]=\"imgSrc\"></freud-avatar>\n    <freud-avatar size=\"md\" [imgSrc]=\"imgSrc\"></freud-avatar>\n    <freud-avatar size=\"lg\" [imgSrc]=\"imgSrc\"></freud-avatar>\n    <freud-avatar size=\"xl\" [imgSrc]=\"imgSrc\"></freud-avatar>\n  </div>\n\n  <div style=\"display: flex; align-items: center; justify-content: center; padding: 64px 32px; gap: 24px; background-color: #6732D1\">\n    <freud-avatar size=\"xs\" letter=\"Z\" theme=\"dark\"></freud-avatar>\n    <freud-avatar size=\"sm\" letter=\"Z\" theme=\"dark\"></freud-avatar>\n    <freud-avatar size=\"md\" letter=\"Z\" theme=\"dark\"></freud-avatar>\n    <freud-avatar size=\"lg\" letter=\"Z\" theme=\"dark\"></freud-avatar>\n    <freud-avatar size=\"xl\" letter=\"Z\" theme=\"dark\"></freud-avatar>\n  </div>\n`"
                },
                {
                    "name": "sizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/core-web/src/app/components/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  return {\n    template: avatarSizes,\n    props: {\n      imgSrc: '/assets/img/avatar.png',\n    }\n  };\n}"
                }
            ],
            "apps/core-web/src/app/components/grid/grid.stories.ts": [
                {
                    "name": "card",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/core-web/src/app/components/grid/grid.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\n  <div class=\"\">\n    Conteudo em construÃ§Ã£o\n  </div>\n`"
                },
                {
                    "name": "cardSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/core-web/src/app/components/grid/grid.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "500"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/core-web/src/app/components/grid/grid.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  return {\n    template: card,\n  };\n}"
                }
            ],
            "apps/core-web/src/app/components/tooltip/tooltip.stories.ts": [
                {
                    "name": "colors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/core-web/src/app/components/tooltip/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  return {\n    template: tooltipColors,\n  };\n}"
                },
                {
                    "name": "tooltipColors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/core-web/src/app/components/tooltip/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\n  <div style=\"display: flex; align-items: center; justify-content: center; padding: 56px 32px; gap: 24px\">\n    <freud-tooltip text=\"Tooltip\" position=\"top\" theme=\"light\">\n      <button freud-button color=\"primary\" theme=\"light\" size=\"sm\">TOP</button>\n    </freud-tooltip>\n\n    <freud-tooltip text=\"Tooltip\" position=\"bottom\" theme=\"light\">\n      <button freud-button color=\"primary\" theme=\"light\" size=\"sm\">BOTTOM</button>\n    </freud-tooltip>\n  </div>\n\n  <div style=\"display: flex; align-items: center; justify-content: center; padding: 0 32px 56px 32px; gap: 24px\">\n    <freud-tooltip text=\"Tooltip\" position=\"left\" theme=\"light\">\n      <button freud-button color=\"primary\" theme=\"light\" size=\"sm\">LEFT</button>\n    </freud-tooltip>\n\n    <freud-tooltip text=\"Tooltip\" position=\"right\" theme=\"light\">\n      <button freud-button color=\"primary\" theme=\"light\" size=\"sm\">RIGHT</button>\n    </freud-tooltip>\n  </div>\n\n  <div style=\"display: flex; align-items: center; justify-content: center; padding: 56px 32px; background-color: #6732D1; gap: 24px\">\n    <freud-tooltip text=\"Tooltip\" position=\"top\" theme=\"dark\">\n      <button freud-button color=\"primary\" theme=\"dark\" size=\"sm\">TOP</button>\n    </freud-tooltip>\n\n    <freud-tooltip text=\"Tooltip\" position=\"bottom\" theme=\"dark\">\n      <button freud-button color=\"primary\" theme=\"dark\" size=\"sm\">BOTTOM</button>\n    </freud-tooltip>\n  </div>\n\n  <div style=\"display: flex; align-items: center; justify-content: center; padding: 0 32px 56px 32px; background-color: #6732D1; gap: 24px\">\n    <freud-tooltip text=\"Tooltip\" position=\"left\" theme=\"dark\">\n      <button freud-button color=\"primary\" theme=\"dark\" size=\"sm\">LEFT</button>\n    </freud-tooltip>\n\n    <freud-tooltip text=\"Tooltip\" position=\"right\" theme=\"dark\">\n      <button freud-button color=\"primary\" theme=\"dark\" size=\"sm\">RIGHT</button>\n    </freud-tooltip>\n  </div>\n`"
                }
            ],
            "apps/core-web/src/app/components/button/button.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/core-web/src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/core-web/src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudButtonComponent>",
                    "defaultValue": "(args: FreudButtonComponent) => ({\n  props: { ...args },\n  template: `\n    <button\n      freud-button\n      [size]=\"size\"\n      [color]=\"color\"\n      [theme]=\"theme\"\n      [loading]=\"loading\"\n    >{{ label }}</button>\n  `\n})"
                }
            ],
            "apps/core-web/src/app/components/loader/loader.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/core-web/src/app/components/loader/loader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  return {\n    template: loaders,\n  };\n}"
                },
                {
                    "name": "loaders",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/core-web/src/app/components/loader/loader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\n  <div style=\"display: flex; align-items: center; justify-content: center; padding: 64px 32px; gap: 24px\">\n    <freud-loader size=\"sm\"></freud-loader>\n    <freud-loader size=\"lg\"></freud-loader>\n  </div>\n\n  <div style=\"display: flex; align-items: center; justify-content: center; padding: 64px 32px; gap: 24px; background-color: #6732D1\">\n    <freud-loader size=\"sm\" theme=\"dark\"></freud-loader>\n    <freud-loader size=\"lg\" theme=\"dark\"></freud-loader>\n  </div>\n`"
                }
            ],
            "apps/core-web/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/core-web/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n}"
                }
            ],
            "apps/core-web/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/core-web/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "apps/core-web/src/app/components/avatar/avatar.component.ts": [
                {
                    "name": "avatarSizes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\"",
                    "file": "apps/core-web/src/app/components/avatar/avatar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "avatarThemes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"light\" | \"dark\"",
                    "file": "apps/core-web/src/app/components/avatar/avatar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "apps/core-web/src/app/components/button/button.component.ts": [
                {
                    "name": "buttonColors",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"ghost\"",
                    "file": "apps/core-web/src/app/components/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "buttonSizes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"sm\" | \"md\" | \"lg\"",
                    "file": "apps/core-web/src/app/components/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "buttonThemes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"light\" | \"dark\"",
                    "file": "apps/core-web/src/app/components/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "apps/core-web/src/app/components/loader/loader.component.ts": [
                {
                    "name": "loaderSizes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"sm\" | \"lg\"",
                    "file": "apps/core-web/src/app/components/loader/loader.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "loaderThemes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"light\" | \"dark\"",
                    "file": "apps/core-web/src/app/components/loader/loader.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "apps/core-web/src/app/components/tooltip/tooltip.component.ts": [
                {
                    "name": "tooltipPositions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"top\" | \"bottom\" | \"left\" | \"right\"",
                    "file": "apps/core-web/src/app/components/tooltip/tooltip.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "tooltipThemes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"light\" | \"dark\"",
                    "file": "apps/core-web/src/app/components/tooltip/tooltip.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "apps/core-web/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "apps/core-web/src/app/components/avatar/avatar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FreudAvatarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "apps/core-web/src/app/components/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "avatarSizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/core-web/src/app/components/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/core-web/src/app/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FreudButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "apps/core-web/src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/core-web/src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/core-web/src/app/components/grid/grid.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "card",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/core-web/src/app/components/grid/grid.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "cardSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/core-web/src/app/components/grid/grid.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/core-web/src/app/components/loader/loader.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FreudLoaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "apps/core-web/src/app/components/loader/loader.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/core-web/src/app/components/loader/loader.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loaders",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/core-web/src/app/components/tooltip/tooltip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FreudTooltipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "apps/core-web/src/app/components/tooltip/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "colors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/core-web/src/app/components/tooltip/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "tooltipColors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/core-web/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/core-web/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}