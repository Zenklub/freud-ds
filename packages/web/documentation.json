{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "ChipComponent",
            "id": "component-ChipComponent-8f046df4b38f304164c6233b06770d82908c26daf3051974b3163dfec6c1d2c11452b9816cbfb9c62d8d177b2706278ae5db24a828912a3f73ea79cb0cd2df24",
            "file": "projects/web-components/src/components/header/chip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-chip",
            "styleUrls": [
                "./chip.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./chip.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-chip',\n  templateUrl: './chip.component.html',\n  styleUrls: ['./chip.component.scss']\n})\nexport class ChipComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./chip.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>chip works!</p>\n"
        },
        {
            "name": "ChipComponent",
            "id": "component-ChipComponent-df008d0e733fb0a41c96ad99b42db18a5a6b0954d83dfd39108a96fa770067052b4d3b20762e5d8085b12c674af0a4ec4119d7c35829e815e62f21f10f280028-1",
            "file": "projects/web-components/src/components/chip/chip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-chip",
            "styleUrls": [
                "./chip.component.scss"
            ],
            "styles": [],
            "template": "./chip.component.html",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-chip',\n  template: `./chip.component.html`,\n  styleUrls: ['./chip.component.scss']\n})\nexport class ChipComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./chip.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ChipComponent-1"
        },
        {
            "name": "FreudAvatarComponent",
            "id": "component-FreudAvatarComponent-a26ebada00f52f0c26267eb89c45d94c48471bba334eb25947d75050aa6700dc750b7d92bdf5050d81f85bd6c8b346b23e90ad113d171c591660f6dade814648",
            "file": "projects/web-components/src/components/avatar/avatar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "freud-avatar",
            "styleUrls": [
                "./avatar.component.scss"
            ],
            "styles": [],
            "template": "<p-avatar\n  [label]=\"image ? '' : label\"\n  shape=\"circle\"\n  freudBadge\n  value=\"1\"\n  [image]=\"image\">\n</p-avatar>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "badge",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "bgColor",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "iconName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "image",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "avatarSizes",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\ntype avatarSizes = 'sm' | 'md' | 'lg';\n@Component({\n  selector: 'freud-avatar',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <p-avatar\n      [label]=\"image ? '' : label\"\n      shape=\"circle\"\n      freudBadge\n      value=\"1\"\n      [image]=\"image\">\n    </p-avatar>\n  `,\n  styleUrls: ['./avatar.component.scss'],\n  host: {\n    class: 'freud-avatar',\n    '[class.freud-avatar-color-primary]': `!['secondary', 'ghost'].includes(color)`,\n    '[class.freud-avatar-color-secondary]': `color === 'secondary'`,\n    '[class.freud-avatar-color-ghost]': `color === 'ghost'`,\n\n    '[class.freud-avatar-bgcolor]': `bgColor`,\n\n    '[class.freud-avatar-size-small]': `size === 'sm'`,\n    '[class.freud-avatar-size-medium]': `size === 'md'`,\n    '[class.freud-avatar-size-large]': `size === 'lg'`,\n  }\n})\nexport class FreudAvatarComponent {\n\n  @Input() size: avatarSizes = 'md';\n  @Input() label: string = '';\n  @Input() iconName: string = '';\n  @Input() bgColor: boolean = false;\n  @Input() badge: string = ''; \n  @Input() image: string = '';\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// TODO: Verificar o import\r\n@import '../../../../../../tokens/dist/style/scss/_variables.scss';\r\n\r\n.freud-avatar .p-avatar {\r\n    font-family: $font-family-base;\r\n}\r\n\r\n.freud-avatar-size-small .p-avatar {\r\n    width: 28px;\r\n    height: 28px;\r\n    font-size: $font-size-xs;\r\n}\r\n\r\n.freud-avatar-size-medium .p-avatar {\r\n    width: 42px;\r\n    height: 42px;\r\n    font-size: $font-size-xs;\r\n}\r\n\r\n.freud-avatar-size-large .p-avatar {\r\n    width: 56px;\r\n    height: 56px;\r\n    font-size: $font-size-md;\r\n}\r\n\r\n.freud-avatar:not(.freud-avatar-bgcolor) .p-avatar {\r\n    background-color: $neutral-color-light-02;\r\n    color: $neutral-color-dark-03;\r\n}\r\n\r\n.freud-avatar.freud-avatar-bgcolor .p-avatar {\r\n    background-color: $brand-color-03;\r\n    color: $neutral-color-white;\r\n}",
                    "styleUrl": "./avatar.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "FreudBadgeComponent",
            "id": "component-FreudBadgeComponent-29b78429badcaf2ea901f463d6464adb44a289c1946645bbf9a51a6095a5ed7646ca872fcd5033763701c856de6d9d33c94e8f28863fb5d7a441af5eabe9466b",
            "file": "projects/web-components/src/components/badge/badge.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "freud-badge",
            "styleUrls": [
                "./badge.component.scss"
            ],
            "styles": [],
            "template": "<p-badge [value]=\"value!\" class=\"freud-color-{{color}}\"></p-badge>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 122,
                    "type": "colors",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 121,
                    "type": "sizes",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 120,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, ChangeDetectionStrategy,\n  Component, Directive, ElementRef, Input, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { UniqueComponentId } from 'primeng/utils';\nimport { DomHandler } from 'primeng/dom';\n\n\ntype sizes = 'sm' | 'md';\ntype colors = 'primary' | 'success' | 'info' | 'warning' | 'error' | 'actived';\ntype BadgeDirectiveIconPosition = 'left' | 'right' | 'top' | 'bottom';\n\n@Component({\n  selector: '[freudBadge]',\n  styleUrls: ['./badge.component.scss'],\n  exportAs: 'freudBadge',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `<ng-content></ng-content> `,\n  host: {\n      class: 'p-element'\n  }\n})\nexport class FreudBadgeDirective implements AfterViewInit, OnDestroy {\n  @Input() iconPos: BadgeDirectiveIconPosition = 'left';\n\n  public _value!: string;\n\n  public initialized!: boolean;\n\n  private id!: string;\n\n  constructor(public el: ElementRef) {}\n\n  ngAfterViewInit() {\n      this.id = UniqueComponentId() + '_badge';\n      let el = this.el.nativeElement.nodeName.indexOf('-') != -1 ? this.el.nativeElement.firstChild : this.el.nativeElement;\n\n      let badge = document.createElement('freud-badge');\n      badge.className = 'freud-badge';\n      if (this.size === 'sm') {\n        badge.classList.add('size-small');\n      }\n      let badgeP = document.createElement('p-badge');\n      badgeP.className = `freud-color-${this.color}`;\n\n      let badgeSpan = document.createElement('span');\n      badgeSpan.className = 'p-badge p-component';\n      badgeSpan.id = this.id;\n\n      badgeP.appendChild(badgeSpan);\n      badge.appendChild(badgeP);\n\n      if (this.value != null) {\n        badgeSpan.appendChild(document.createTextNode(this.value));\n\n          if (String(this.value).length === 1) {\n              DomHandler.addClass(badgeSpan, 'p-badge-no-gutter');\n          }\n      } else {\n          DomHandler.addClass(badgeSpan, 'p-badge-dot');\n      }\n\n      DomHandler.addClass(el, 'p-overlay-badge');\n      el.appendChild(badge);\n\n      this.initialized = true;\n  }\n\n  @Input() get value(): string {\n      return this._value;\n  }\n\n  set value(val: string) {\n      if (val !== this._value) {\n          this._value = val;\n\n          if (this.initialized) {\n              let badgeSpan = document.getElementById(this.id)!;\n\n              if (this._value) {\n                  if (DomHandler.hasClass(badgeSpan, 'p-badge-dot')) DomHandler.removeClass(badgeSpan, 'p-badge-dot');\n\n                  if (String(this._value).length === 1) {\n                      DomHandler.addClass(badgeSpan, 'p-badge-no-gutter');\n                  } else {\n                      DomHandler.removeClass(badgeSpan, 'p-badge-no-gutter');\n                  }\n              } else if (!this._value && !DomHandler.hasClass(badgeSpan, 'p-badge-dot')) {\n                  DomHandler.addClass(badgeSpan, 'p-badge-dot');\n              }\n\n              badgeSpan.innerHTML = '';\n              badgeSpan.appendChild(document.createTextNode(this._value));\n          }\n      }\n  }\n\n  @Input() size: sizes = 'md';\n  @Input() color: colors = 'primary';\n\n  ngOnDestroy() {\n      this.initialized = false;\n  }\n}\n\n@Component({\n  selector: 'freud-badge',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <p-badge [value]=\"value!\" class=\"freud-color-{{color}}\"></p-badge>\n  `,\n  styleUrls: ['./badge.component.scss'],\n  host: {\n    class: 'freud-badge',\n    '[class.size-small]':  'size === \"sm\"'\n  }\n})\nexport class FreudBadgeComponent {\n\n  @Input() value: string = '';\n  @Input() size: sizes = 'md';\n  @Input() color: colors = 'primary';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../../../tokens/dist/style/scss/_variables.scss';\r\n\r\n.freud-badge span.p-badge {\r\n    background-color: $brand-color-pure;\r\n    font-weight: $font-weight-bold;\r\n    font-family: $font-family-base;\r\n    display: inline-block;\r\n}\r\n\r\n.freud-badge {\r\n  .freud-color-success span {\r\n    background-color: $feedback-color-positive-04;\r\n  }\r\n  .freud-color-info span {\r\n    background-color: $feedback-color-neutral-pure;\r\n  }\r\n  .freud-color-warning span {\r\n    background-color: $feedback-color-warning-pure;\r\n    color: $neutral-color-black;\r\n  }\r\n  .freud-color-error span {\r\n    background-color: $feedback-color-negative-04;\r\n  }\r\n  .freud-color-actived span {\r\n    background-color: $complementary-color-like-03;\r\n  }\r\n}\r\n\r\n.freud-badge:not(.size-small) span.p-badge {\r\n    border-radius: 12px;\r\n    font-size: $font-size-xs;\r\n    display: inline-block;\r\n    line-height: 24px;\r\n}\r\n.freud-badge.size-small span.p-badge {\r\n    border-radius: $border-radius-md;\r\n    min-width: 16px;\r\n    height: 16px;\r\n    line-height: 16px;\r\n}\r\n",
                    "styleUrl": "./badge.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "FreudBadgeDirective",
            "id": "component-FreudBadgeDirective-29b78429badcaf2ea901f463d6464adb44a289c1946645bbf9a51a6095a5ed7646ca872fcd5033763701c856de6d9d33c94e8f28863fb5d7a441af5eabe9466b",
            "file": "projects/web-components/src/components/badge/badge.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "exportAs": "freudBadge",
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[freudBadge]",
            "styleUrls": [
                "./badge.component.scss"
            ],
            "styles": [],
            "template": "<ng-content></ng-content>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 98,
                    "type": "colors",
                    "decorators": []
                },
                {
                    "name": "iconPos",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "BadgeDirectiveIconPosition",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 97,
                    "type": "sizes",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "el",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "initialized",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, ChangeDetectionStrategy,\n  Component, Directive, ElementRef, Input, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { UniqueComponentId } from 'primeng/utils';\nimport { DomHandler } from 'primeng/dom';\n\n\ntype sizes = 'sm' | 'md';\ntype colors = 'primary' | 'success' | 'info' | 'warning' | 'error' | 'actived';\ntype BadgeDirectiveIconPosition = 'left' | 'right' | 'top' | 'bottom';\n\n@Component({\n  selector: '[freudBadge]',\n  styleUrls: ['./badge.component.scss'],\n  exportAs: 'freudBadge',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `<ng-content></ng-content> `,\n  host: {\n      class: 'p-element'\n  }\n})\nexport class FreudBadgeDirective implements AfterViewInit, OnDestroy {\n  @Input() iconPos: BadgeDirectiveIconPosition = 'left';\n\n  public _value!: string;\n\n  public initialized!: boolean;\n\n  private id!: string;\n\n  constructor(public el: ElementRef) {}\n\n  ngAfterViewInit() {\n      this.id = UniqueComponentId() + '_badge';\n      let el = this.el.nativeElement.nodeName.indexOf('-') != -1 ? this.el.nativeElement.firstChild : this.el.nativeElement;\n\n      let badge = document.createElement('freud-badge');\n      badge.className = 'freud-badge';\n      if (this.size === 'sm') {\n        badge.classList.add('size-small');\n      }\n      let badgeP = document.createElement('p-badge');\n      badgeP.className = `freud-color-${this.color}`;\n\n      let badgeSpan = document.createElement('span');\n      badgeSpan.className = 'p-badge p-component';\n      badgeSpan.id = this.id;\n\n      badgeP.appendChild(badgeSpan);\n      badge.appendChild(badgeP);\n\n      if (this.value != null) {\n        badgeSpan.appendChild(document.createTextNode(this.value));\n\n          if (String(this.value).length === 1) {\n              DomHandler.addClass(badgeSpan, 'p-badge-no-gutter');\n          }\n      } else {\n          DomHandler.addClass(badgeSpan, 'p-badge-dot');\n      }\n\n      DomHandler.addClass(el, 'p-overlay-badge');\n      el.appendChild(badge);\n\n      this.initialized = true;\n  }\n\n  @Input() get value(): string {\n      return this._value;\n  }\n\n  set value(val: string) {\n      if (val !== this._value) {\n          this._value = val;\n\n          if (this.initialized) {\n              let badgeSpan = document.getElementById(this.id)!;\n\n              if (this._value) {\n                  if (DomHandler.hasClass(badgeSpan, 'p-badge-dot')) DomHandler.removeClass(badgeSpan, 'p-badge-dot');\n\n                  if (String(this._value).length === 1) {\n                      DomHandler.addClass(badgeSpan, 'p-badge-no-gutter');\n                  } else {\n                      DomHandler.removeClass(badgeSpan, 'p-badge-no-gutter');\n                  }\n              } else if (!this._value && !DomHandler.hasClass(badgeSpan, 'p-badge-dot')) {\n                  DomHandler.addClass(badgeSpan, 'p-badge-dot');\n              }\n\n              badgeSpan.innerHTML = '';\n              badgeSpan.appendChild(document.createTextNode(this._value));\n          }\n      }\n  }\n\n  @Input() size: sizes = 'md';\n  @Input() color: colors = 'primary';\n\n  ngOnDestroy() {\n      this.initialized = false;\n  }\n}\n\n@Component({\n  selector: 'freud-badge',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <p-badge [value]=\"value!\" class=\"freud-color-{{color}}\"></p-badge>\n  `,\n  styleUrls: ['./badge.component.scss'],\n  host: {\n    class: 'freud-badge',\n    '[class.size-small]':  'size === \"sm\"'\n  }\n})\nexport class FreudBadgeComponent {\n\n  @Input() value: string = '';\n  @Input() size: sizes = 'md';\n  @Input() color: colors = 'primary';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../../../tokens/dist/style/scss/_variables.scss';\r\n\r\n.freud-badge span.p-badge {\r\n    background-color: $brand-color-pure;\r\n    font-weight: $font-weight-bold;\r\n    font-family: $font-family-base;\r\n    display: inline-block;\r\n}\r\n\r\n.freud-badge {\r\n  .freud-color-success span {\r\n    background-color: $feedback-color-positive-04;\r\n  }\r\n  .freud-color-info span {\r\n    background-color: $feedback-color-neutral-pure;\r\n  }\r\n  .freud-color-warning span {\r\n    background-color: $feedback-color-warning-pure;\r\n    color: $neutral-color-black;\r\n  }\r\n  .freud-color-error span {\r\n    background-color: $feedback-color-negative-04;\r\n  }\r\n  .freud-color-actived span {\r\n    background-color: $complementary-color-like-03;\r\n  }\r\n}\r\n\r\n.freud-badge:not(.size-small) span.p-badge {\r\n    border-radius: 12px;\r\n    font-size: $font-size-xs;\r\n    display: inline-block;\r\n    line-height: 24px;\r\n}\r\n.freud-badge.size-small span.p-badge {\r\n    border-radius: $border-radius-md;\r\n    min-width: 16px;\r\n    height: 16px;\r\n    line-height: 16px;\r\n}\r\n",
                    "styleUrl": "./badge.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "OnDestroy"
            ],
            "accessors": {
                "value": {
                    "name": "value",
                    "setSignature": {
                        "name": "value",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "val",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 72,
                        "jsdoctags": [
                            {
                                "name": "val",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "value",
                        "type": "string",
                        "returnType": "string",
                        "line": 68
                    }
                }
            }
        },
        {
            "name": "FreudButtonComponent",
            "id": "component-FreudButtonComponent-4b197284d2b4c8b7c7d09b2a030578a6f394f3d31a9f104e9968fd58ed68ecfbc8f90529db34aa795d0c9e3524d09143fc7d6c2e8cec3b363c6b511e0480ef82",
            "file": "projects/web-components/src/components/button/button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "freud-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "template": "<p-button [disabled]=\"disabled\" [loading]=\"loading\">\n  <div class=\"button-content\"><ng-content></ng-content></div>\n</p-button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "bgColor",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "buttonColors",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "buttonSizes",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\r\n\r\ntype buttonSizes = 'sm' | 'md' | 'lg';\r\ntype buttonColors = 'primary' | 'secondary' | 'ghost';\r\n\r\n@Component({\r\n  selector: 'freud-button',\r\n  styleUrls: ['./button.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: `\r\n    <p-button [disabled]=\"disabled\" [loading]=\"loading\">\r\n      <div class=\"button-content\"><ng-content></ng-content></div>\r\n    </p-button>\r\n  `,\r\n  host: {\r\n    class: 'freud-btn',\r\n    '[class.freud-btn-color-primary]': `!['secondary', 'ghost'].includes(color)`,\r\n    '[class.freud-btn-color-secondary]': `color === 'secondary'`,\r\n    '[class.freud-btn-color-ghost]': `color === 'ghost'`,\r\n\r\n    '[class.freud-btn-bgcolor]': `bgColor`,\r\n    '[class.freud-btn-loading]': `loading`,\r\n\r\n    '[class.freud-btn-size-small]': `size === 'sm'`,\r\n    '[class.freud-btn-size-medium]': `size === 'md'`,\r\n    '[class.freud-btn-size-large]': `size === 'lg'`,\r\n  }\r\n})\r\nexport class FreudButtonComponent {\r\n\r\n  @Input() size: buttonSizes = 'md';\r\n  @Input() color: buttonColors = 'primary';\r\n  @Input() bgColor = false;\r\n  @Input() disabled = false;\r\n  @Input() loading = false;\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// TODO: Verificar o import\r\n@import '../../../../../../tokens/dist/style/scss/_variables.scss';\r\n\r\n.freud-btn:not(.freud-btn-bgcolor) {\r\n  &.freud-btn-color-primary {\r\n    $freud-btn-background: $brand-color-pure;\r\n    $freud-btn-color: $neutral-color-white;\r\n    $freud-btn-border: $brand-color-pure;\r\n    .p-button {\r\n      background-color: $freud-btn-background;\r\n      border-color: $freud-btn-border;\r\n      color: $freud-btn-color;\r\n    }\r\n  }\r\n  \r\n  &.freud-btn-color-secondary {\r\n    $freud-btn-background: $neutral-color-white;\r\n    $freud-btn-color: $brand-color-pure;\r\n    $freud-btn-border: $brand-color-pure;\r\n    .p-button {\r\n      background-color: $freud-btn-background;\r\n      border-color: $freud-btn-border;\r\n      color: $freud-btn-color;\r\n    }\r\n  }\r\n  \r\n  &.freud-btn-color-ghost {\r\n    $freud-btn-background: transparent;\r\n    $freud-btn-color: $brand-color-pure;\r\n    $freud-btn-border: transparent;\r\n    .p-button {\r\n      background-color: $freud-btn-background;\r\n      border-color: $freud-btn-border;\r\n      color: $freud-btn-color;\r\n    }\r\n  }\r\n\r\n  .p-button:enabled:hover {\r\n    background: $brand-color-01;\r\n    border-color: $brand-color-01;\r\n    color: $brand-color-pure;\r\n  }\r\n}\r\n\r\n.freud-btn.freud-btn-bgcolor {\r\n  &.freud-btn-color-primary {\r\n    .p-button {\r\n      background-color: $neutral-color-white;\r\n      border-color: $neutral-color-white;\r\n      color: $brand-color-pure;\r\n    }\r\n  }\r\n  \r\n  &.freud-btn-color-secondary {\r\n    .p-button {\r\n      background-color: $brand-color-pure;\r\n      border-color: $neutral-color-white;\r\n      color: $neutral-color-white;\r\n    }\r\n  }\r\n  \r\n  &.freud-btn-color-ghost {\r\n    .p-button {\r\n      background-color: transparent;\r\n      border-color: transparent;\r\n      color: $neutral-color-white;\r\n    }\r\n  }\r\n\r\n  .p-button[disabled] {\r\n    opacity: $opacity-level-5;\r\n    color: $brand-color-pure;\r\n  }\r\n\r\n  .p-button:enabled:hover {\r\n    background: $brand-color-03;\r\n    border-color: $brand-color-03;\r\n    color: $neutral-color-white;\r\n  }\r\n}\r\n\r\n\r\n.freud-btn .p-button {\r\n  font-family: $font-family-base;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: $border-radius-md;\r\n  font-weight: $font-weight-bold;\r\n  &[disabled] {\r\n    opacity: $opacity-level-5;\r\n  }\r\n  &:focus {\r\n    box-shadow: unset;\r\n  }\r\n}\r\n\r\n\r\n.freud-btn-size-small {\r\n  .p-button {\r\n    font-size: $font-size-xxs;\r\n    padding: 0 $spacing-size-nano;\r\n    height: 32px;\r\n  }\r\n}\r\n\r\n.freud-btn-size-medium {\r\n  .p-button {\r\n    padding: 0 $spacing-size-xxxs;\r\n    height: 40px;\r\n  }\r\n}\r\n\r\n.freud-btn-size-large {\r\n  .p-button {\r\n    padding: 0 $spacing-size-xxs;\r\n    height: 48px;\r\n  }\r\n}\r\n\r\n.button-content:not(:empty) + .p-button-icon {\r\n  margin-left: $spacing-size-xxxs;\r\n}\r\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "FreudHeaderComponent",
            "id": "component-FreudHeaderComponent-9b7bfa49224a9e8c7e600ed32c9713e6aad67aa3da17694f47d0728a4e620326aeac2bcdb09ee372e57d3f1474480ac5f3f9e787401776aeb0091be87ec0c263",
            "file": "stories/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "freud-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "template": "<div class=\"header\">\n  <div class=\"container\">\n    <h2 class=\"title\">{{title}}</h2>\n    <p>{{description}}</p>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'freud-header',\n  template: `\n    <div class=\"header\">\n      <div class=\"container\">\n        <h2 class=\"title\">{{title}}</h2>\n        <p>{{description}}</p>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./header.component.scss']\n})\nexport class FreudHeaderComponent {\n\n  @Input() title!: string;\n  @Input() description!: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// TODO: Verificar o import\r\n@import '../../../tokens/dist/style/scss/_variables.scss';\r\n\r\ndiv.header {\r\n  font-family: $font-family-base;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  margin-bottom: 32px;\r\n  background: url(./bg.png) center no-repeat;\r\n  z-index: 0;\r\n\r\n  & > div {\r\n    width: 100%;\r\n    z-index: 1;\r\n  }\r\n}\r\n\r\n.container {\r\n  margin: 0 auto;\r\n  max-width: 87%;\r\n  padding-bottom: 90px;\r\n}\r\n\r\nh2.title {\r\n  align-items: center;\r\n  color: white;\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-size: 40px;\r\n  font-weight: 700;\r\n  letter-spacing: -1px;\r\n  line-height: 60px;\r\n  margin: 0 0 30px 0;\r\n  padding: 90px 0 0 0;\r\n  text-align: left;\r\n}\r\n\r\np {\r\n  color: white;\r\n}",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "FreudTypographyComponent",
            "id": "component-FreudTypographyComponent-6465d5d956bcb61b750afd1c241ba87bda02006fd91490504182be0fe7b0a020bc6ed8d552d616cc3a1292383769af6910196fd511c8916712718f31eaa5eedf",
            "file": "projects/web-components/src/components/typography/typography.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "exportAs": "freudTypography",
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[freud-typography]",
            "styleUrls": [
                "./typography.component.scss"
            ],
            "styles": [],
            "template": "<ng-content></ng-content>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "type",
                    "defaultValue": "'body-sm-regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "fontTypes",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\n\r\nexport const types = [\r\n  'display',\r\n  'heading-xl',\r\n  'heading-lg',\r\n  'heading-md',\r\n  'heading-sm',\r\n  'subtitle-lg',\r\n  'subtitle-md',\r\n  'subtitle-sm',\r\n  'body-lg-bold',\r\n  'body-lg-regular',\r\n  'body-sm-bold',\r\n  'body-sm-regular',\r\n  'caption',\r\n  'title-highlight',\r\n] as const;\r\ntype fontTypes = typeof types[number];\r\n\r\n@Component({\r\n  selector: '[freud-typography]',\r\n  exportAs: 'freudTypography',\r\n  styleUrls: ['./typography.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: `<ng-content></ng-content> `,\r\n  host: {\r\n    class: 'freud-typography',\r\n    '[class.freud-typography-type-display]': 'type === \"display\"',\r\n    '[class.freud-typography-type-heading-xl]': 'type === \"heading-xl\"',\r\n    '[class.freud-typography-type-heading-lg]': 'type === \"heading-lg\"',\r\n    '[class.freud-typography-type-heading-md]': 'type === \"heading-md\"',\r\n    '[class.freud-typography-type-heading-sm]': 'type === \"heading-sm\"',\r\n    '[class.freud-typography-type-subtitle-lg]': 'type === \"subtitle-lg\"',\r\n    '[class.freud-typography-type-subtitle-md]': 'type === \"subtitle-md\"',\r\n    '[class.freud-typography-type-subtitle-sm]': 'type === \"subtitle-sm\"',\r\n    '[class.freud-typography-type-body-lg-bold]': 'type === \"body-lg-bold\"',\r\n    '[class.freud-typography-type-body-lg-regular]':\r\n      'type === \"body-lg-regular\"',\r\n    '[class.freud-typography-type-body-sm-bold]': 'type === \"body-sm-bold\"',\r\n    '[class.freud-typography-type-body-sm-regular]':\r\n      'type === \"body-sm-regular\"',\r\n    '[class.freud-typography-type-caption]': 'type === \"caption\"',\r\n    '[class.freud-typography-type-title-highlight]':\r\n      'type === \"title-highlight\"',\r\n  },\r\n})\r\nexport class FreudTypographyComponent {\r\n  @Input() type: fontTypes = 'body-sm-regular';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'sass:map';\r\n// TODO: Verificar o import\r\n@import '../../../../../../tokens/dist/style/scss/_variables.scss';\r\n@import '../../../../../../grid/src/scss/grid-variables.scss';\r\n\r\n\r\n.freud-typography {\r\n  font-family: $font-family-base;\r\n  margin: 0;\r\n}\r\n\r\n.freud-typography-type {\r\n\r\n  &-display {\r\n    font-weight: $font-weight-bold;\r\n    font-size: $font-size-xxxl;\r\n    line-height: $line-height-xs;\r\n  }\r\n\r\n  &-heading-xl {\r\n    font-weight: $font-weight-bold;\r\n    font-size: $font-size-xxl;\r\n    line-height: $line-height-xs;\r\n  }\r\n\r\n  &-heading-lg {\r\n    font-weight: $font-weight-bold;\r\n    font-size: $font-size-lg;\r\n    line-height: $line-height-sm;\r\n  }\r\n\r\n  &-heading-md {\r\n    font-weight: $font-weight-bold;\r\n    font-size: $font-size-md;\r\n    line-height: $line-height-sm;\r\n  }\r\n\r\n  &-heading-sm {\r\n    font-weight: $font-weight-bold;\r\n    font-size: $font-size-sm;\r\n    line-height: $line-height-sm;\r\n  }\r\n\r\n  &-subtitle-lg {\r\n    font-weight: $font-weight-semibold;\r\n    font-size: $font-size-md;\r\n    line-height: $line-height-xs;\r\n  }\r\n\r\n  &-subtitle-md {\r\n    font-weight: $font-weight-semibold;\r\n    font-size: $font-size-sm;\r\n    line-height: $line-height-md;\r\n  }\r\n\r\n  &-subtitle-sm {\r\n    font-weight: $font-weight-semibold;\r\n    font-size: $font-size-xs;\r\n    line-height: $line-height-md;\r\n  }\r\n\r\n  &-body-lg-bold {\r\n    font-weight: $font-weight-semibold;\r\n    font-size: $font-size-sm;\r\n    line-height: $line-height-sm;\r\n  }\r\n\r\n  &-body-lg-regular {\r\n    font-weight: $font-weight-regular;\r\n    font-size: $font-size-sm;\r\n    line-height: $line-height-sm;\r\n  }\r\n\r\n  &-body-sm-bold {\r\n    font-weight: $font-weight-semibold;\r\n    font-size: $font-size-xs;\r\n    line-height: $line-height-md;\r\n  }\r\n\r\n  &-body-sm-regular {\r\n    font-weight: $font-weight-regular;\r\n    font-size: $font-size-xs;\r\n    line-height: $line-height-md;\r\n  }\r\n\r\n  &-caption {\r\n    font-weight: $font-weight-regular;\r\n    font-size: $font-size-xxs;\r\n    line-height: $line-height-xs;\r\n  }\r\n\r\n  &-title-highlight {\r\n    font-weight: $font-weight-regular;\r\n    font-size: $font-size-xxs;\r\n    line-height: $line-height-sm;\r\n    text-transform: uppercase;\r\n    letter-spacing: 4px;\r\n  }\r\n}\r\n\r\n\r\n@media (max-width: map.get($breakpoints, \"md\")) {\r\n  .freud-typography-type {\r\n    &-display {\r\n      font-size: $font-size-xl;\r\n    }\r\n\r\n    &-heading-xl {\r\n      font-size: $font-size-lg;\r\n    }\r\n\r\n    &-heading-lg {\r\n      font-size: $font-size-md;\r\n    }\r\n\r\n    &-heading-md {\r\n      font-size: $font-size-sm;\r\n    }\r\n\r\n    &-heading-sm {\r\n      font-size: $font-size-xs;\r\n    }\r\n\r\n    &-subtitle-lg {\r\n      font-size: $font-size-sm;\r\n    }\r\n\r\n    &-subtitle-md {\r\n      font-size: $font-size-xs;\r\n    }\r\n\r\n    &-subtitle-sm {\r\n      font-size: $font-size-xxs;\r\n    }\r\n\r\n    &-body-lg-bold {\r\n      font-size: $font-size-xs;\r\n      line-height: $line-height-md;\r\n    }\r\n\r\n    &-body-lg-regular {\r\n      font-size: $font-size-xs;\r\n      line-height: $line-height-md;\r\n    }\r\n\r\n    &-body-sm-bold {\r\n      font-size: $font-size-xxs;\r\n      line-height: $line-height-md;\r\n    }\r\n\r\n    &-body-sm-regular {\r\n      font-size: $font-size-xxs;\r\n      line-height: $line-height-md;\r\n    }\r\n\r\n    &-caption {\r\n      font-size: $font-size-xxs;\r\n      line-height: $line-height-xs;\r\n    }\r\n  }\r\n\r\n}\r\n",
                    "styleUrl": "./typography.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "SpeedDialComponent",
            "id": "component-SpeedDialComponent-86b0dd2100b7e433ad638105b25b59f1d60c46ceba4dce534f358d0cde68c4630cac8b50d1bb9fe40155853b4f1f831f8146b072e7c47b72ece9e633eae0ba18",
            "file": "projects/web-components/src/components/speed-dial/speed-dial.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-speed-dial",
            "styleUrls": [
                "./speed-dial.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./speed-dial.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-speed-dial',\n  templateUrl: './speed-dial.component.html',\n  styleUrls: ['./speed-dial.component.css']\n})\nexport class SpeedDialComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./speed-dial.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>speed-dial works!</p>\n"
        },
        {
            "name": "SplitButtonComponent",
            "id": "component-SplitButtonComponent-4976ab2b1fc70745215c42a6b2902ae421958853d3b1b12c9337fb0f5f07edbe4330d697100dc6aa60bde9a18cecf4eddede3e012853ca3a071b6cadd263101b",
            "file": "projects/web-components/src/components/split-button/split-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-split-button",
            "styleUrls": [
                "./split-button.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./split-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-split-button',\n  templateUrl: './split-button.component.html',\n  styleUrls: ['./split-button.component.css']\n})\nexport class SplitButtonComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./split-button.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>split-button works!</p>\n"
        }
    ],
    "modules": [
        {
            "name": "FreudAvatarModule",
            "id": "module-FreudAvatarModule-09e343142257badaf18803b90b479bd7b0299c84dc8b07153326734a0f36c51074d6c1ecd0219aa987c05bb0b42cc5a2bf18417c3e1779ed93a0482ca1794bc1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/web-components/src/components/avatar/avatar.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AvatarModule } from 'primeng/avatar';\r\n\r\nimport { FreudAvatarComponent } from './avatar.component';\r\nimport { FreudBadgeModule } from '../badge';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, AvatarModule, FreudBadgeModule],\r\n  declarations: [FreudAvatarComponent],\r\n  exports: [FreudAvatarComponent]\r\n})\r\nexport class FreudAvatarModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FreudAvatarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "FreudBadgeModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FreudAvatarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FreudBadgeModule",
            "id": "module-FreudBadgeModule-58c16afdd306333aa201a5bd806329418bc299490d3518e16ef92aa75251428daf697b995a2e6162c588b627715491da70ad3ee628f2aa70bbe90ed374d2c2c7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/web-components/src/components/badge/badge.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BadgeModule } from 'primeng/badge';\r\n\r\nimport { FreudBadgeComponent, FreudBadgeDirective } from './badge.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, BadgeModule],\r\n  declarations: [FreudBadgeComponent, FreudBadgeDirective],\r\n  exports: [FreudBadgeComponent, FreudBadgeDirective],\r\n})\r\nexport class FreudBadgeModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FreudBadgeComponent"
                        },
                        {
                            "name": "FreudBadgeDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FreudBadgeComponent"
                        },
                        {
                            "name": "FreudBadgeDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FreudButtonModule",
            "id": "module-FreudButtonModule-2e87d3b09d3ef4faf9ca0ac3cdcdb5406f8b8aa485cf3943cb222f5f9affe2d0ee2544067b7e6bd5a747f0bb6016a65908528a7a8fe2b95c8d2ea27b1e0c2fc9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/web-components/src/components/button/button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ButtonModule } from 'primeng/button';\r\n\r\nimport { FreudButtonComponent } from './button.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, ButtonModule],\r\n  declarations: [FreudButtonComponent],\r\n  exports: [FreudButtonComponent]\r\n})\r\nexport class FreudButtonModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FreudButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FreudButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FreudHeaderModule",
            "id": "module-FreudHeaderModule-181e311e2883a4712b7efd44fc7c78607023de0da0ee346af9932247a7e06607754a09bccfbaa9204d369e00ff986da3d0251902cfbdd4e804b0a800f1faff62",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "stories/header/header.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FreudHeaderComponent } from './header.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [FreudHeaderComponent],\r\n  exports: [FreudHeaderComponent]\r\n})\r\nexport class FreudHeaderModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FreudHeaderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FreudHeaderComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FreudTypographyModule",
            "id": "module-FreudTypographyModule-763a06fdd0b7c597320200983edb506c090417074deb81fbb891a289348ef0701360036a4c1f4b11135a3af4b9e98889a91ae71b1eb7850cb5307f6b4e593cef",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/web-components/src/components/typography/typography.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FreudTypographyComponent } from './typography.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [FreudTypographyComponent],\r\n  exports: [FreudTypographyComponent],\r\n})\r\nexport class FreudTypographyModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FreudTypographyComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FreudTypographyComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Actived",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/badge/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BgColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/avatar/Avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/web-components/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateDisabled.bind({})"
            },
            {
                "name": "Error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/badge/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Ghost",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "GhostBackground",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Imagem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/avatar/Avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/badge/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/avatar/Avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Loading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateLoading.bind({})"
            },
            {
                "name": "Medium",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/avatar/Avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/badge/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PrimaryBackground",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/web-components/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SecondaryBackground",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SizeLG",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateSize.bind({})"
            },
            {
                "name": "SizeMD",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateSize.bind({})"
            },
            {
                "name": "SizeSM",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateSize.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/badge/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/avatar/Avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/badge/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/badge/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudBadgeComponent>",
                "defaultValue": "(args: FreudBadgeComponent) => ({\n  props: { ...args },\n  template: `\n    <freud-badge [size]=\"size\" [color]=\"color\" [value]=\"value\"></freud-badge>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/avatar/Avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudAvatarComponent>",
                "defaultValue": "(args: FreudAvatarComponent) => ({\n  props: { ...args },\n  template: `\n    <freud-avatar [size]=\"size\" [label]=\"label\" [badge]=\"badge\" [bgColor]=\"bgColor\" [icon]=\"icon\" [image]=\"image\"></freud-avatar>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudButtonComponent>",
                "defaultValue": "(args: FreudButtonComponent) => ({\n  props: { ...args },\n  template: templateHTML.replace('{{label}}', 'Button {{color}}'),\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudTypographyComponent>",
                "defaultValue": "(\r\n  args: FreudTypographyComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n    <p freud-typography [type]=\"type\">{{ label }}</p>\r\n  `,\r\n})"
            },
            {
                "name": "TemplateDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudButtonComponent>",
                "defaultValue": "(args: FreudButtonComponent) => ({\n  props: { ...args },\n  template: templateHTML.replace('{{label}}', 'Disabled'),\n})"
            },
            {
                "name": "templateHTML",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\n    <freud-button\n      [color]=\"color\"\n      [bgColor]=\"bgColor\"\n      [size]=\"size\"\n      [disabled]=\"disabled\"\n      [loading]=\"loading\"\n      freudBadge\n      value=\"1\"\n      >{{label}}</freud-button>\n`"
            },
            {
                "name": "TemplateLoading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudButtonComponent>",
                "defaultValue": "(args: FreudButtonComponent) => ({\n  props: { ...args },\n  template: templateHTML.replace('{{label}}', 'Button'),\n})"
            },
            {
                "name": "TemplateSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudButtonComponent>",
                "defaultValue": "(args: FreudButtonComponent) => ({\n  props: { ...args },\n  template: templateHTML.replace('{{label}}', 'Button {{size}}'),\n})"
            },
            {
                "name": "types",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/web-components/src/components/typography/typography.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "[\r\n  'display',\r\n  'heading-xl',\r\n  'heading-lg',\r\n  'heading-md',\r\n  'heading-sm',\r\n  'subtitle-lg',\r\n  'subtitle-md',\r\n  'subtitle-sm',\r\n  'body-lg-bold',\r\n  'body-lg-regular',\r\n  'body-sm-bold',\r\n  'body-sm-regular',\r\n  'caption',\r\n  'title-highlight',\r\n] as const"
            },
            {
                "name": "Typography",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Warning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/badge/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "avatarSizes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"sm\" | \"md\" | \"lg\"",
                "file": "projects/web-components/src/components/avatar/avatar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "BadgeDirectiveIconPosition",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"left\" | \"right\" | \"top\" | \"bottom\"",
                "file": "projects/web-components/src/components/badge/badge.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "buttonColors",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"ghost\"",
                "file": "projects/web-components/src/components/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "buttonSizes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"sm\" | \"md\" | \"lg\"",
                "file": "projects/web-components/src/components/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "colors",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"success\" | \"info\" | \"warning\" | \"error\" | \"actived\"",
                "file": "projects/web-components/src/components/badge/badge.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "fontTypes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/web-components/src/components/typography/typography.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "sizes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"sm\" | \"md\"",
                "file": "projects/web-components/src/components/badge/badge.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "stories/badge/Badge.stories.ts": [
                {
                    "name": "Actived",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/badge/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/badge/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/badge/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/badge/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/badge/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/badge/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/badge/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudBadgeComponent>",
                    "defaultValue": "(args: FreudBadgeComponent) => ({\n  props: { ...args },\n  template: `\n    <freud-badge [size]=\"size\" [color]=\"color\" [value]=\"value\"></freud-badge>\n  `,\n})"
                },
                {
                    "name": "Warning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/badge/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "stories/avatar/Avatar.stories.ts": [
                {
                    "name": "BgColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/avatar/Avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Imagem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/avatar/Avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/avatar/Avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Medium",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/avatar/Avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/avatar/Avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/avatar/Avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudAvatarComponent>",
                    "defaultValue": "(args: FreudAvatarComponent) => ({\n  props: { ...args },\n  template: `\n    <freud-avatar [size]=\"size\" [label]=\"label\" [badge]=\"badge\" [bgColor]=\"bgColor\" [icon]=\"icon\" [image]=\"image\"></freud-avatar>\n  `,\n})"
                }
            ],
            "projects/web-components/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/web-components/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/web-components/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "stories/button/Button.stories.ts": [
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateDisabled.bind({})"
                },
                {
                    "name": "Ghost",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "GhostBackground",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Loading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateLoading.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PrimaryBackground",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SecondaryBackground",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SizeLG",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateSize.bind({})"
                },
                {
                    "name": "SizeMD",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateSize.bind({})"
                },
                {
                    "name": "SizeSM",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateSize.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudButtonComponent>",
                    "defaultValue": "(args: FreudButtonComponent) => ({\n  props: { ...args },\n  template: templateHTML.replace('{{label}}', 'Button {{color}}'),\n})"
                },
                {
                    "name": "TemplateDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudButtonComponent>",
                    "defaultValue": "(args: FreudButtonComponent) => ({\n  props: { ...args },\n  template: templateHTML.replace('{{label}}', 'Disabled'),\n})"
                },
                {
                    "name": "templateHTML",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\n    <freud-button\n      [color]=\"color\"\n      [bgColor]=\"bgColor\"\n      [size]=\"size\"\n      [disabled]=\"disabled\"\n      [loading]=\"loading\"\n      freudBadge\n      value=\"1\"\n      >{{label}}</freud-button>\n`"
                },
                {
                    "name": "TemplateLoading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudButtonComponent>",
                    "defaultValue": "(args: FreudButtonComponent) => ({\n  props: { ...args },\n  template: templateHTML.replace('{{label}}', 'Button'),\n})"
                },
                {
                    "name": "TemplateSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudButtonComponent>",
                    "defaultValue": "(args: FreudButtonComponent) => ({\n  props: { ...args },\n  template: templateHTML.replace('{{label}}', 'Button {{size}}'),\n})"
                }
            ],
            "stories/typography/typography.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudTypographyComponent>",
                    "defaultValue": "(\r\n  args: FreudTypographyComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n    <p freud-typography [type]=\"type\">{{ label }}</p>\r\n  `,\r\n})"
                },
                {
                    "name": "Typography",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "projects/web-components/src/components/typography/typography.component.ts": [
                {
                    "name": "types",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/web-components/src/components/typography/typography.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "[\r\n  'display',\r\n  'heading-xl',\r\n  'heading-lg',\r\n  'heading-md',\r\n  'heading-sm',\r\n  'subtitle-lg',\r\n  'subtitle-md',\r\n  'subtitle-sm',\r\n  'body-lg-bold',\r\n  'body-lg-regular',\r\n  'body-sm-bold',\r\n  'body-sm-regular',\r\n  'caption',\r\n  'title-highlight',\r\n] as const"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/web-components/src/components/avatar/avatar.component.ts": [
                {
                    "name": "avatarSizes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"sm\" | \"md\" | \"lg\"",
                    "file": "projects/web-components/src/components/avatar/avatar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/web-components/src/components/badge/badge.component.ts": [
                {
                    "name": "BadgeDirectiveIconPosition",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"left\" | \"right\" | \"top\" | \"bottom\"",
                    "file": "projects/web-components/src/components/badge/badge.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "colors",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"success\" | \"info\" | \"warning\" | \"error\" | \"actived\"",
                    "file": "projects/web-components/src/components/badge/badge.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "sizes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"sm\" | \"md\"",
                    "file": "projects/web-components/src/components/badge/badge.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/web-components/src/components/button/button.component.ts": [
                {
                    "name": "buttonColors",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"ghost\"",
                    "file": "projects/web-components/src/components/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "buttonSizes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"sm\" | \"md\" | \"lg\"",
                    "file": "projects/web-components/src/components/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/web-components/src/components/typography/typography.component.ts": [
                {
                    "name": "fontTypes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/web-components/src/components/typography/typography.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/web-components/src/components/avatar/avatar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FreudAvatarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/components/badge/badge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FreudBadgeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/components/badge/badge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FreudBadgeDirective",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FreudButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/components/chip/chip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/components/header/chip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/components/speed-dial/speed-dial.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SpeedDialComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/components/split-button/split-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SplitButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/components/typography/typography.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FreudTypographyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/components/typography/typography.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "types",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/avatar/Avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BgColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/avatar/Avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Imagem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/avatar/Avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/avatar/Avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Medium",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/avatar/Avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/avatar/Avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/badge/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Actived",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/badge/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/badge/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/badge/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/badge/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/badge/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/badge/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/badge/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Warning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Ghost",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GhostBackground",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Loading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrimaryBackground",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SecondaryBackground",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SizeLG",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SizeMD",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SizeSM",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "templateHTML",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateLoading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FreudHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "stories/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Typography",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}