{
    "pipes": [],
    "interfaces": [
        {
            "name": "FreudMenuItem",
            "id": "interface-FreudMenuItem-af2b5b3e3f637b798bde09db072b1a1d141c94149bafb44d030ae4512a7c424e42996d1042c3cb983a22b777e2f5806454ede1aaa8c669c8b9c7c7c050184d67",
            "file": "projects/web-components/src/api/menu.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { MenuItem } from \"primeng/api\";\r\n\r\nexport interface FreudMenuItem extends MenuItem {}\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": "MenuItem"
        },
        {
            "name": "StepMenu",
            "id": "interface-StepMenu-70bb36fc3f5f89d11219246de13e2db8f8e909a39e3ff295c315f83cfa60cb11edbd93fe7db21ed46042bee68eb784c0871f1cd3f818e9f46feac5fef8432c06",
            "file": "projects/web-components/src/components/steps/steps.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\nimport { FreudMenuItem } from \"../../api/menu.interface\";\n\nexport interface StepMenu extends FreudMenuItem {}\n\n@Component({\n  selector: 'freud-steps',\n  template: `\n    <p-steps\n      [model]=\"model\"\n      [activeIndex]=\"activeIndex\"\n      [readonly]=\"readonly\"\n      (activeIndexChange)=\"activeIndexChange.emit($event)\">\n    </p-steps>\n  `,\n  styleUrls: ['./steps.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    class: 'freud-steps',\n    '[class.freud-steps-bgcolor]': `bgColor`,\n  }\n})\nexport class FreudStepsComponent {\n\n  @Input() model!: StepMenu[];\n  @Input() readonly: boolean = false;\n  @Input() bgColor: boolean = false;\n  @Input() activeIndex: number = 0;\n  @Output() activeIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": "FreudMenuItem"
        }
    ],
    "injectables": [
        {
            "name": "FreudConfirmationService",
            "id": "injectable-FreudConfirmationService-be087ef6af9897dd0f9af61260b4d12754d03dc3e91288cadb6f72e6b48af8ad3941ffb46f32878184cd1afe95497026e716e27c058903d29f6eca89deea16ae",
            "file": "projects/web-components/src/services/confirmation.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { ConfirmationService } from 'primeng/api';\n\n@Injectable()\nexport class FreudConfirmationService  extends ConfirmationService { }\n",
            "extends": "ConfirmationService",
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "FreudAvatarComponent",
            "id": "component-FreudAvatarComponent-0561e212f2493362310f96ac3a2bd5e52e7504a1c388542897b4e38e2e8f9d5bce95a506e7d3a2db384759a4992589e74d78f931e772edb4bb4afa6731ed5a7d",
            "file": "projects/web-components/src/components/avatar/avatar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "freud-avatar",
            "styleUrls": [
                "./avatar.component.scss"
            ],
            "styles": [],
            "template": "<p-avatar\n  [label]=\"(image || withIcon) ? '' : label\"\n  [icon]=\"(withIcon || !label) ? 'freud-icon freud-icon-user' : ''\"\n  shape=\"circle\"\n  [image]=\"image\">\n  <freud-badge *ngIf=\"badge\" [value]=\"badge\" color=\"error\"></freud-badge>\n</p-avatar>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "badge",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "bgColor",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "image",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "avatarSizes",
                    "decorators": []
                },
                {
                    "name": "withIcon",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\ntype avatarSizes = 'sm' | 'md' | 'lg';\n@Component({\n  selector: 'freud-avatar',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <p-avatar\n      [label]=\"(image || withIcon) ? '' : label\"\n      [icon]=\"(withIcon || !label) ? 'freud-icon freud-icon-user' : ''\"\n      shape=\"circle\"\n      [image]=\"image\">\n      <freud-badge *ngIf=\"badge\" [value]=\"badge\" color=\"error\"></freud-badge>\n    </p-avatar>\n  `,\n  styleUrls: ['./avatar.component.scss'],\n  host: {\n    class: 'freud-avatar',\n    '[class.freud-avatar-bgcolor]': `bgColor`,\n\n    '[class.freud-avatar-size-small]': `size === 'sm'`,\n    '[class.freud-avatar-size-medium]': `size === 'md'`,\n    '[class.freud-avatar-size-large]': `size === 'lg'`,\n  }\n})\nexport class FreudAvatarComponent {\n\n  @Input() size: avatarSizes = 'md';\n  @Input() label: string = '';\n  @Input() withIcon: boolean = false;\n  @Input() bgColor: boolean = false;\n  @Input() badge: string = '';\n  @Input() image: string = '';\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../../../tokens/dist/style/scss/_variables.scss';\r\n@import '../../../scss/typography.scss';\r\n\r\n.freud-avatar .p-avatar {\r\n    font-family: $font-family-base;\r\n}\r\n.freud-avatar {\r\n    position: relative;\r\n    display: block;\r\n}\r\n\r\n.freud-avatar.freud-avatar-size-small, .freud-avatar-size-small .p-avatar {\r\n    width: 28px;\r\n    height: 28px;\r\n    @include typography($font-size-xs, $font-weight-semibold, 24px);\r\n}\r\n\r\n.freud-avatar.freud-avatar-size-medium, .freud-avatar-size-medium .p-avatar {\r\n    width: 42px;\r\n    height: 42px;\r\n    @include typography($font-size-xs, $font-weight-semibold, 24px);\r\n}\r\n\r\n.freud-avatar.freud-avatar-size-large, .freud-avatar-size-large .p-avatar {\r\n    width: 56px;\r\n    height: 56px;\r\n    @include typography($font-size-md, $font-weight-semibold, 30px);\r\n}\r\n\r\n.freud-avatar.freud-avatar-size-medium {\r\n  .freud-icon {\r\n    font-size: 24px;\r\n  }\r\n}\r\n\r\n.freud-avatar.freud-avatar-size-large {\r\n  .freud-icon {\r\n    font-size: 30px;\r\n  }\r\n}\r\n\r\n\r\n.freud-avatar:not(.freud-avatar-bgcolor) .p-avatar {\r\n    background-color: $neutral-color-light-02;\r\n    color: $neutral-color-dark-03;\r\n}\r\n\r\n.freud-avatar.freud-avatar-bgcolor .p-avatar {\r\n    background-color: $brand-color-03;\r\n    color: $neutral-color-white;\r\n}\r\nfreud-badge {\r\n    position: absolute;\r\n    top: -12px;\r\n    right: -4px;\r\n}\r\n",
                    "styleUrl": "./avatar.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "FreudBadgeComponent",
            "id": "component-FreudBadgeComponent-02ed6f3c76052639314c8e1499147549aaba49ca9767a026b2e305edc3f2bd300d67dab2d2f11952b0eb22d760d5178b06e14753bf4038420a8da3904f693a6b",
            "file": "projects/web-components/src/components/badge/badge.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "freud-badge",
            "styleUrls": [
                "./badge.component.scss"
            ],
            "styles": [],
            "template": "<p-badge [value]=\"value!\" class=\"freud-color-{{color}}\"></p-badge>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "colors",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "sizes",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n\ntype sizes = 'default' | 'large';\ntype colors = 'primary' | 'success' | 'info' | 'warning' | 'error' | 'actived';\n\n@Component({\n  selector: 'freud-badge',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <p-badge [value]=\"value!\" class=\"freud-color-{{color}}\"></p-badge>\n  `,\n  styleUrls: ['./badge.component.scss'],\n  host: {\n    class: 'freud-badge',\n    '[class.size-large]':  'size === \"large\"'\n  }\n})\nexport class FreudBadgeComponent {\n\n  @Input() value: string = '';\n  @Input() size: sizes = 'default';\n  @Input() color: colors = 'primary';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../../../tokens/dist/style/scss/_variables.scss';\r\n@import '../../../scss/typography.scss';\r\n\r\n.freud-badge span.p-badge {\r\n    background-color: $brand-color-pure;\r\n    font-weight: $font-weight-bold;\r\n    font-family: $font-family-base;\r\n    display: inline-block;\r\n}\r\n\r\n.freud-badge {\r\n  .freud-color-success span {\r\n    background-color: $feedback-color-positive-04;\r\n  }\r\n  .freud-color-info span {\r\n    background-color: $feedback-color-neutral-pure;\r\n  }\r\n  .freud-color-warning span {\r\n    background-color: $feedback-color-warning-pure;\r\n    color: $neutral-color-black;\r\n  }\r\n  .freud-color-error span {\r\n    background-color: $feedback-color-negative-04;\r\n  }\r\n  .freud-color-actived span {\r\n    background-color: $complementary-color-like-03;\r\n  }\r\n}\r\n\r\n.freud-badge:not(.size-large) span.p-badge {\r\n  border-radius: $border-radius-md;\r\n  min-width: 16px;\r\n  height: 16px;\r\n  @include typography($font-size-xxxs, $font-weight-bold, 14.4px);\r\n}\r\n.freud-badge.size-large span.p-badge {\r\n  border-radius: 12px;\r\n  @include typography($font-size-xs, $font-weight-bold, auto);\r\n  display: inline-block;\r\n}\r\n",
                    "styleUrl": "./badge.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "FreudButtonComponent",
            "id": "component-FreudButtonComponent-d773ff4898ed9ba62b0ce346559ed7924bfc42c242b28c1e8d20ad39102897ad5c78e2489ae734e0513f55a1a9e873ed5b02a4340f6bc59df2eac54a2ee28aa2",
            "file": "projects/web-components/src/components/button/button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "freud-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "template": "<p-button [disabled]=\"disabled\" [loading]=\"loading\" [icon]=\"icon\">\n  <div class=\"button-content\"><ng-content></ng-content></div>\n</p-button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "bgColor",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "buttonColors",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "buttonSizes",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\r\n\r\ntype buttonSizes = 'sm' | 'md' | 'lg';\r\ntype buttonColors = 'primary' | 'secondary' | 'ghost';\r\n\r\n@Component({\r\n  selector: 'freud-button',\r\n  styleUrls: ['./button.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: `\r\n    <p-button [disabled]=\"disabled\" [loading]=\"loading\" [icon]=\"icon\">\r\n      <div class=\"button-content\"><ng-content></ng-content></div>\r\n    </p-button>\r\n  `,\r\n  host: {\r\n    class: 'freud-btn',\r\n    '[class.freud-btn-color-primary]': `!['secondary', 'ghost'].includes(color)`,\r\n    '[class.freud-btn-color-secondary]': `color === 'secondary'`,\r\n    '[class.freud-btn-color-ghost]': `color === 'ghost'`,\r\n\r\n    '[class.freud-btn-bgcolor]': `bgColor`,\r\n    '[class.freud-btn-loading]': `loading`,\r\n\r\n    '[class.freud-btn-size-small]': `size === 'sm'`,\r\n    '[class.freud-btn-size-medium]': `size === 'md'`,\r\n    '[class.freud-btn-size-large]': `size === 'lg'`,\r\n  }\r\n})\r\nexport class FreudButtonComponent {\r\n\r\n  @Input() size: buttonSizes = 'md';\r\n  @Input() color: buttonColors = 'primary';\r\n  @Input() bgColor = false;\r\n  @Input() disabled = false;\r\n  @Input() loading = false;\r\n  @Input() icon!: string;\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../../../tokens/dist/style/scss/_variables.scss';\r\n@import '../../../scss/typography.scss';\r\n\r\n.freud-btn:not(.freud-btn-bgcolor) {\r\n  &.freud-btn-color-primary {\r\n    $freud-btn-background: $brand-color-pure;\r\n    $freud-btn-color: $neutral-color-white;\r\n    $freud-btn-border: $brand-color-pure;\r\n    .p-button {\r\n      background-color: $freud-btn-background;\r\n      border-color: $freud-btn-border;\r\n      color: $freud-btn-color;\r\n    }\r\n  }\r\n\r\n  &.freud-btn-color-secondary {\r\n    $freud-btn-background: $neutral-color-white;\r\n    $freud-btn-color: $brand-color-pure;\r\n    $freud-btn-border: $brand-color-pure;\r\n    .p-button {\r\n      background-color: $freud-btn-background;\r\n      border-color: $freud-btn-border;\r\n      color: $freud-btn-color;\r\n    }\r\n  }\r\n\r\n  &.freud-btn-color-ghost {\r\n    $freud-btn-background: transparent;\r\n    $freud-btn-color: $brand-color-pure;\r\n    $freud-btn-border: transparent;\r\n    .p-button {\r\n      background-color: $freud-btn-background;\r\n      border-color: $freud-btn-border;\r\n      color: $freud-btn-color;\r\n    }\r\n  }\r\n\r\n  .p-button:enabled:hover {\r\n    background: $brand-color-01;\r\n    border-color: $brand-color-01;\r\n    color: $brand-color-pure;\r\n  }\r\n}\r\n\r\n.freud-btn.freud-btn-bgcolor {\r\n  &.freud-btn-color-primary {\r\n    .p-button {\r\n      background-color: $neutral-color-white;\r\n      border-color: $neutral-color-white;\r\n      color: $brand-color-pure;\r\n    }\r\n  }\r\n\r\n  &.freud-btn-color-secondary {\r\n    .p-button {\r\n      background-color: $brand-color-pure;\r\n      border-color: $neutral-color-white;\r\n      color: $neutral-color-white;\r\n    }\r\n  }\r\n\r\n  &.freud-btn-color-ghost {\r\n    .p-button {\r\n      background-color: transparent;\r\n      border-color: transparent;\r\n      color: $neutral-color-white;\r\n    }\r\n  }\r\n\r\n  .p-button[disabled] {\r\n    opacity: $opacity-level-5;\r\n    color: $brand-color-pure;\r\n  }\r\n\r\n  .p-button:enabled:hover {\r\n    background: $brand-color-03;\r\n    border-color: $brand-color-03;\r\n    color: $neutral-color-white;\r\n  }\r\n}\r\n\r\n\r\n.freud-btn .p-button {\r\n  font-family: $font-family-base;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: $border-radius-md;\r\n  @include typography($font-size-xs, $font-weight-bold, auto);\r\n  &[disabled] {\r\n    opacity: $opacity-level-5;\r\n  }\r\n  &:focus {\r\n    box-shadow: unset;\r\n  }\r\n  &.p-button-icon-only {\r\n    width: auto;\r\n  }\r\n}\r\n\r\n\r\n.freud-btn-size-small {\r\n  .p-button {\r\n    font-size: $font-size-xxs;\r\n    padding: 0 $spacing-size-nano;\r\n    height: 32px;\r\n  }\r\n}\r\n\r\n.freud-btn-size-medium {\r\n  .p-button {\r\n    padding: 0 $spacing-size-xxxs;\r\n    height: 40px;\r\n  }\r\n}\r\n\r\n.freud-btn-size-large {\r\n  .p-button {\r\n    padding: 0 $spacing-size-xxs;\r\n    height: 48px;\r\n  }\r\n}\r\n\r\n.button-content:not(:empty) + .p-button-icon {\r\n  margin-left: $spacing-size-xxxs;\r\n}\r\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "FreudHeaderComponent",
            "id": "component-FreudHeaderComponent-9b7bfa49224a9e8c7e600ed32c9713e6aad67aa3da17694f47d0728a4e620326aeac2bcdb09ee372e57d3f1474480ac5f3f9e787401776aeb0091be87ec0c263",
            "file": "stories/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "freud-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "template": "<div class=\"header\">\n  <div class=\"container\">\n    <h2 class=\"title\">{{title}}</h2>\n    <p>{{description}}</p>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'freud-header',\n  template: `\n    <div class=\"header\">\n      <div class=\"container\">\n        <h2 class=\"title\">{{title}}</h2>\n        <p>{{description}}</p>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./header.component.scss']\n})\nexport class FreudHeaderComponent {\n\n  @Input() title!: string;\n  @Input() description!: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// TODO: Verificar o import\r\n@import '../../../tokens/dist/style/scss/_variables.scss';\r\n\r\ndiv.header {\r\n  font-family: $font-family-base;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  margin-bottom: 32px;\r\n  background: url(./bg.png) center no-repeat;\r\n  z-index: 0;\r\n\r\n  & > div {\r\n    width: 100%;\r\n    z-index: 1;\r\n  }\r\n}\r\n\r\n.container {\r\n  margin: 0 auto;\r\n  max-width: 87%;\r\n  padding-bottom: 90px;\r\n}\r\n\r\nh2.title {\r\n  align-items: center;\r\n  color: white;\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-size: 40px;\r\n  font-weight: 700;\r\n  letter-spacing: -1px;\r\n  line-height: 60px;\r\n  margin: 0 0 30px 0;\r\n  padding: 90px 0 0 0;\r\n  text-align: left;\r\n}\r\n\r\np {\r\n  color: white;\r\n}",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "FreudKnobComponent",
            "id": "component-FreudKnobComponent-281034318bf89d00ad5ef943ac6d0206340afdce4a02ef1aa5affeac146781f8b279d3ac2e828e940bad73af9f37e87119bc2ff8c579cc6241841cb837664e73",
            "file": "projects/web-components/src/components/knob/knob.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "freud-knob",
            "styleUrls": [
                "./knob.component.scss"
            ],
            "styles": [],
            "template": "<p-knob\n  [(ngModel)]=\"value\"\n  (onChange)=\"onChangeValue($event)\"\n  [min]=\"min\"\n  [max]=\"max\"\n  [size]=\"size === 'large' ? 200 : 100\"\n  [step]=\"step\"\n  [valueColor]=\"bgColor ? 'white' : '#6732D1'\"\n  [rangeColor]=\"bgColor ? '#5127A4' : '#F0F2F5'\"\n  [textColor]=\"bgColor ? 'white' : '#6B7280'\"\n  [disabled]=\"disabled\"></p-knob>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "bgColor",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "max",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "min",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "sizes",
                    "decorators": []
                },
                {
                    "name": "step",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "EventEmitter<number>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onChangeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewEncapsulation, Input, Output, EventEmitter } from '@angular/core';\n\ntype sizes = 'default' | 'large';\n@Component({\n  selector: 'freud-knob',\n  template: `\n    <p-knob\n      [(ngModel)]=\"value\"\n      (onChange)=\"onChangeValue($event)\"\n      [min]=\"min\"\n      [max]=\"max\"\n      [size]=\"size === 'large' ? 200 : 100\"\n      [step]=\"step\"\n      [valueColor]=\"bgColor ? 'white' : '#6732D1'\"\n      [rangeColor]=\"bgColor ? '#5127A4' : '#F0F2F5'\"\n      [textColor]=\"bgColor ? 'white' : '#6B7280'\"\n      [disabled]=\"disabled\"></p-knob>\n  `,\n  styleUrls: ['./knob.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    class: 'freud-knob freud-typography',\n    '[class.freud-knob-bgcolor]': `bgColor`,\n    '[class.h1Regular1-2]': `size === 'large'`,\n    '[class.h5Regular1-2]': `size === 'default'`,\n  }\n})\nexport class FreudKnobComponent {\n\n  @Input() value: number = 0;\n  @Input() max: number = 100;\n  @Input() min: number = 0;\n  @Input() step: number = 1;\n  @Input() size: sizes = 'default';\n  @Input() disabled: boolean = false;\n  @Input() bgColor: boolean = false;\n  @Output() valueChange: EventEmitter<number> = new EventEmitter<number>();\n\n  onChangeValue(value: number) {\n    this.value = value;\n    this.valueChange.emit(this.value);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../scss/typography.scss';\r\n\r\n",
                    "styleUrl": "./knob.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "FreudProgressSpinnerComponent",
            "id": "component-FreudProgressSpinnerComponent-db31596600bbde38e11d6435fe62bf062b3d97f2ae3459c1eccd64ed8bc33d61d03c6fc05a86dfc0eeb16537c20fb6137e9e00f67aeceaf8f0b7f09ff0cd15e9",
            "file": "projects/web-components/src/components/progress-spinner/progress-spinner.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "freud-progress-spinner",
            "styleUrls": [
                "./progress-spinner.component.scss"
            ],
            "styles": [],
            "template": "<p-progressSpinner animationDuration=\"1s\"></p-progressSpinner>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "bgColor",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n  selector: 'freud-progress-spinner',\n  template: `\n    <p-progressSpinner animationDuration=\"1s\"></p-progressSpinner>\n  `,\n  styleUrls: ['./progress-spinner.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    class: 'freud-progress-spinner',\n    '[class.freud-progress-spinner-bgcolor]': `bgColor`,\n  }\n})\nexport class FreudProgressSpinnerComponent {\n  @Input() bgColor: boolean = false;\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../../../tokens/dist/style/scss/_variables.scss';\r\n\r\n@keyframes freud-progress-spinner-color {\r\n  100%,\r\n  0% {\r\n    stroke: $feedback-color-negative-03;\r\n  }\r\n  33% {\r\n    stroke: $feedback-color-warning-03;\r\n  }\r\n  66% {\r\n    stroke: $feedback-color-positive-03;\r\n  }\r\n}\r\n\r\n.freud-progress-spinner .p-progress-spinner-circle {\r\n  animation: p-progress-spinner-dash 1.5s ease-in-out infinite, freud-progress-spinner-color 6s ease-in-out infinite;\r\n\r\n}\r\n",
                    "styleUrl": "./progress-spinner.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "FreudRatingComponent",
            "id": "component-FreudRatingComponent-1410af4fb5fb78a9fd98c8d785a918f7c03014c1b2e24b5dc2e0c409a9d8a19a407ab5020b56a3eb5023d5ca77fac50bd880cab4d3b76fb5687517fbcabb7595",
            "file": "projects/web-components/src/components/rating/rating.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "freud-rating",
            "styleUrls": [
                "./rating.component.scss"
            ],
            "styles": [],
            "template": "<p-rating\n  [(ngModel)]=\"value\"\n  [stars]=\"stars\"\n  [disabled]=\"disabled\"\n  [iconOnClass]=\"iconOnClass\"\n  [iconOffClass]=\"iconOffClass\"\n  [cancel]=\"false\"\n  (onRate)=\"onRateChange($event)\">\n</p-rating>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "bgColor",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "iconOffClass",
                    "defaultValue": "'freud-icon freud-icon-star'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "iconOnClass",
                    "defaultValue": "'freud-icon freud-icon-star-fill'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "stars",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCancel",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onRate",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onRateChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'freud-rating',\n  template: `\n    <p-rating\n      [(ngModel)]=\"value\"\n      [stars]=\"stars\"\n      [disabled]=\"disabled\"\n      [iconOnClass]=\"iconOnClass\"\n      [iconOffClass]=\"iconOffClass\"\n      [cancel]=\"false\"\n      (onRate)=\"onRateChange($event)\">\n    </p-rating>\n  `,\n  styleUrls: ['./rating.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    class: 'freud-rating',\n    '[class.freud-rating-bgcolor]': `bgColor`,\n  }\n})\nexport class FreudRatingComponent {\n\n  @Input() value: number = 0;\n  @Input() stars: number = 5;\n  @Input() disabled: boolean = false;\n  @Input() iconOnClass: string = 'freud-icon freud-icon-star-fill';\n  @Input() iconOffClass: string = 'freud-icon freud-icon-star';\n  @Input() bgColor: boolean = false;\n  @Output() onRate: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onCancel: EventEmitter<any> = new EventEmitter<any>();\n\n  onRateChange(event: any) {\n    this.onRate.emit(event);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../../../tokens/dist/style/scss/_variables.scss';\r\n\r\n.freud-rating {\r\n  .p-rating:not(.p-disabled):not(.p-readonly) .p-rating-icon:hover,\r\n  .p-rating .p-rating-icon.freud-icon-star-fill {\r\n    color: $feedback-color-warning-pure;\r\n  }\r\n  .p-rating .p-rating-icon:not(.freud-icon-star-fill) {\r\n    color: $neutral-color-dark-01;\r\n  }\r\n}\r\n.freud-rating.freud-rating-bgcolor {\r\n  .p-rating .p-rating-icon:not(.freud-icon-star-fill) {\r\n    color: $neutral-color-light-01;\r\n  }\r\n}\r\n\r\n.freud-rating .p-rating .p-rating-icon:focus {\r\n  box-shadow: unset;\r\n}\r\n",
                    "styleUrl": "./rating.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "FreudSelectButtonComponent",
            "id": "component-FreudSelectButtonComponent-cb19b1e39ab3021b5d5efe7477e17c1e187ac738736cf32f2426e0b6375bad336b570133fb91990379dc43f528c1743a22dc6119572dd7b431dcb8fb781f6c2f",
            "file": "projects/web-components/src/components/select-button/select-button.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "freud-select-button",
            "styleUrls": [
                "./select-button.component.scss"
            ],
            "styles": [],
            "template": "<p-selectButton\n  [options]=\"options\"\n  [(ngModel)]=\"selectedOption\"\n  [multiple]=\"multiple\"\n  [tabindex]=\"tabindex\"\n  [optionDisabled]=\"optionDisabled\"\n  [optionLabel]=\"optionLabel\"\n  [disabled]=\"disabled\"\n  (onChange)=\"selectedOptionChange.emit($event)\">\n</p-selectButton>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "bgColor",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "multiple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "optionDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "optionLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "selectedOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "tabindex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selectedOptionChange",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Input, Output, ViewEncapsulation} from '@angular/core';\n\n@Component({\n  selector: 'freud-select-button',\n  template: `\n    <p-selectButton\n      [options]=\"options\"\n      [(ngModel)]=\"selectedOption\"\n      [multiple]=\"multiple\"\n      [tabindex]=\"tabindex\"\n      [optionDisabled]=\"optionDisabled\"\n      [optionLabel]=\"optionLabel\"\n      [disabled]=\"disabled\"\n      (onChange)=\"selectedOptionChange.emit($event)\">\n    </p-selectButton>\n  `,\n  styleUrls: ['./select-button.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    class: 'freud-select-button',\n    '[class.freud-select-bgcolor]': `bgColor`,\n  }\n})\nexport class FreudSelectButtonComponent {\n\n  @Input() options!: any[];\n  @Input() optionLabel!: string;\n  @Input() selectedOption!: any;\n  @Input() multiple: boolean = false;\n  @Input() disabled: boolean = false;\n  @Input() bgColor: boolean = false;\n  @Input() optionDisabled!: string;\n  @Input() tabindex: number = 0;\n\n  @Output() selectedOptionChange: EventEmitter<any> = new EventEmitter<any>();\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../../../tokens/dist/style/scss/_variables.scss';\r\n@import '../../../scss/typography.scss';\r\n\r\n.freud-select-button.freud-select-bgcolor {\r\n  .p-selectbutton .p-button.p-highlight {\r\n    color: $brand-color-04;\r\n    background: $neutral-color-white;\r\n    border: 1px solid $neutral-color-white;\r\n  }\r\n  .p-selectbutton .p-button {\r\n    border: 1px solid $brand-color-05;\r\n    background: $brand-color-04;\r\n    color: $neutral-color-white;\r\n  }\r\n}\r\n\r\n.freud-select-button {\r\n  .p-selectbutton .p-button {\r\n    @include typography($font-size-xxs, $font-weight-bold, $font-size-xxs);\r\n    border-radius: $border-radius-md;\r\n  }\r\n}\r\n\r\n.p-button:focus {\r\n  box-shadow: 0 0 0 1px $brand-color-pure;\r\n}\r\n\r\n\r\n.freud-select-button:not(.freud-select-bgcolor) {\r\n  .p-selectbutton .p-button.p-highlight {\r\n    background-color: $brand-color-pure;\r\n    border-color: $brand-color-pure;\r\n    color: $neutral-color-white;\r\n  }\r\n  .p-selectbutton .p-button {\r\n    border: 1px solid $neutral-color-light-04;\r\n    color: $neutral-color-dark-03;\r\n  }\r\n}\r\n",
                    "styleUrl": "./select-button.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "FreudSkeletonComponent",
            "id": "component-FreudSkeletonComponent-c93669ce5126df2e9cf53b500f9e6f6cf185717940e437b34d58ab4c811600e9dc815f3c7b85ca3f6a7016da8d9bf461c2a8dd45077bbb9781a7404ba5123bb5",
            "file": "projects/web-components/src/components/skeleton/skeleton.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "freud-skeleton",
            "styleUrls": [
                "./skeleton.component.scss"
            ],
            "styles": [],
            "template": "<p-skeleton\n  [width]=\"width\"\n  [height]=\"height\"\n></p-skeleton>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "bgColor",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "height",
                    "defaultValue": "'100px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "width",
                    "defaultValue": "'100%'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'freud-skeleton',\n  template: `\n    <p-skeleton\n      [width]=\"width\"\n      [height]=\"height\"\n    ></p-skeleton>\n  `,\n  styleUrls: ['./skeleton.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    class: 'freud-skeleton',\n    '[class.freud-bgcolor]': `bgColor`,\n  }\n})\nexport class FreudSkeletonComponent {\n  @Input() width: string = '100%';\n  @Input() height: string = '100px';\n  @Input() bgColor: boolean = false;\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../../../tokens/dist/style/scss/_variables.scss';\r\n\r\n.freud-skeleton:not(.freud-bgcolor) {\r\n  .p-skeleton {\r\n    background-color: $neutral-color-light-02;\r\n  }\r\n}\r\n.freud-skeleton.freud-bgcolor {\r\n  .p-skeleton {\r\n    background-color: $brand-color-06;\r\n  }\r\n  .p-skeleton:after {\r\n    background: linear-gradient(\r\n        90deg, rgba(255, 255, 255, 0),\r\n        rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0));\r\n  }\r\n}\r\n",
                    "styleUrl": "./skeleton.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "FreudSpeedDialComponent",
            "id": "component-FreudSpeedDialComponent-7878025c9a1235cd349e30ec11e83066d953fc189d751a1b1f944acab45753ccd4d119a9bdf9c6db30286be9de7701b1436bcf56fa4a3ce2c7c469d0096375f0",
            "file": "projects/web-components/src/components/speed-dial/speed-dial.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "freud-speed-dial",
            "styleUrls": [
                "./speed-dial.component.scss"
            ],
            "styles": [],
            "template": "<p-speedDial\n  [id]=\"id\"\n  [visible]=\"visible\"\n  [mask]=\"mask\"\n  [disabled]=\"disabled\"\n  [showIcon]=\"showIcon\"\n  [hideIcon]=\"hideIcon\"\n  [type]=\"type\"\n  [direction]=\"direction\"\n  [model]=\"items\"\n  (onShow)=\"onShow.emit()\"\n  (onHide)=\"onHide.emit()\"\n  (onVisibleChange)=\"onVisibleChange.emit()\">\n</p-speedDial>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "bgColor",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "direction",
                    "defaultValue": "'up'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "directions",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hideIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "FreudMenuItem[]",
                    "decorators": []
                },
                {
                    "name": "mask",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showIcon",
                    "defaultValue": "'freud-icon freud-icon-plus'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'linear'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "types",
                    "decorators": []
                },
                {
                    "name": "visible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onHide",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "onShow",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "onVisibleChange",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FreudMenuItem } from \"@freud-ds/web-components\";\n\ntype directions = 'up' | 'down' | 'left' | 'right' | 'up-left' | 'up-right' | 'down-left' | 'down-right';\ntype types = 'linear' | 'circle' | 'semi-circle' | 'quarter-circle';\n@Component({\n  selector: 'freud-speed-dial',\n  template: `\n    <p-speedDial\n      [id]=\"id\"\n      [visible]=\"visible\"\n      [mask]=\"mask\"\n      [disabled]=\"disabled\"\n      [showIcon]=\"showIcon\"\n      [hideIcon]=\"hideIcon\"\n      [type]=\"type\"\n      [direction]=\"direction\"\n      [model]=\"items\"\n      (onShow)=\"onShow.emit()\"\n      (onHide)=\"onHide.emit()\"\n      (onVisibleChange)=\"onVisibleChange.emit()\">\n    </p-speedDial>\n  `,\n  styleUrls: ['./speed-dial.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    class: 'freud-speed-dial',\n    '[class.freud-speed-dial-bgcolor]': `bgColor`,\n  }\n})\nexport class FreudSpeedDialComponent {\n\n  @Input() id: string = '';\n  @Input() visible: boolean = false;\n  @Input() mask: boolean = false;\n  @Input() items!: FreudMenuItem[];\n  @Input() disabled: boolean = false;\n  @Input() bgColor: boolean = false;\n  @Input() showIcon: string = 'freud-icon freud-icon-plus';\n  @Input() hideIcon: string = '';\n  @Input() type: types = 'linear';\n  @Input() direction: directions = 'up';\n  @Output() onVisibleChange: EventEmitter<void> = new EventEmitter<void>();\n  @Output() onShow: EventEmitter<void> = new EventEmitter<void>();\n  @Output() onHide: EventEmitter<void> = new EventEmitter<void>();\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../../../tokens/dist/style/scss/_variables.scss';\r\n\r\n.freud-speed-dial:not(.freud-speed-dial-bgcolor) {\r\n  .p-button, .p-button:hover {\r\n    background: $brand-color-pure;\r\n    border: 1px solid $brand-color-pure;\r\n    box-shadow: 0 0 0 2px $brand-color-pure;\r\n  }\r\n  .p-speeddial-action {\r\n    background-color: $brand-color-05;\r\n    width: 42px;\r\n    height: 42px;\r\n  }\r\n}\r\n\r\n.freud-speed-dial {\r\n  .p-speeddial-button.p-button.p-button-icon-only {\r\n    width: 56px;\r\n    height: 56px;\r\n  }\r\n  .p-speeddial-button.p-button.p-button-icon-only .p-button-icon {\r\n    font-size: $font-size-lg;\r\n  }\r\n  .p-speeddial-action-icon {\r\n    font-size: $font-size-md;\r\n  }\r\n}\r\n\r\n.freud-speed-dial.freud-speed-dial-bgcolor {\r\n  .p-button, .p-button:hover {\r\n    background: $neutral-color-white;\r\n    border: 1px solid $neutral-color-white;\r\n    box-shadow: 0 0 0 2px $neutral-color-white;\r\n    color: $brand-color-pure;\r\n  }\r\n  .p-speeddial-action {\r\n    background-color: $brand-color-02;\r\n    color: $brand-color-pure;\r\n    width: 42px;\r\n    height: 42px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./speed-dial.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "FreudSplitButtonComponent",
            "id": "component-FreudSplitButtonComponent-501887a6871f88fa145b5ea6c6fe2a2e2e32b6acee4a0d80976cdbee00927e797ec3daee87566b9bc2bbf5486295de61235e7232ab467ad0411853fe7c5aee96",
            "file": "projects/web-components/src/components/split-button/split-button.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "freud-split-button",
            "styleUrls": [
                "./split-button.component.scss"
            ],
            "styles": [],
            "template": "<p-splitButton\n  [label]=\"label\"\n  [disabled]=\"disabled\"\n  [model]=\"items\"\n  (onDropdownClick)=\"onDropdownClick.emit($event)\"\n  (onClick)=\"onClick.emit()\">\n</p-splitButton>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "bgColor",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "FreudMenuItem[]",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "onDropdownClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FreudMenuItem } from \"../../api\";\n\n@Component({\n  selector: 'freud-split-button',\n  template: `\n    <p-splitButton\n      [label]=\"label\"\n      [disabled]=\"disabled\"\n      [model]=\"items\"\n      (onDropdownClick)=\"onDropdownClick.emit($event)\"\n      (onClick)=\"onClick.emit()\">\n    </p-splitButton>\n  `,\n  styleUrls: ['./split-button.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    class: 'freud-split-button',\n    '[class.freud-split-bgcolor]': `bgColor`,\n  }\n})\nexport class FreudSplitButtonComponent {\n\n  @Input() label!: string;\n  @Input() disabled: boolean = false;\n  @Input() items!: FreudMenuItem[];\n  @Input() bgColor: boolean = false;\n  @Output() onClick: EventEmitter<void> = new EventEmitter<void>();\n  @Output() onDropdownClick: EventEmitter<any> = new EventEmitter<any>();\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// TODO: Verificar o import\r\n@import '../../../../../../tokens/dist/style/scss/_variables.scss';\r\n\r\n.freud-split-button:not(.freud-split-bgcolor) {\r\n  .p-button {\r\n    background-color: $brand-color-pure;\r\n    border-color: $brand-color-pure;\r\n    font-weight: $font-weight-bold;\r\n  }\r\n  .p-button:focus {\r\n    box-shadow: unset;\r\n  }\r\n}\r\n\r\n.freud-split-button.freud-split-bgcolor {\r\n  .p-button {\r\n    background-color: $neutral-color-white;\r\n    border-color: $neutral-color-white;\r\n    font-weight: $font-weight-bold;\r\n    color: $brand-color-pure;\r\n  }\r\n  .p-button:focus {\r\n    box-shadow: unset;\r\n  }\r\n}\r\n\r\n.freud-split-button {\r\n  .p-menu .p-menuitem-link:hover {\r\n    background-color: $neutral-color-light-02;\r\n  }\r\n  .p-splitbutton-defaultbutton {\r\n    border-radius: $border-radius-md 0 0 $border-radius-md;\r\n  }\r\n  .p-splitbutton-menubutton {\r\n    border-radius: 0 $border-radius-md $border-radius-md 0;\r\n  }\r\n\r\n  .p-menu a.p-menuitem-link .p-menuitem-text,\r\n  .p-menu .p-menuitem-link:not(.p-disabled):hover .p-menuitem-text,\r\n  .p-menu .p-menuitem-link .p-menuitem-icon {\r\n    color: $neutral-color-dark-03;\r\n  }\r\n  .p-menuitem-link:focus {\r\n    box-shadow: 0 0 0 1px $brand-color-01;\r\n    background-color: $brand-color-01;\r\n  }\r\n  .p-menu-overlay {\r\n    border-radius: $border-radius-md;\r\n    box-shadow: $shadow-level-3;\r\n  }\r\n}\r\n",
                    "styleUrl": "./split-button.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "FreudStepsComponent",
            "id": "component-FreudStepsComponent-70bb36fc3f5f89d11219246de13e2db8f8e909a39e3ff295c315f83cfa60cb11edbd93fe7db21ed46042bee68eb784c0871f1cd3f818e9f46feac5fef8432c06",
            "file": "projects/web-components/src/components/steps/steps.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "freud-steps",
            "styleUrls": [
                "./steps.component.scss"
            ],
            "styles": [],
            "template": "<p-steps\n  [model]=\"model\"\n  [activeIndex]=\"activeIndex\"\n  [readonly]=\"readonly\"\n  (activeIndexChange)=\"activeIndexChange.emit($event)\">\n</p-steps>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "bgColor",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "StepMenu[]",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "activeIndexChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "EventEmitter<number>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\nimport { FreudMenuItem } from \"../../api/menu.interface\";\n\nexport interface StepMenu extends FreudMenuItem {}\n\n@Component({\n  selector: 'freud-steps',\n  template: `\n    <p-steps\n      [model]=\"model\"\n      [activeIndex]=\"activeIndex\"\n      [readonly]=\"readonly\"\n      (activeIndexChange)=\"activeIndexChange.emit($event)\">\n    </p-steps>\n  `,\n  styleUrls: ['./steps.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    class: 'freud-steps',\n    '[class.freud-steps-bgcolor]': `bgColor`,\n  }\n})\nexport class FreudStepsComponent {\n\n  @Input() model!: StepMenu[];\n  @Input() readonly: boolean = false;\n  @Input() bgColor: boolean = false;\n  @Input() activeIndex: number = 0;\n  @Output() activeIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// TODO: Verificar o import\r\n@import '../../../../../../tokens/dist/style/scss/_variables.scss';\r\n\r\n.freud-steps {\r\n  .p-steps .p-steps-item:before {\r\n    border-top: 1px solid $neutral-color-light-03;\r\n  }\r\n\r\n  .p-steps-item {\r\n    opacity: 1 !important;\r\n    font-weight: $font-weight-bold;\r\n  }\r\n  .p-steps .p-steps-item:not(.p-highlight) .p-menuitem-link .p-steps-number {\r\n    color: $neutral-color-dark-01;\r\n  }\r\n  .p-steps .p-steps-item.p-highlight .p-steps-number {\r\n    background-color: $brand-color-pure;\r\n    color: $neutral-color-white;\r\n    border: $brand-color-pure;\r\n  }\r\n\r\n  &:not(.freud-steps-bgcolor) {\r\n    .p-steps .p-steps-item .p-menuitem-link .p-steps-title {\r\n      color: $neutral-color-dark-03;\r\n    }\r\n  }\r\n\r\n  &.freud-steps-bgcolor {\r\n    .p-steps .p-steps-item .p-menuitem-link {\r\n      background-color: transparent;\r\n    }\r\n    .p-steps .p-steps-item .p-menuitem-link .p-steps-title {\r\n      color: $neutral-color-white;\r\n    }\r\n  }\r\n}",
                    "styleUrl": "./steps.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "FreudTagComponent",
            "id": "component-FreudTagComponent-0925814cfb03df05fd69c3ea6add086a0c6b3389198c5d49744a206c34d07234e9a8752ba6d91e63715dbad90e9b96a9d3e26b626055a486b926b8b6753b6f08",
            "file": "projects/web-components/src/components/tag/tag.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "freud-tag",
            "styleUrls": [
                "./tag.component.scss"
            ],
            "styles": [],
            "template": "<p-tag [value]=\"value\" class=\"freud-tag-{{color || 'primary'}}\" [rounded]=\"true\"></p-tag>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "colors",
                    "decorators": []
                },
                {
                    "name": "outline",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\ntype colors = 'primary' | 'success' | 'info' | 'warning' | 'error';\n\n@Component({\n  selector: 'freud-tag',\n  template: `\n    <p-tag [value]=\"value\" class=\"freud-tag-{{color || 'primary'}}\" [rounded]=\"true\"></p-tag>\n  `,\n  host: {\n    class: 'freud-tag freud-typography smallSemibold1-5',\n    '[class.outline]':  'outline'\n  },\n  styleUrls: ['./tag.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class FreudTagComponent {\n\n  @Input() value!: string;\n  @Input() color: colors = 'primary';\n  @Input() outline: boolean = false;\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// TODO: Verificar o import\r\n@import '../../../../../../tokens/dist/style/scss/_variables.scss';\r\n\r\n.freud-tag .p-tag {\r\n  padding: 3px $spacing-size-nano;\r\n}\r\n.freud-tag .p-tag-value {\r\n    font-weight: $font-weight-semibold;\r\n    font-size: $font-size-xxxs;\r\n    line-height: 18px;\r\n}\r\n\r\n.freud-tag:not(.outline) {\r\n\r\n  .freud-tag-primary .p-tag {\r\n    background-color: $brand-color-pure;\r\n  }\r\n\r\n  .freud-tag-success .p-tag {\r\n    background-color: $feedback-color-positive-04;\r\n  }\r\n  .freud-tag-info .p-tag {\r\n    background-color: $feedback-color-neutral-pure;\r\n  }\r\n  .freud-tag-warning .p-tag {\r\n    background-color: $feedback-color-warning-pure;\r\n    color: $neutral-color-black;\r\n  }\r\n  .freud-tag-error .p-tag {\r\n    background-color: $feedback-color-negative-04;\r\n  }\r\n}\r\n\r\n.freud-tag.outline {\r\n  .p-tag {\r\n    background-color: $neutral-color-white;\r\n  }\r\n\r\n  .freud-tag-primary .p-tag {\r\n    border: 1px solid $brand-color-pure;\r\n    color: $brand-color-pure;\r\n  }\r\n\r\n  .freud-tag-success .p-tag {\r\n    border: 1px solid $feedback-color-positive-04;\r\n    color: $feedback-color-positive-04;\r\n  }\r\n  .freud-tag-info .p-tag {\r\n    border: 1px solid $feedback-color-neutral-pure;\r\n    color: $feedback-color-neutral-pure;\r\n  }\r\n  .freud-tag-warning .p-tag {\r\n    border: 1px solid $feedback-color-warning-pure;\r\n    color: $feedback-color-warning-pure;\r\n  }\r\n  .freud-tag-error .p-tag {\r\n    border: 1px solid $feedback-color-negative-04;\r\n    color: $feedback-color-negative-04;\r\n  }\r\n}\r\n",
                    "styleUrl": "./tag.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "FreudTooltipComponent",
            "id": "component-FreudTooltipComponent-bb9ccabfca305ea7279cda01611d411a55ab6ab9471629a9b589e92ee6343170f32e5fa2f4e9bbbefb705f9287abf464d3d6b3d7b07c75e931868fb5ce77a438",
            "file": "projects/web-components/src/components/tooltip/tooltip.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "exportAs": "freudTooltip",
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[freud-tooltip]",
            "styleUrls": [
                "./tooltip.component.scss"
            ],
            "styles": [],
            "template": "<div [pTooltip]=\"tooltipLabel\" [tooltipPosition]=\"tooltipPosition\" [class.bgColor]=\"bgColor\"\n    [tooltipStyleClass]=\"bgColor ? 'freud-tooltip freud-bg-color' : 'freud-tooltip'\" class=\"freud-tooltip-container\">\n  <ng-content></ng-content>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "bgColor",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "tooltipLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipPosition",
                    "defaultValue": "'top'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "position",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\nimport { Component, Input } from '@angular/core';\n\ntype position = 'top' | 'bottom' | 'left' | 'right';\n\n@Component({\n  selector: '[freud-tooltip]',\n  exportAs: 'freudTooltip',\n  template: `\n    <div [pTooltip]=\"tooltipLabel\" [tooltipPosition]=\"tooltipPosition\" [class.bgColor]=\"bgColor\"\n        [tooltipStyleClass]=\"bgColor ? 'freud-tooltip freud-bg-color' : 'freud-tooltip'\" class=\"freud-tooltip-container\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  styleUrls: ['./tooltip.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class FreudTooltipComponent {\n\n  @Input() tooltipLabel: string = '';\n  @Input() tooltipPosition: position = 'top';\n  @Input() bgColor: boolean = false;\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// TODO: Verificar o import\r\n@import '../../../../../../tokens/dist/style/scss/_variables.scss';\r\n@import '../../../scss/typography.scss';\r\n\r\n.freud-tooltip-container {\r\n    display:inline-block;\r\n    position:relative;\r\n}\r\n\r\n.p-tooltip {\r\n    .p-tooltip-text {\r\n        padding: 10.5px;\r\n        color: $neutral-color-white;\r\n        @include typography($font-size-xs, $font-weight-regular, 24px);\r\n        border-radius: $border-radius-md;\r\n        background-color:  $neutral-color-dark-03;\r\n        box-shadow: $shadow-level-3;\r\n    }\r\n}\r\n\r\n.p-tooltip.freud-bg-color {\r\n\r\n  &.p-tooltip-right .p-tooltip-arrow {\r\n    border-right-color: $neutral-color-white;\r\n  }\r\n  &.p-tooltip-left .p-tooltip-arrow {\r\n    border-left-color: $neutral-color-white;\r\n  }\r\n  &.p-tooltip-top .p-tooltip-arrow {\r\n    border-top-color: $neutral-color-white;\r\n  }\r\n  &.p-tooltip-bottom .p-tooltip-arrow {\r\n    border-bottom-color: $neutral-color-white;\r\n  }\r\n\r\n  .p-tooltip-text{\r\n    color: $neutral-color-dark-03;\r\n    background-color: $neutral-color-white;\r\n  }\r\n}\r\n",
                    "styleUrl": "./tooltip.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "FreudTypographyComponent",
            "id": "component-FreudTypographyComponent-7723528e8d15aa76f1a73336eff2cac9ab15804bb4605eeb6c7276d239ae97134967bcaba44d064e12cabeb2805ad69f5c24c7ede8f9ba0be5065a8668011771",
            "file": "projects/web-components/src/components/typography/typography.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "exportAs": "freudTypography",
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[freud-typography]",
            "styleUrls": [
                "./typography.component.scss"
            ],
            "styles": [],
            "template": "<ng-content></ng-content>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "fontBgColor",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "fontType",
                    "defaultValue": "'bodyRegular1-5'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "fontTypes",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  HostBinding,\r\n  Input,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { bodyTypes, headingTypes } from './typrography.type';\r\n\r\nexport const types = headingTypes.concat(bodyTypes);\r\n\r\ntype fontTypes = typeof types[number];\r\n\r\n@Component({\r\n  selector: '[freud-typography]',\r\n  exportAs: 'freudTypography',\r\n  styleUrls: ['./typography.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: `<ng-content></ng-content> `,\r\n  host: {\r\n    class: 'freud-typography',\r\n    '[class.typography-bg-color]': `fontBgColor`,\r\n  },\r\n})\r\nexport class FreudTypographyComponent {\r\n  @HostBinding('class') @Input() fontType: fontTypes = 'bodyRegular1-5';\r\n  @Input() fontBgColor: boolean = false;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../scss/typography.scss';\r\n",
                    "styleUrl": "./typography.component.scss"
                }
            ],
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "FreudAvatarModule",
            "id": "module-FreudAvatarModule-09e343142257badaf18803b90b479bd7b0299c84dc8b07153326734a0f36c51074d6c1ecd0219aa987c05bb0b42cc5a2bf18417c3e1779ed93a0482ca1794bc1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/web-components/src/components/avatar/avatar.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AvatarModule } from 'primeng/avatar';\r\n\r\nimport { FreudAvatarComponent } from './avatar.component';\r\nimport { FreudBadgeModule } from '../badge';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, AvatarModule, FreudBadgeModule],\r\n  declarations: [FreudAvatarComponent],\r\n  exports: [FreudAvatarComponent]\r\n})\r\nexport class FreudAvatarModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FreudAvatarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "FreudBadgeModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FreudAvatarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FreudBadgeModule",
            "id": "module-FreudBadgeModule-cb68a687561b658c92aa8a6ac6f26eca6d5640eda702091624d0c42f4c0e3d9737b97fd9672761fc6fbce79b64b7b3f464434d75b1741f6b460ef309189ea7d7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/web-components/src/components/badge/badge.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BadgeModule } from 'primeng/badge';\r\n\r\nimport { FreudBadgeComponent } from './badge.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, BadgeModule],\r\n  declarations: [FreudBadgeComponent],\r\n  exports: [FreudBadgeComponent],\r\n})\r\nexport class FreudBadgeModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FreudBadgeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FreudBadgeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FreudButtonModule",
            "id": "module-FreudButtonModule-2e87d3b09d3ef4faf9ca0ac3cdcdb5406f8b8aa485cf3943cb222f5f9affe2d0ee2544067b7e6bd5a747f0bb6016a65908528a7a8fe2b95c8d2ea27b1e0c2fc9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/web-components/src/components/button/button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ButtonModule } from 'primeng/button';\r\n\r\nimport { FreudButtonComponent } from './button.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, ButtonModule],\r\n  declarations: [FreudButtonComponent],\r\n  exports: [FreudButtonComponent]\r\n})\r\nexport class FreudButtonModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FreudButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FreudButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FreudHeaderModule",
            "id": "module-FreudHeaderModule-181e311e2883a4712b7efd44fc7c78607023de0da0ee346af9932247a7e06607754a09bccfbaa9204d369e00ff986da3d0251902cfbdd4e804b0a800f1faff62",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "stories/header/header.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FreudHeaderComponent } from './header.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [FreudHeaderComponent],\r\n  exports: [FreudHeaderComponent]\r\n})\r\nexport class FreudHeaderModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FreudHeaderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FreudHeaderComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FreudKnobModule",
            "id": "module-FreudKnobModule-9a5b6f3e860e63416f9fa8367d70c8ae6acbfecb0d60e00a4c2a504a63c7362d131e178b3a4dd3b47bffcd3bfc569c3e1d415ea76983e9214ec0c01b5be1fd81",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/web-components/src/components/knob/knob.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { KnobModule } from 'primeng/knob';\r\n\r\nimport { FreudKnobComponent } from './knob.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, KnobModule, FormsModule],\r\n  declarations: [FreudKnobComponent],\r\n  exports: [FreudKnobComponent]\r\n})\r\nexport class FreudKnobModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FreudKnobComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FreudKnobComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FreudProgressSpinnerModule",
            "id": "module-FreudProgressSpinnerModule-d051fb1586a5c32f1a02039291b586424bc8ad7b56eeb2ef6acdcbfc86a17d5cc5e73f3a1d65e0a0f005250bba25a4623a58cee0049b0aca821278b4492ea5e3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/web-components/src/components/progress-spinner/progress-spinner.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FreudProgressSpinnerComponent } from './progress-spinner.component';\r\nimport { ProgressSpinnerModule } from \"primeng/progressspinner\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule, ProgressSpinnerModule],\r\n  declarations: [FreudProgressSpinnerComponent],\r\n  exports: [FreudProgressSpinnerComponent]\r\n})\r\nexport class FreudProgressSpinnerModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FreudProgressSpinnerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FreudProgressSpinnerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FreudRatingModule",
            "id": "module-FreudRatingModule-86984f9dac0e52b4c7ca32137cd604f55510450431cc5275eabc0a5f84d98a2935e5c24fb00fd6f19067841d44e70c69a2c3dba3435288529088a2e957e2c77f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/web-components/src/components/rating/rating.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RatingModule } from \"primeng/rating\";\r\n\r\nimport { FreudRatingComponent } from './rating.component';\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RatingModule, FormsModule],\r\n  declarations: [FreudRatingComponent],\r\n  exports: [FreudRatingComponent]\r\n})\r\nexport class FreudRatingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FreudRatingComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FreudRatingComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FreudSelectButtonModule",
            "id": "module-FreudSelectButtonModule-097a49c02ac7d56cb40c03fce8fd080ba07cac43006ee63e69f6f64cef6811e8adece1116a2585101c325229b90a0351aab438a4f7e1856202fc44e5808bd30d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/web-components/src/components/select-button/select-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\n\r\nimport { FreudSelectButtonComponent } from './select-button.component';\r\nimport {FormsModule} from \"@angular/forms\";\r\n\r\n@NgModule({\r\n    imports: [CommonModule, SelectButtonModule, FormsModule],\r\n  declarations: [FreudSelectButtonComponent],\r\n  exports: [FreudSelectButtonComponent]\r\n})\r\nexport class FreudSelectButtonModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FreudSelectButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FreudSelectButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FreudSkeletonModule",
            "id": "module-FreudSkeletonModule-4755659213e37c1b06ee4789655eff93eb011282aca298cf8111ced9c2adf9b299e074929f94f6914a24ba502df46fcd7536e0dcd73eaa5b878568d6324814a2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/web-components/src/components/skeleton/skeleton.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FreudSkeletonComponent } from './skeleton.component';\r\nimport { SkeletonModule } from \"primeng/skeleton\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule, SkeletonModule, BrowserModule, BrowserAnimationsModule],\r\n  declarations: [FreudSkeletonComponent],\r\n  exports: [FreudSkeletonComponent]\r\n})\r\nexport class FreudSkeletonModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FreudSkeletonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FreudSkeletonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FreudSpeedDialModule",
            "id": "module-FreudSpeedDialModule-58dad29444cbe178bf6e334c25701decedb616f8fcdea95c1e90a72fa34275b96168db2457cd17a30ead8dc78d7e10179a6039f2d400638370f2d0808cbf93a4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/web-components/src/components/speed-dial/speed-dial.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FreudSpeedDialComponent } from './speed-dial.component';\r\nimport { SpeedDialModule } from \"primeng/speeddial\";\r\nimport { FreudTooltipModule } from \"../tooltip\";\r\n\r\n@NgModule({\r\n    imports: [CommonModule, SpeedDialModule, FreudTooltipModule],\r\n  declarations: [FreudSpeedDialComponent],\r\n  exports: [FreudSpeedDialComponent]\r\n})\r\nexport class FreudSpeedDialModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FreudSpeedDialComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "FreudTooltipModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FreudSpeedDialComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FreudSplitButtonModule",
            "id": "module-FreudSplitButtonModule-159a536ce319318fa41d128a50d55eefa2a709cf8499da060ea40ab5d23971dce3be056aa89a782eb9454859b5c2fc32c0dfc80500c56c9de5cd82aab2701701",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/web-components/src/components/split-button/split-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SplitButtonModule } from 'primeng/splitbutton';\r\n\r\nimport { FreudSplitButtonComponent } from './split-button.component';\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\n\r\n@NgModule({\r\n    imports: [CommonModule, SplitButtonModule, BrowserAnimationsModule, BrowserModule],\r\n  declarations: [FreudSplitButtonComponent],\r\n  exports: [FreudSplitButtonComponent]\r\n})\r\nexport class FreudSplitButtonModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FreudSplitButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FreudSplitButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FreudStepsModule",
            "id": "module-FreudStepsModule-06c0e29b5142632969f575193eca81c047388808934318a5a9fa1c6b7b2f394d4fa6c8aa63255ae01bc20a10dd2e8d00ea3b5b29e009821227f50c055ac4c2a9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/web-components/src/components/steps/steps.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { StepsModule } from 'primeng/steps';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { FreudStepsComponent } from './steps.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, StepsModule, RouterModule, BrowserAnimationsModule],\r\n  declarations: [FreudStepsComponent],\r\n  exports: [FreudStepsComponent]\r\n})\r\nexport class FreudStepsModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FreudStepsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FreudStepsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FreudTagModule",
            "id": "module-FreudTagModule-eba9628c1ea690c965640583d11a54bc3dde16d2cf3e40a2825f85ee0d84f27f92609b872951bff6b7b18d4bc56c1c5aeddfdce37e0cc7e4a305b23b2652c967",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/web-components/src/components/tag/tag.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TagModule  } from 'primeng/tag';\r\n\r\nimport { FreudTagComponent } from './tag.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, TagModule],\r\n  declarations: [FreudTagComponent],\r\n  exports: [FreudTagComponent]\r\n})\r\nexport class FreudTagModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FreudTagComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FreudTagComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FreudTooltipModule",
            "id": "module-FreudTooltipModule-7a4dbe2e52b385b237b72a5f80f960bbaf77c340077a1b2f207f107659a3577d712996079f2bc3b89f27f0ebb8e1b61f8b70e5ad8ad48ecf37fd7c950a876614",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/web-components/src/components/tooltip/tooltip.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FreudTooltipComponent } from './tooltip.component';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, TooltipModule],\r\n  declarations: [FreudTooltipComponent],\r\n  exports: [FreudTooltipComponent]\r\n})\r\nexport class FreudTooltipModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FreudTooltipComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FreudTooltipComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FreudTypographyModule",
            "id": "module-FreudTypographyModule-763a06fdd0b7c597320200983edb506c090417074deb81fbb891a289348ef0701360036a4c1f4b11135a3af4b9e98889a91ae71b1eb7850cb5307f6b4e593cef",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/web-components/src/components/typography/typography.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FreudTypographyComponent } from './typography.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [FreudTypographyComponent],\r\n  exports: [FreudTypographyComponent],\r\n})\r\nexport class FreudTypographyModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FreudTypographyComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FreudTypographyComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Actived",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/badge/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateBlank.bind({})"
            },
            {
                "name": "Background",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/select-button/SelectButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BgColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/avatar/Avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BgColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/badge/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateBgColor.bind({})"
            },
            {
                "name": "BgColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/rating/Rating.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BgColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/knob/Knob.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BgColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/progress-spinner/ProgressSpinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BgColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/speed-dial/SpeedDial.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BgColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/skeleton/Skeleton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BgColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/steps/Steps.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BgColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/split-button/SplitButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BgColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/tag/Tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateBgColor.bind({})"
            },
            {
                "name": "BgColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BgColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/tooltip/Tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BgColorDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/rating/Rating.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BgColorDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/knob/Knob.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BgColorDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/speed-dial/SpeedDial.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BgColorOutLine",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/tag/Tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateBgColor.bind({})"
            },
            {
                "name": "bodyTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/web-components/src/components/typography/typrography.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  // Regular\r\n  'smallRegular1-5',\r\n  'bodyRegular1-5',\r\n\r\n  'smallRegular1-2',\r\n  'bodyRegular1-2',\r\n\r\n  'smallRegular1',\r\n  'bodyRegular1',\r\n  \r\n  'smallRegularAuto',\r\n  'bodyRegularAuto',\r\n\r\n  // Semibold\r\n  'smallSemibold1-5',\r\n  'bodySemibold1-5',\r\n\r\n  'smallSemibold1-2',\r\n  'bodySemibold1-2',\r\n\r\n  'smallSemibold1',\r\n  'bodySemibold1',\r\n\r\n  'smallSemiboldAuto',\r\n  'bodySemiboldAuto',\r\n\r\n  // Bold\r\n  'smallBold1-5',\r\n  'bodyBold1-5',\r\n\r\n  'smallBold1-2',\r\n  'bodyBold1-2',\r\n\r\n  'smallBold1',\r\n  'bodyBold1',\r\n\r\n  'smallBoldAuto',\r\n  'bodyBoldAuto',\r\n]"
            },
            {
                "name": "Bottom",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/tooltip/Tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/web-components/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/badge/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/rating/Rating.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/knob/Knob.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/select-button/SelectButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/progress-spinner/ProgressSpinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/skeleton/Skeleton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/steps/Steps.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/split-button/SplitButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DirectionDown",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/speed-dial/SpeedDial.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DirectionLeft",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/speed-dial/SpeedDial.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateDisabled.bind({})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/rating/Rating.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/knob/Knob.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/select-button/SelectButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/speed-dial/SpeedDial.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/split-button/SplitButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/badge/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/tag/Tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Ghost",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "GhostBackground",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "HeadingBold",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateBold.bind({})"
            },
            {
                "name": "HeadingRegular",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateRegular.bind({})"
            },
            {
                "name": "HeadingSemibold",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateSemibold.bind({})"
            },
            {
                "name": "headingTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/web-components/src/components/typography/typrography.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  // Regular\r\n  'h1Regular1-5',\r\n  'h2Regular1-5',\r\n  'h3Regular1-5',\r\n  'h4Regular1-5',\r\n  'h5Regular1-5',\r\n  'h6Regular1-5',\r\n\r\n  'h1Regular1-2',\r\n  'h2Regular1-2',\r\n  'h3Regular1-2',\r\n  'h4Regular1-2',\r\n  'h5Regular1-2',\r\n  'h6Regular1-2',\r\n\r\n  'h1Regular1',\r\n  'h2Regular1',\r\n  'h3Regular1',\r\n  'h4Regular1',\r\n  'h5Regular1',\r\n  'h6Regular1',\r\n  \r\n  'h1RegularAuto',\r\n  'h2RegularAuto',\r\n  'h3RegularAuto',\r\n  'h4RegularAuto',\r\n  'h5RegularAuto',\r\n  'h6RegularAuto',\r\n\r\n  // Semibold\r\n  'h1Semibold1-5',\r\n  'h2Semibold1-5',\r\n  'h3Semibold1-5',\r\n  'h4Semibold1-5',\r\n  'h5Semibold1-5',\r\n  'h6Semibold1-5',\r\n\r\n  'h1Semibold1-2',\r\n  'h2Semibold1-2',\r\n  'h3Semibold1-2',\r\n  'h4Semibold1-2',\r\n  'h5Semibold1-2',\r\n  'h6Semibold1-2',\r\n\r\n  'h1Semibold1',\r\n  'h2Semibold1',\r\n  'h3Semibold1',\r\n  'h4Semibold1',\r\n  'h5Semibold1',\r\n  'h6Semibold1',\r\n\r\n  'h1SemiboldAuto',\r\n  'h2SemiboldAuto',\r\n  'h3SemiboldAuto',\r\n  'h4SemiboldAuto',\r\n  'h5SemiboldAuto',\r\n  'h6SemiboldAuto',\r\n\r\n  // Bold\r\n  'h1Bold1-5',\r\n  'h2Bold1-5',\r\n  'h3Bold1-5',\r\n  'h4Bold1-5',\r\n  'h5Bold1-5',\r\n  'h6Bold1-5',\r\n\r\n  'h1Bold1-2',\r\n  'h2Bold1-2',\r\n  'h3Bold1-2',\r\n  'h4Bold1-2',\r\n  'h5Bold1-2',\r\n  'h6Bold1-2',\r\n\r\n  'h1Bold1',\r\n  'h2Bold1',\r\n  'h3Bold1',\r\n  'h4Bold1',\r\n  'h5Bold1',\r\n  'h6Bold1',\r\n\r\n  'h1BoldAuto',\r\n  'h2BoldAuto',\r\n  'h3BoldAuto',\r\n  'h4BoldAuto',\r\n  'h5BoldAuto',\r\n  'h6BoldAuto',\r\n]"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateIcon.bind({})"
            },
            {
                "name": "IconButtonRight",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateLoading .bind({})"
            },
            {
                "name": "IconMedium",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/avatar/Avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Imagem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/avatar/Avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/badge/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/tag/Tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/split-button/SplitButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "FreudMenuItem[]",
                "defaultValue": "[\n  {label: 'Update', icon: 'freud-icon freud-icon-refresh', command: () => {\n      console.log('Evento update')\n    }\n  },\n  {\n    label: 'Delete', icon: 'freud-icon freud-icon-close', command: () => {\n      console.log('Evento delete')\n    },\n  },\n  {label: 'Zenklub', icon: 'freud-icon freud-icon-info', url: 'http://zenklub.com'},\n  {separator: true},\n  {label: 'Setup', icon: 'freud-icon freud-icon-cog'}\n]"
            },
            {
                "name": "itemsWithLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/speed-dial/SpeedDial.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "FreudMenuItem[]",
                "defaultValue": "[\r\n  {icon: 'freud-icon freud-icon-refresh', command: () => {\r\n      console.log('Evento update')\r\n    }\r\n  },\r\n  {\r\n    icon: 'freud-icon freud-icon-close', command: () => {\r\n      console.log('Evento delete')\r\n    },\r\n  },\r\n  {icon: 'freud-icon freud-icon-check'}\r\n]"
            },
            {
                "name": "itemsWithoutIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/split-button/SplitButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "FreudMenuItem[]",
                "defaultValue": "[\n  {label: 'Update', command: () => {console.log('Evento update')}\n  },\n  {\n    label: 'Delete', command: () => {console.log('Evento delete')},\n  },\n  {label: 'Zenklub', url: 'http://zenklub.com'}\n]"
            },
            {
                "name": "itens",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/steps/Steps.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StepMenu[]",
                "defaultValue": "[\r\n  {label: 'Item1'},\r\n  {label: 'Item2'},\r\n  {label: 'Item3'},\r\n  {label: 'Item4'}\r\n]"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/avatar/Avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/badge/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Left",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/tooltip/Tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Loading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateLoading.bind({})"
            },
            {
                "name": "Mask",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/speed-dial/SpeedDial.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Medium",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/avatar/Avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OptionDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/select-button/SelectButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "options",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/select-button/SelectButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {label: 'Item1'},\n  {label: 'Item2'},\n  {label: 'Item3'},\n  {label: 'Item4'}\n]"
            },
            {
                "name": "optionsDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/select-button/SelectButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {label: 'Item1', disabled: true},\n  {label: 'Item2'},\n  {label: 'Item3'},\n  {label: 'Item4'}\n]"
            },
            {
                "name": "OutlineError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/tag/Tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OutlineInfo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/tag/Tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OutlinePrimary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/tag/Tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OutlineSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/tag/Tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OutlineWarning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/tag/Tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/badge/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/tag/Tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PrimaryBackground",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/web-components/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Right",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/tooltip/Tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SecondaryBackground",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SizeDefault",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/knob/Knob.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SizeLarge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/knob/Knob.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SizeLG",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateSize.bind({})"
            },
            {
                "name": "SizeMD",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateSize.bind({})"
            },
            {
                "name": "SizeSM",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateSize.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/avatar/Avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/badge/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/tag/Tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/avatar/Avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudAvatarComponent>",
                "defaultValue": "(args: FreudAvatarComponent) => ({\n  props: { ...args },\n  template: `\n    <freud-avatar [size]=\"size\" [label]=\"label\" [badge]=\"badge\" [bgColor]=\"bgColor\" [withIcon]=\"withIcon\" [image]=\"image\"></freud-avatar>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudButtonComponent>",
                "defaultValue": "(args: FreudButtonComponent) => ({\n  props: { ...args },\n  template: templateHTML.replace('{{label}}', 'Button {{color}}'),\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/badge/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudBadgeComponent>",
                "defaultValue": "(args: FreudBadgeComponent) => ({\n  props: { ...args },\n  template: `\n    <freud-badge [size]=\"size\" [color]=\"color\" [value]=\"value\"></freud-badge>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/rating/Rating.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudRatingComponent>",
                "defaultValue": "(\r\n  args: FreudRatingComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n    <freud-rating\r\n      [value]=\"value\"\r\n      [stars]=\"stars\"\r\n      [disabled]=\"disabled\"\r\n      [bgColor]=\"bgColor\">\r\n    </freud-rating>\r\n  `,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/knob/Knob.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudKnobComponent>",
                "defaultValue": "(\r\n  args: FreudKnobComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n    <freud-knob\r\n      [value]=\"value\"\r\n      [min]=\"min\"\r\n      [max]=\"max\"\r\n      [step]=\"step\"\r\n      [size]=\"size\"\r\n      [disabled]=\"disabled\"\r\n      [bgColor]=\"bgColor\">\r\n    </freud-knob>\r\n  `,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/select-button/SelectButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudSelectButtonComponent>",
                "defaultValue": "(args: FreudSelectButtonComponent) => ({\n  props: { ...args },\n  template: templateHTML,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/progress-spinner/ProgressSpinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudProgressSpinnerComponent>",
                "defaultValue": "(\r\n  args: FreudProgressSpinnerComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n  <div style=\"width: 350px\">\r\n      <freud-progress-spinner [bgColor]=\"bgColor\">\r\n      </freud-progress-spinner>\r\n  </div>\r\n  `,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/speed-dial/SpeedDial.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudSpeedDialComponent>",
                "defaultValue": "(\r\n  args: FreudSpeedDialComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n  <div style=\"height: 250px; width: 120px\">\r\n      <freud-speed-dial\r\n        [id]=\"id\"\r\n        [visible]=\"visible\"\r\n        [mask]=\"mask\"\r\n        [disabled]=\"disabled\"\r\n        [showIcon]=\"showIcon\"\r\n        [hideIcon]=\"hideIcon\"\r\n        [type]=\"type\"\r\n        [direction]=\"direction\"\r\n        [items]=\"items\"\r\n        [bgColor]=\"bgColor\">\r\n      </freud-speed-dial>\r\n  </div>\r\n  `,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/skeleton/Skeleton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudSkeletonComponent>",
                "defaultValue": "(\r\n  args: FreudSkeletonComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n  <div style=\"width: 350px\">\r\n      <freud-skeleton\r\n        [width]=\"'100%'\"\r\n        [height]=\"'15px'\"\r\n        [bgColor]=\"bgColor\">\r\n      </freud-skeleton>\r\n      <br>\r\n      <freud-skeleton\r\n        [width]=\"'100%'\"\r\n        [height]=\"'15px'\"\r\n        [bgColor]=\"bgColor\">\r\n      </freud-skeleton>\r\n      <br>\r\n      <freud-skeleton\r\n        [width]=\"'350px'\"\r\n        [height]=\"'70px'\"\r\n        [bgColor]=\"bgColor\">\r\n      </freud-skeleton>\r\n      <br>\r\n      <div style=\"display: flex\">\r\n        <freud-skeleton style=\"margin-right: 10px\"\r\n          [width]=\"'170px'\"\r\n          [height]=\"'70px'\"\r\n          [bgColor]=\"bgColor\">\r\n        </freud-skeleton>\r\n        <freud-skeleton\r\n          [width]=\"'170px'\"\r\n          [height]=\"'70px'\"\r\n          [bgColor]=\"bgColor\">\r\n        </freud-skeleton>\r\n      </div>\r\n  </div>\r\n  `,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/steps/Steps.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudStepsComponent>",
                "defaultValue": "(\r\n  args: FreudStepsComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n    <freud-steps [model]=\"model\" [readonly]=\"readonly\" [activeIndex]=\"activeIndex\" [bgColor]=\"bgColor\"></freud-steps>\r\n  `,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/split-button/SplitButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudSplitButtonComponent>",
                "defaultValue": "(args: FreudSplitButtonComponent) => ({\n  props: { ...args },\n  template: templateHTML,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/tag/Tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudTagComponent>",
                "defaultValue": "(args: FreudTagComponent) => ({\n  props: { ...args },\n  template: `\n    <freud-tag [outline]=\"outline\" [color]=\"color\" [value]=\"value\"></freud-tag>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudTypographyComponent>",
                "defaultValue": "(\r\n  args: FreudTypographyComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n    <p freud-typography [fontType]=\"fontType\" [fontBgColor]=\"fontBgColor\">{{label}}</p>\r\n  `\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/tooltip/Tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudTooltipComponent>",
                "defaultValue": "(\r\n  args: FreudTooltipComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n    <span freud-tooltip style=\"color:{{bgColor ? 'white' : 'black'}}\"\r\n      [tooltipLabel]=\"tooltipLabel\"\r\n      [tooltipPosition]=\"tooltipPosition\"\r\n      [bgColor]=\"bgColor\">Passe o mouse aqui!</span>\r\n  `,\r\n})"
            },
            {
                "name": "TemplateBgColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/badge/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudBadgeComponent>",
                "defaultValue": "(args: FreudBadgeComponent) => ({\n  props: { ...args },\n  template: `\n    <freud-badge style=\"margin-right: 8px;\" [color]=\"'primary'\" [value]=\"'1'\"></freud-badge>\n    <freud-badge style=\"margin-right: 8px;\" [color]=\"'success'\" [value]=\"'10'\"></freud-badge>\n    <freud-badge style=\"margin-right: 8px;\" [color]=\"'info'\" [value]=\"'5'\"></freud-badge>\n    <freud-badge style=\"margin-right: 8px;\" [color]=\"'warning'\" [value]=\"'99'\"></freud-badge>\n    <freud-badge style=\"margin-right: 8px;\" [color]=\"'error'\" [value]=\"'A'\"></freud-badge>\n    <freud-badge style=\"position: relative;top: 6px;\" [color]=\"'actived'\" [value]=\"''\"></freud-badge>\n  `,\n})"
            },
            {
                "name": "TemplateBgColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/tag/Tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudTagComponent>",
                "defaultValue": "(args: FreudTagComponent) => ({\n  props: { ...args },\n  template: `\n    <freud-tag style=\"margin-right: 8px\" [outline]=\"outline\" [value]=\"'Primary'\"></freud-tag>\n    <freud-tag style=\"margin-right: 8px\" [outline]=\"outline\" [color]=\"'success'\" [value]=\"'Success'\"></freud-tag>\n    <freud-tag style=\"margin-right: 8px\" [outline]=\"outline\" [color]=\"'info'\" [value]=\"'Info'\"></freud-tag>\n    <freud-tag style=\"margin-right: 8px\" [outline]=\"outline\" [color]=\"'warning'\" [value]=\"'Warning'\"></freud-tag>\n    <freud-tag style=\"margin-right: 8px\" [outline]=\"outline\" [color]=\"'error'\" [value]=\"'Error'\"></freud-tag>\n  `,\n})"
            },
            {
                "name": "TemplateBlank",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/badge/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudBadgeComponent>",
                "defaultValue": "(args: FreudBadgeComponent) => ({\n  props: { ...args },\n  template: `\n    <freud-badge [size]=\"size\" [color]=\"color\" [value]=\"value\" style=\"position: relative;top: 6px;\"></freud-badge>\n  `,\n})"
            },
            {
                "name": "TemplateBold",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudTypographyComponent>",
                "defaultValue": "(\r\n  args: FreudTypographyComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h6Bold1-5'\">h6/Bold-400/line-height-1.5 (h6Bold1-5)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h5Bold1-5'\">h5/Bold-400/line-height-1.5 (h5Bold1-5)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h4Bold1-5'\">h4/Bold-400/line-height-1.5 (h4Bold1-5)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h3Bold1-5'\">h3/Bold-400/line-height-1.5 (h3Bold1-5)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h2Bold1-5'\">h2/Bold-400/line-height-1.5 (h2Bold1-5)</p>\r\n  <p freud-typography [fontType]=\"'h1Bold1-5'\">h1/regular-400/line-height-1.5 (h1Bold1-5)</p>\r\n\r\n  <br><br>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h6Bold1-2'\">h6/Bold-400/line-height-1.2 (h6Bold1-2)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h5Bold1-2'\">h5/Bold-400/line-height-1.2 (h5Bold1-2)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h4Bold1-2'\">h4/Bold-400/line-height-1.2 (h4Bold1-2)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h3Bold1-2'\">h3/Bold-400/line-height-1.2 (h3Bold1-2)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h2Bold1-2'\">h2/Bold-400/line-height-1.2 (h2Bold1-2)</p>\r\n  <p freud-typography [fontType]=\"'h1Bold1-2'\">h1/Bold-400/line-height-1.2 (h1Bold1-2)</p>\r\n\r\n  <br><br>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h6Bold1'\">h6/Bold-400/line-height-1 (h6Bold1)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h5Bold1'\">h5/Bold-400/line-height-1 (h5Bold1)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h4Bold1'\">h4/Bold-400/line-height-1 (h4Bold1)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h3Bold1'\">h3/Bold-400/line-height-1 (h3Bold1)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h2Bold1'\">h2/Bold-400/line-height-1 (h2Bold1)</p>\r\n  <p freud-typography [fontType]=\"'h1Bold1'\">h1/Bold-400/line-height-1 (h1Bold1)</p>\r\n\r\n  <br><br>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h6BoldAuto'\">h6/Boldold-400/line-height-Auto (h6BoldAuto)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h5BoldAuto'\">h5/Boldold-400/line-height-Auto (h5BoldAuto)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h4BoldAuto'\">h4/Boldold-400/line-height-Auto (h4BoldAuto)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h3BoldAuto'\">h3/Boldold-400/line-height-Auto (h3BoldAuto)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h2BoldAuto'\">h2/Boldold-400/line-height-Auto (h2BoldAuto)</p>\r\n  <p freud-typography [fontType]=\"'h1BoldAuto'\">h1/Bold-400/line-height-auto (h1BoldAuto)</p>\r\n  `\r\n})"
            },
            {
                "name": "TemplateCircle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/speed-dial/SpeedDial.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudSpeedDialComponent>",
                "defaultValue": "(\r\n  args: FreudSpeedDialComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n  <div style=\"height: 80px; width: 80px; margin: 50px\">\r\n      <freud-speed-dial\r\n        [id]=\"id\"\r\n        [visible]=\"visible\"\r\n        [mask]=\"mask\"\r\n        [disabled]=\"disabled\"\r\n        [showIcon]=\"showIcon\"\r\n        [hideIcon]=\"hideIcon\"\r\n        [type]=\"type\"\r\n        [direction]=\"direction\"\r\n        [items]=\"items\"\r\n        [bgColor]=\"bgColor\">\r\n      </freud-speed-dial>\r\n  </div>\r\n  `,\r\n})"
            },
            {
                "name": "TemplateDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudButtonComponent>",
                "defaultValue": "(args: FreudButtonComponent) => ({\n  props: { ...args },\n  template: templateHTML.replace('{{label}}', 'Disabled'),\n})"
            },
            {
                "name": "templateHTML",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\n    <freud-button\n      [color]=\"color\"\n      [bgColor]=\"bgColor\"\n      [size]=\"size\"\n      [disabled]=\"disabled\"\n      [loading]=\"loading\"\n      [icon]=\"icon\"\n      >{{label}}</freud-button>\n`"
            },
            {
                "name": "templateHTML",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/select-button/SelectButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\n    <freud-select-button\n        [options]=\"options\"\n        [multiple]=\"multiple\"\n        [tabindex]=\"tabindex\"\n        [bgColor]=\"bgColor\"\n        [disabled]=\"disabled\"\n        [selectedOption]=\"selectedOption\"\n        [optionDisabled]=\"optionDisabled\"\n        [optionLabel]=\"optionLabel\"></freud-select-button>\n`"
            },
            {
                "name": "templateHTML",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/split-button/SplitButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\n    <freud-split-button\n        [label]=\"label\"\n        [disabled]=\"disabled\"\n        [items]=\"items\"\n        [bgColor]=\"bgColor\">\n    </freud-split-button>\n    <p *ngIf=\"!disabled\" style=\"margin-bottom: 150px\"></p>\n`"
            },
            {
                "name": "TemplateIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudButtonComponent>",
                "defaultValue": "(args: FreudButtonComponent) => ({\n  props: { ...args },\n  template: templateHTML.replace(\n    '{{label}}',\n    '<span class=\"freud-icon freud-icon-check freud-icon-20px\"></span>'\n  ),\n})"
            },
            {
                "name": "TemplateLoading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudButtonComponent>",
                "defaultValue": "(args: FreudButtonComponent) => ({\n  props: { ...args },\n  template: templateHTML.replace('{{label}}', 'Button'),\n})"
            },
            {
                "name": "TemplateRegular",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudTypographyComponent>",
                "defaultValue": "(\r\n  args: FreudTypographyComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h6Regular1-5'\">h6/regular-400/line-height-1.5 (h6Regular1-5)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h5Regular1-5'\">h5/regular-400/line-height-1.5 (h5Regular1-5)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h4Regular1-5'\">h4/regular-400/line-height-1.5 (h4Regular1-5)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h3Regular1-5'\">h3/regular-400/line-height-1.5 (h3Regular1-5)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h2Regular1-5'\">h2/regular-400/line-height-1.5 (h2Regular1-5)</p>\r\n    <p freud-typography [fontType]=\"'h1Regular1-5'\">h1/regular-400/line-height-1.5 (h1Regular1-5)</p>\r\n\r\n    <br><br>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h6Regular1-2'\">h6/regular-400/line-height-1.2 (h6Regular1-2)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h5Regular1-2'\">h5/regular-400/line-height-1.2 (h5Regular1-2)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h4Regular1-2'\">h4/regular-400/line-height-1.2 (h4Regular1-2)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h3Regular1-2'\">h3/regular-400/line-height-1.2 (h3Regular1-2)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h2Regular1-2'\">h2/regular-400/line-height-1.2 (h2Regular1-2)</p>\r\n    <p freud-typography [fontType]=\"'h1Regular1-2'\">h1/regular-400/line-height-1.2 (h1Regular1-2)</p>\r\n\r\n    <br><br>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h6Regular1'\">h6/regular-400/line-height-1 (h6Regular1)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h5Regular1'\">h5/regular-400/line-height-1 (h5Regular1)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h4Regular1'\">h4/regular-400/line-height-1 (h4Regular1)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h3Regular1'\">h3/regular-400/line-height-1 (h3Regular1)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h2Regular1'\">h2/regular-400/line-height-1 (h2Regular1)</p>\r\n    <p freud-typography [fontType]=\"'h1Regular1'\">h1/regular-400/line-height-1 (h1Regular1)</p>\r\n\r\n    <br><br>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h6RegularAuto'\">h6/regular-400/line-height-Auto (h6RegularAuto)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h5RegularAuto'\">h5/regular-400/line-height-Auto (h5RegularAuto)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h4RegularAuto'\">h4/regular-400/line-height-Auto (h4RegularAuto)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h3RegularAuto'\">h3/regular-400/line-height-Auto (h3RegularAuto)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h2RegularAuto'\">h2/regular-400/line-height-Auto (h2RegularAuto)</p>\r\n    <p freud-typography [fontType]=\"'h1RegularAuto'\">h1/regular-400/line-height-auto (h1RegularAuto)</p>\r\n  `\r\n})"
            },
            {
                "name": "TemplateSemibold",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudTypographyComponent>",
                "defaultValue": "(\r\n  args: FreudTypographyComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h6Semibold1-5'\">h6/Semibold-400/line-height-1.5 (h6Semibold1-5)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h5Semibold1-5'\">h5/Semibold-400/line-height-1.5 (h5Semibold1-5)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h4Semibold1-5'\">h4/Semibold-400/line-height-1.5 (h4Semibold1-5)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h3Semibold1-5'\">h3/Semibold-400/line-height-1.5 (h3Semibold1-5)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h2Semibold1-5'\">h2/Semibold-400/line-height-1.5 (h2Semibold1-5)</p>\r\n  <p freud-typography [fontType]=\"'h1Semibold1-5'\">h1/regular-400/line-height-1.5 (h1Semibold1-5)</p>\r\n\r\n  <br><br>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h6Semibold1-2'\">h6/Semibold-400/line-height-1.2 (h6Semibold1-2)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h5Semibold1-2'\">h5/Semibold-400/line-height-1.2 (h5Semibold1-2)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h4Semibold1-2'\">h4/Semibold-400/line-height-1.2 (h4Semibold1-2)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h3Semibold1-2'\">h3/Semibold-400/line-height-1.2 (h3Semibold1-2)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h2Semibold1-2'\">h2/Semibold-400/line-height-1.2 (h2Semibold1-2)</p>\r\n  <p freud-typography [fontType]=\"'h1Semibold1-2'\">h1/Semibold-400/line-height-1.2 (h1Semibold1-2)</p>\r\n\r\n  <br><br>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h6Semibold1'\">h6/Semibold-400/line-height-1 (h6Semibold1)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h5Semibold1'\">h5/Semibold-400/line-height-1 (h5Semibold1)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h4Semibold1'\">h4/Semibold-400/line-height-1 (h4Semibold1)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h3Semibold1'\">h3/Semibold-400/line-height-1 (h3Semibold1)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h2Semibold1'\">h2/Semibold-400/line-height-1 (h2Semibold1)</p>\r\n  <p freud-typography [fontType]=\"'h1Semibold1'\">h1/Semibold-400/line-height-1 (h1Regular1)</p>\r\n\r\n  <br><br>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h6SemiboldAuto'\">h6/Semibold-400/line-height-Auto (h6SemiboldAuto)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h5SemiboldAuto'\">h5/Semibold-400/line-height-Auto (h5SemiboldAuto)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h4SemiboldAuto'\">h4/Semibold-400/line-height-Auto (h4SemiboldAuto)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h3SemiboldAuto'\">h3/Semibold-400/line-height-Auto (h3SemiboldAuto)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h2SemiboldAuto'\">h2/Semibold-400/line-height-Auto (h2SemiboldAuto)</p>\r\n  <p freud-typography [fontType]=\"'h1SemiboldAuto'\">h1/Semibold-400/line-height-auto (h1RegularAuto)</p>\r\n  `\r\n})"
            },
            {
                "name": "TemplateSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudButtonComponent>",
                "defaultValue": "(args: FreudButtonComponent) => ({\n  props: { ...args },\n  template: templateHTML.replace('{{label}}', 'Button {{size}}'),\n})"
            },
            {
                "name": "TemplateTextBold",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudTypographyComponent>",
                "defaultValue": "(\r\n  args: FreudTypographyComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'smallBold1-5'\">small/Bold-400/line-height-1.5 (smallBold1-5)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'bodyBold1-5'\">body/Bold-400/line-height-1.5 (bodyBold1-5)</p>\r\n\r\n  <br><br>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'smallBold1-2'\">small/Bold-400/line-height-1.2 (smallBold1-2)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'bodyBold1-2'\">body/Bold-400/line-height-1.2 (bodyBold1-2)</p>\r\n\r\n  <br><br>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'smallBold1'\">small/Bold-400/line-height-1 (smallBold1)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'bodyBold1'\">body/Bold-400/line-height-1 (bodyBold1)</p>\r\n\r\n  <br><br>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'smallBoldAuto'\">small/Boldold-400/line-height-Auto (smallBoldAuto)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'bodyBoldAuto'\">body/Boldold-400/line-height-Auto (bodyBoldAuto)</p>\r\n  `\r\n})"
            },
            {
                "name": "TemplateTextRegular",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudTypographyComponent>",
                "defaultValue": "(\r\n  args: FreudTypographyComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'smallRegular1-5'\">small/regular-400/line-height-1.5 (smallRegular1-5)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'bodyRegular1-5'\">body/regular-400/line-height-1.5 (bodyRegular1-5)</p>\r\n\r\n    <br><br>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'smallRegular1-2'\">small/regular-400/line-height-1.2 (smallRegular1-2)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'bodyRegular1-2'\">body/regular-400/line-height-1.2 (bodyRegular1-2)</p>\r\n\r\n    <br><br>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'smallRegular1'\">small/regular-400/line-height-1 (smallRegular1)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'bodyRegular1'\">body/regular-400/line-height-1 (bodyRegular1)</p>\r\n\r\n    <br><br>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'smallRegularAuto'\">small/regular-400/line-height-Auto (smallRegularAuto)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'bodyRegularAuto'\">body/regular-400/line-height-Auto (bodyRegularAuto)</p>\r\n  `\r\n})"
            },
            {
                "name": "TemplateTextSemibold",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FreudTypographyComponent>",
                "defaultValue": "(\r\n  args: FreudTypographyComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'smallSemibold1-5'\">small/Semibold-400/line-height-1.5 (smallSemibold1-5)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'bodySemibold1-5'\">body/Semibold-400/line-height-1.5 (bodySemibold1-5)</p>\r\n\r\n  <br><br>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'smallSemibold1-2'\">small/Semibold-400/line-height-1.2 (smallSemibold1-2)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'bodySemibold1-2'\">body/Semibold-400/line-height-1.2 (bodySemibold1-2)</p>\r\n\r\n  <br><br>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'smallSemibold1'\">small/Semibold-400/line-height-1 (smallSemibold1)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'bodySemibold1'\">body/Semibold-400/line-height-1 (bodySemibold1)</p>\r\n\r\n  <br><br>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'smallSemiboldAuto'\">small/Semibold-400/line-height-Auto (smallSemiboldAuto)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'bodySemiboldAuto'\">body/Semibold-400/line-height-Auto (bodySemiboldAuto)</p>\r\n  `\r\n})"
            },
            {
                "name": "TextBold",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateTextBold.bind({})"
            },
            {
                "name": "TextRegular",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateTextRegular.bind({})"
            },
            {
                "name": "TextSemibold",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/typography/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateTextSemibold.bind({})"
            },
            {
                "name": "Top",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/tooltip/Tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeCircle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/speed-dial/SpeedDial.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateCircle.bind({})"
            },
            {
                "name": "TypeQuarterCircle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/speed-dial/SpeedDial.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateCircle.bind({})"
            },
            {
                "name": "TypeQuarterDownRight",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/speed-dial/SpeedDial.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateCircle.bind({})"
            },
            {
                "name": "types",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/web-components/src/components/typography/typography.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "headingTypes.concat(bodyTypes)"
            },
            {
                "name": "Warning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/badge/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Warning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/tag/Tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithBadge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/avatar/Avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/avatar/Avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "avatarSizes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"sm\" | \"md\" | \"lg\"",
                "file": "projects/web-components/src/components/avatar/avatar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "buttonColors",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"ghost\"",
                "file": "projects/web-components/src/components/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "buttonSizes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"sm\" | \"md\" | \"lg\"",
                "file": "projects/web-components/src/components/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "colors",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"success\" | \"info\" | \"warning\" | \"error\" | \"actived\"",
                "file": "projects/web-components/src/components/badge/badge.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "colors",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"success\" | \"info\" | \"warning\" | \"error\"",
                "file": "projects/web-components/src/components/tag/tag.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "directions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"up\" | \"down\" | \"left\" | \"right\" | \"up-left\" | \"up-right\" | \"down-left\" | \"down-right\"",
                "file": "projects/web-components/src/components/speed-dial/speed-dial.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "fontTypes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/web-components/src/components/typography/typography.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "position",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"top\" | \"bottom\" | \"left\" | \"right\"",
                "file": "projects/web-components/src/components/tooltip/tooltip.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "sizes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"large\"",
                "file": "projects/web-components/src/components/knob/knob.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "sizes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"large\"",
                "file": "projects/web-components/src/components/badge/badge.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "types",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"linear\" | \"circle\" | \"semi-circle\" | \"quarter-circle\"",
                "file": "projects/web-components/src/components/speed-dial/speed-dial.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "stories/badge/Badge.stories.ts": [
                {
                    "name": "Actived",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/badge/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateBlank.bind({})"
                },
                {
                    "name": "BgColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/badge/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateBgColor.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/badge/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/badge/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/badge/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/badge/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/badge/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/badge/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/badge/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudBadgeComponent>",
                    "defaultValue": "(args: FreudBadgeComponent) => ({\n  props: { ...args },\n  template: `\n    <freud-badge [size]=\"size\" [color]=\"color\" [value]=\"value\"></freud-badge>\n  `,\n})"
                },
                {
                    "name": "TemplateBgColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/badge/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudBadgeComponent>",
                    "defaultValue": "(args: FreudBadgeComponent) => ({\n  props: { ...args },\n  template: `\n    <freud-badge style=\"margin-right: 8px;\" [color]=\"'primary'\" [value]=\"'1'\"></freud-badge>\n    <freud-badge style=\"margin-right: 8px;\" [color]=\"'success'\" [value]=\"'10'\"></freud-badge>\n    <freud-badge style=\"margin-right: 8px;\" [color]=\"'info'\" [value]=\"'5'\"></freud-badge>\n    <freud-badge style=\"margin-right: 8px;\" [color]=\"'warning'\" [value]=\"'99'\"></freud-badge>\n    <freud-badge style=\"margin-right: 8px;\" [color]=\"'error'\" [value]=\"'A'\"></freud-badge>\n    <freud-badge style=\"position: relative;top: 6px;\" [color]=\"'actived'\" [value]=\"''\"></freud-badge>\n  `,\n})"
                },
                {
                    "name": "TemplateBlank",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/badge/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudBadgeComponent>",
                    "defaultValue": "(args: FreudBadgeComponent) => ({\n  props: { ...args },\n  template: `\n    <freud-badge [size]=\"size\" [color]=\"color\" [value]=\"value\" style=\"position: relative;top: 6px;\"></freud-badge>\n  `,\n})"
                },
                {
                    "name": "Warning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/badge/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "stories/select-button/SelectButton.stories.ts": [
                {
                    "name": "Background",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/select-button/SelectButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/select-button/SelectButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/select-button/SelectButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OptionDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/select-button/SelectButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "options",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/select-button/SelectButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {label: 'Item1'},\n  {label: 'Item2'},\n  {label: 'Item3'},\n  {label: 'Item4'}\n]"
                },
                {
                    "name": "optionsDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/select-button/SelectButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {label: 'Item1', disabled: true},\n  {label: 'Item2'},\n  {label: 'Item3'},\n  {label: 'Item4'}\n]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/select-button/SelectButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudSelectButtonComponent>",
                    "defaultValue": "(args: FreudSelectButtonComponent) => ({\n  props: { ...args },\n  template: templateHTML,\n})"
                },
                {
                    "name": "templateHTML",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/select-button/SelectButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\n    <freud-select-button\n        [options]=\"options\"\n        [multiple]=\"multiple\"\n        [tabindex]=\"tabindex\"\n        [bgColor]=\"bgColor\"\n        [disabled]=\"disabled\"\n        [selectedOption]=\"selectedOption\"\n        [optionDisabled]=\"optionDisabled\"\n        [optionLabel]=\"optionLabel\"></freud-select-button>\n`"
                }
            ],
            "stories/avatar/Avatar.stories.ts": [
                {
                    "name": "BgColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/avatar/Avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "IconMedium",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/avatar/Avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Imagem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/avatar/Avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/avatar/Avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Medium",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/avatar/Avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/avatar/Avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/avatar/Avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudAvatarComponent>",
                    "defaultValue": "(args: FreudAvatarComponent) => ({\n  props: { ...args },\n  template: `\n    <freud-avatar [size]=\"size\" [label]=\"label\" [badge]=\"badge\" [bgColor]=\"bgColor\" [withIcon]=\"withIcon\" [image]=\"image\"></freud-avatar>\n  `,\n})"
                },
                {
                    "name": "WithBadge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/avatar/Avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/avatar/Avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "stories/rating/Rating.stories.ts": [
                {
                    "name": "BgColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/rating/Rating.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "BgColorDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/rating/Rating.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/rating/Rating.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/rating/Rating.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/rating/Rating.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudRatingComponent>",
                    "defaultValue": "(\r\n  args: FreudRatingComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n    <freud-rating\r\n      [value]=\"value\"\r\n      [stars]=\"stars\"\r\n      [disabled]=\"disabled\"\r\n      [bgColor]=\"bgColor\">\r\n    </freud-rating>\r\n  `,\r\n})"
                }
            ],
            "stories/knob/Knob.stories.ts": [
                {
                    "name": "BgColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/knob/Knob.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "BgColorDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/knob/Knob.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/knob/Knob.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/knob/Knob.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SizeDefault",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/knob/Knob.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SizeLarge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/knob/Knob.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/knob/Knob.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudKnobComponent>",
                    "defaultValue": "(\r\n  args: FreudKnobComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n    <freud-knob\r\n      [value]=\"value\"\r\n      [min]=\"min\"\r\n      [max]=\"max\"\r\n      [step]=\"step\"\r\n      [size]=\"size\"\r\n      [disabled]=\"disabled\"\r\n      [bgColor]=\"bgColor\">\r\n    </freud-knob>\r\n  `,\r\n})"
                }
            ],
            "stories/progress-spinner/ProgressSpinner.stories.ts": [
                {
                    "name": "BgColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/progress-spinner/ProgressSpinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/progress-spinner/ProgressSpinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/progress-spinner/ProgressSpinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudProgressSpinnerComponent>",
                    "defaultValue": "(\r\n  args: FreudProgressSpinnerComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n  <div style=\"width: 350px\">\r\n      <freud-progress-spinner [bgColor]=\"bgColor\">\r\n      </freud-progress-spinner>\r\n  </div>\r\n  `,\r\n})"
                }
            ],
            "stories/speed-dial/SpeedDial.stories.ts": [
                {
                    "name": "BgColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/speed-dial/SpeedDial.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "BgColorDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/speed-dial/SpeedDial.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DirectionDown",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/speed-dial/SpeedDial.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DirectionLeft",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/speed-dial/SpeedDial.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/speed-dial/SpeedDial.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "itemsWithLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/speed-dial/SpeedDial.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FreudMenuItem[]",
                    "defaultValue": "[\r\n  {icon: 'freud-icon freud-icon-refresh', command: () => {\r\n      console.log('Evento update')\r\n    }\r\n  },\r\n  {\r\n    icon: 'freud-icon freud-icon-close', command: () => {\r\n      console.log('Evento delete')\r\n    },\r\n  },\r\n  {icon: 'freud-icon freud-icon-check'}\r\n]"
                },
                {
                    "name": "Mask",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/speed-dial/SpeedDial.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/speed-dial/SpeedDial.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudSpeedDialComponent>",
                    "defaultValue": "(\r\n  args: FreudSpeedDialComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n  <div style=\"height: 250px; width: 120px\">\r\n      <freud-speed-dial\r\n        [id]=\"id\"\r\n        [visible]=\"visible\"\r\n        [mask]=\"mask\"\r\n        [disabled]=\"disabled\"\r\n        [showIcon]=\"showIcon\"\r\n        [hideIcon]=\"hideIcon\"\r\n        [type]=\"type\"\r\n        [direction]=\"direction\"\r\n        [items]=\"items\"\r\n        [bgColor]=\"bgColor\">\r\n      </freud-speed-dial>\r\n  </div>\r\n  `,\r\n})"
                },
                {
                    "name": "TemplateCircle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/speed-dial/SpeedDial.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudSpeedDialComponent>",
                    "defaultValue": "(\r\n  args: FreudSpeedDialComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n  <div style=\"height: 80px; width: 80px; margin: 50px\">\r\n      <freud-speed-dial\r\n        [id]=\"id\"\r\n        [visible]=\"visible\"\r\n        [mask]=\"mask\"\r\n        [disabled]=\"disabled\"\r\n        [showIcon]=\"showIcon\"\r\n        [hideIcon]=\"hideIcon\"\r\n        [type]=\"type\"\r\n        [direction]=\"direction\"\r\n        [items]=\"items\"\r\n        [bgColor]=\"bgColor\">\r\n      </freud-speed-dial>\r\n  </div>\r\n  `,\r\n})"
                },
                {
                    "name": "TypeCircle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/speed-dial/SpeedDial.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateCircle.bind({})"
                },
                {
                    "name": "TypeQuarterCircle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/speed-dial/SpeedDial.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateCircle.bind({})"
                },
                {
                    "name": "TypeQuarterDownRight",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/speed-dial/SpeedDial.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateCircle.bind({})"
                }
            ],
            "stories/skeleton/Skeleton.stories.ts": [
                {
                    "name": "BgColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/skeleton/Skeleton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/skeleton/Skeleton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/skeleton/Skeleton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudSkeletonComponent>",
                    "defaultValue": "(\r\n  args: FreudSkeletonComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n  <div style=\"width: 350px\">\r\n      <freud-skeleton\r\n        [width]=\"'100%'\"\r\n        [height]=\"'15px'\"\r\n        [bgColor]=\"bgColor\">\r\n      </freud-skeleton>\r\n      <br>\r\n      <freud-skeleton\r\n        [width]=\"'100%'\"\r\n        [height]=\"'15px'\"\r\n        [bgColor]=\"bgColor\">\r\n      </freud-skeleton>\r\n      <br>\r\n      <freud-skeleton\r\n        [width]=\"'350px'\"\r\n        [height]=\"'70px'\"\r\n        [bgColor]=\"bgColor\">\r\n      </freud-skeleton>\r\n      <br>\r\n      <div style=\"display: flex\">\r\n        <freud-skeleton style=\"margin-right: 10px\"\r\n          [width]=\"'170px'\"\r\n          [height]=\"'70px'\"\r\n          [bgColor]=\"bgColor\">\r\n        </freud-skeleton>\r\n        <freud-skeleton\r\n          [width]=\"'170px'\"\r\n          [height]=\"'70px'\"\r\n          [bgColor]=\"bgColor\">\r\n        </freud-skeleton>\r\n      </div>\r\n  </div>\r\n  `,\r\n})"
                }
            ],
            "stories/steps/Steps.stories.ts": [
                {
                    "name": "BgColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/steps/Steps.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/steps/Steps.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "itens",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/steps/Steps.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StepMenu[]",
                    "defaultValue": "[\r\n  {label: 'Item1'},\r\n  {label: 'Item2'},\r\n  {label: 'Item3'},\r\n  {label: 'Item4'}\r\n]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/steps/Steps.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudStepsComponent>",
                    "defaultValue": "(\r\n  args: FreudStepsComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n    <freud-steps [model]=\"model\" [readonly]=\"readonly\" [activeIndex]=\"activeIndex\" [bgColor]=\"bgColor\"></freud-steps>\r\n  `,\r\n})"
                }
            ],
            "stories/split-button/SplitButton.stories.ts": [
                {
                    "name": "BgColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/split-button/SplitButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/split-button/SplitButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/split-button/SplitButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/split-button/SplitButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FreudMenuItem[]",
                    "defaultValue": "[\n  {label: 'Update', icon: 'freud-icon freud-icon-refresh', command: () => {\n      console.log('Evento update')\n    }\n  },\n  {\n    label: 'Delete', icon: 'freud-icon freud-icon-close', command: () => {\n      console.log('Evento delete')\n    },\n  },\n  {label: 'Zenklub', icon: 'freud-icon freud-icon-info', url: 'http://zenklub.com'},\n  {separator: true},\n  {label: 'Setup', icon: 'freud-icon freud-icon-cog'}\n]"
                },
                {
                    "name": "itemsWithoutIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/split-button/SplitButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FreudMenuItem[]",
                    "defaultValue": "[\n  {label: 'Update', command: () => {console.log('Evento update')}\n  },\n  {\n    label: 'Delete', command: () => {console.log('Evento delete')},\n  },\n  {label: 'Zenklub', url: 'http://zenklub.com'}\n]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/split-button/SplitButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudSplitButtonComponent>",
                    "defaultValue": "(args: FreudSplitButtonComponent) => ({\n  props: { ...args },\n  template: templateHTML,\n})"
                },
                {
                    "name": "templateHTML",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/split-button/SplitButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\n    <freud-split-button\n        [label]=\"label\"\n        [disabled]=\"disabled\"\n        [items]=\"items\"\n        [bgColor]=\"bgColor\">\n    </freud-split-button>\n    <p *ngIf=\"!disabled\" style=\"margin-bottom: 150px\"></p>\n`"
                }
            ],
            "stories/tag/Tag.stories.ts": [
                {
                    "name": "BgColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/tag/Tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateBgColor.bind({})"
                },
                {
                    "name": "BgColorOutLine",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/tag/Tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateBgColor.bind({})"
                },
                {
                    "name": "Error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/tag/Tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/tag/Tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OutlineError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/tag/Tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OutlineInfo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/tag/Tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OutlinePrimary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/tag/Tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OutlineSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/tag/Tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OutlineWarning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/tag/Tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/tag/Tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/tag/Tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/tag/Tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudTagComponent>",
                    "defaultValue": "(args: FreudTagComponent) => ({\n  props: { ...args },\n  template: `\n    <freud-tag [outline]=\"outline\" [color]=\"color\" [value]=\"value\"></freud-tag>\n  `,\n})"
                },
                {
                    "name": "TemplateBgColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/tag/Tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudTagComponent>",
                    "defaultValue": "(args: FreudTagComponent) => ({\n  props: { ...args },\n  template: `\n    <freud-tag style=\"margin-right: 8px\" [outline]=\"outline\" [value]=\"'Primary'\"></freud-tag>\n    <freud-tag style=\"margin-right: 8px\" [outline]=\"outline\" [color]=\"'success'\" [value]=\"'Success'\"></freud-tag>\n    <freud-tag style=\"margin-right: 8px\" [outline]=\"outline\" [color]=\"'info'\" [value]=\"'Info'\"></freud-tag>\n    <freud-tag style=\"margin-right: 8px\" [outline]=\"outline\" [color]=\"'warning'\" [value]=\"'Warning'\"></freud-tag>\n    <freud-tag style=\"margin-right: 8px\" [outline]=\"outline\" [color]=\"'error'\" [value]=\"'Error'\"></freud-tag>\n  `,\n})"
                },
                {
                    "name": "Warning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/tag/Tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "stories/typography/typography.stories.ts": [
                {
                    "name": "BgColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "HeadingBold",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateBold.bind({})"
                },
                {
                    "name": "HeadingRegular",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateRegular.bind({})"
                },
                {
                    "name": "HeadingSemibold",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateSemibold.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudTypographyComponent>",
                    "defaultValue": "(\r\n  args: FreudTypographyComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n    <p freud-typography [fontType]=\"fontType\" [fontBgColor]=\"fontBgColor\">{{label}}</p>\r\n  `\r\n})"
                },
                {
                    "name": "TemplateBold",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudTypographyComponent>",
                    "defaultValue": "(\r\n  args: FreudTypographyComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h6Bold1-5'\">h6/Bold-400/line-height-1.5 (h6Bold1-5)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h5Bold1-5'\">h5/Bold-400/line-height-1.5 (h5Bold1-5)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h4Bold1-5'\">h4/Bold-400/line-height-1.5 (h4Bold1-5)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h3Bold1-5'\">h3/Bold-400/line-height-1.5 (h3Bold1-5)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h2Bold1-5'\">h2/Bold-400/line-height-1.5 (h2Bold1-5)</p>\r\n  <p freud-typography [fontType]=\"'h1Bold1-5'\">h1/regular-400/line-height-1.5 (h1Bold1-5)</p>\r\n\r\n  <br><br>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h6Bold1-2'\">h6/Bold-400/line-height-1.2 (h6Bold1-2)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h5Bold1-2'\">h5/Bold-400/line-height-1.2 (h5Bold1-2)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h4Bold1-2'\">h4/Bold-400/line-height-1.2 (h4Bold1-2)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h3Bold1-2'\">h3/Bold-400/line-height-1.2 (h3Bold1-2)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h2Bold1-2'\">h2/Bold-400/line-height-1.2 (h2Bold1-2)</p>\r\n  <p freud-typography [fontType]=\"'h1Bold1-2'\">h1/Bold-400/line-height-1.2 (h1Bold1-2)</p>\r\n\r\n  <br><br>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h6Bold1'\">h6/Bold-400/line-height-1 (h6Bold1)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h5Bold1'\">h5/Bold-400/line-height-1 (h5Bold1)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h4Bold1'\">h4/Bold-400/line-height-1 (h4Bold1)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h3Bold1'\">h3/Bold-400/line-height-1 (h3Bold1)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h2Bold1'\">h2/Bold-400/line-height-1 (h2Bold1)</p>\r\n  <p freud-typography [fontType]=\"'h1Bold1'\">h1/Bold-400/line-height-1 (h1Bold1)</p>\r\n\r\n  <br><br>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h6BoldAuto'\">h6/Boldold-400/line-height-Auto (h6BoldAuto)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h5BoldAuto'\">h5/Boldold-400/line-height-Auto (h5BoldAuto)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h4BoldAuto'\">h4/Boldold-400/line-height-Auto (h4BoldAuto)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h3BoldAuto'\">h3/Boldold-400/line-height-Auto (h3BoldAuto)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h2BoldAuto'\">h2/Boldold-400/line-height-Auto (h2BoldAuto)</p>\r\n  <p freud-typography [fontType]=\"'h1BoldAuto'\">h1/Bold-400/line-height-auto (h1BoldAuto)</p>\r\n  `\r\n})"
                },
                {
                    "name": "TemplateRegular",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudTypographyComponent>",
                    "defaultValue": "(\r\n  args: FreudTypographyComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h6Regular1-5'\">h6/regular-400/line-height-1.5 (h6Regular1-5)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h5Regular1-5'\">h5/regular-400/line-height-1.5 (h5Regular1-5)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h4Regular1-5'\">h4/regular-400/line-height-1.5 (h4Regular1-5)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h3Regular1-5'\">h3/regular-400/line-height-1.5 (h3Regular1-5)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h2Regular1-5'\">h2/regular-400/line-height-1.5 (h2Regular1-5)</p>\r\n    <p freud-typography [fontType]=\"'h1Regular1-5'\">h1/regular-400/line-height-1.5 (h1Regular1-5)</p>\r\n\r\n    <br><br>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h6Regular1-2'\">h6/regular-400/line-height-1.2 (h6Regular1-2)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h5Regular1-2'\">h5/regular-400/line-height-1.2 (h5Regular1-2)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h4Regular1-2'\">h4/regular-400/line-height-1.2 (h4Regular1-2)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h3Regular1-2'\">h3/regular-400/line-height-1.2 (h3Regular1-2)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h2Regular1-2'\">h2/regular-400/line-height-1.2 (h2Regular1-2)</p>\r\n    <p freud-typography [fontType]=\"'h1Regular1-2'\">h1/regular-400/line-height-1.2 (h1Regular1-2)</p>\r\n\r\n    <br><br>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h6Regular1'\">h6/regular-400/line-height-1 (h6Regular1)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h5Regular1'\">h5/regular-400/line-height-1 (h5Regular1)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h4Regular1'\">h4/regular-400/line-height-1 (h4Regular1)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h3Regular1'\">h3/regular-400/line-height-1 (h3Regular1)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h2Regular1'\">h2/regular-400/line-height-1 (h2Regular1)</p>\r\n    <p freud-typography [fontType]=\"'h1Regular1'\">h1/regular-400/line-height-1 (h1Regular1)</p>\r\n\r\n    <br><br>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h6RegularAuto'\">h6/regular-400/line-height-Auto (h6RegularAuto)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h5RegularAuto'\">h5/regular-400/line-height-Auto (h5RegularAuto)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h4RegularAuto'\">h4/regular-400/line-height-Auto (h4RegularAuto)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h3RegularAuto'\">h3/regular-400/line-height-Auto (h3RegularAuto)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h2RegularAuto'\">h2/regular-400/line-height-Auto (h2RegularAuto)</p>\r\n    <p freud-typography [fontType]=\"'h1RegularAuto'\">h1/regular-400/line-height-auto (h1RegularAuto)</p>\r\n  `\r\n})"
                },
                {
                    "name": "TemplateSemibold",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudTypographyComponent>",
                    "defaultValue": "(\r\n  args: FreudTypographyComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h6Semibold1-5'\">h6/Semibold-400/line-height-1.5 (h6Semibold1-5)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h5Semibold1-5'\">h5/Semibold-400/line-height-1.5 (h5Semibold1-5)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h4Semibold1-5'\">h4/Semibold-400/line-height-1.5 (h4Semibold1-5)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h3Semibold1-5'\">h3/Semibold-400/line-height-1.5 (h3Semibold1-5)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h2Semibold1-5'\">h2/Semibold-400/line-height-1.5 (h2Semibold1-5)</p>\r\n  <p freud-typography [fontType]=\"'h1Semibold1-5'\">h1/regular-400/line-height-1.5 (h1Semibold1-5)</p>\r\n\r\n  <br><br>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h6Semibold1-2'\">h6/Semibold-400/line-height-1.2 (h6Semibold1-2)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h5Semibold1-2'\">h5/Semibold-400/line-height-1.2 (h5Semibold1-2)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h4Semibold1-2'\">h4/Semibold-400/line-height-1.2 (h4Semibold1-2)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h3Semibold1-2'\">h3/Semibold-400/line-height-1.2 (h3Semibold1-2)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h2Semibold1-2'\">h2/Semibold-400/line-height-1.2 (h2Semibold1-2)</p>\r\n  <p freud-typography [fontType]=\"'h1Semibold1-2'\">h1/Semibold-400/line-height-1.2 (h1Semibold1-2)</p>\r\n\r\n  <br><br>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h6Semibold1'\">h6/Semibold-400/line-height-1 (h6Semibold1)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h5Semibold1'\">h5/Semibold-400/line-height-1 (h5Semibold1)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h4Semibold1'\">h4/Semibold-400/line-height-1 (h4Semibold1)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h3Semibold1'\">h3/Semibold-400/line-height-1 (h3Semibold1)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h2Semibold1'\">h2/Semibold-400/line-height-1 (h2Semibold1)</p>\r\n  <p freud-typography [fontType]=\"'h1Semibold1'\">h1/Semibold-400/line-height-1 (h1Regular1)</p>\r\n\r\n  <br><br>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h6SemiboldAuto'\">h6/Semibold-400/line-height-Auto (h6SemiboldAuto)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h5SemiboldAuto'\">h5/Semibold-400/line-height-Auto (h5SemiboldAuto)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h4SemiboldAuto'\">h4/Semibold-400/line-height-Auto (h4SemiboldAuto)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h3SemiboldAuto'\">h3/Semibold-400/line-height-Auto (h3SemiboldAuto)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'h2SemiboldAuto'\">h2/Semibold-400/line-height-Auto (h2SemiboldAuto)</p>\r\n  <p freud-typography [fontType]=\"'h1SemiboldAuto'\">h1/Semibold-400/line-height-auto (h1RegularAuto)</p>\r\n  `\r\n})"
                },
                {
                    "name": "TemplateTextBold",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudTypographyComponent>",
                    "defaultValue": "(\r\n  args: FreudTypographyComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'smallBold1-5'\">small/Bold-400/line-height-1.5 (smallBold1-5)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'bodyBold1-5'\">body/Bold-400/line-height-1.5 (bodyBold1-5)</p>\r\n\r\n  <br><br>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'smallBold1-2'\">small/Bold-400/line-height-1.2 (smallBold1-2)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'bodyBold1-2'\">body/Bold-400/line-height-1.2 (bodyBold1-2)</p>\r\n\r\n  <br><br>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'smallBold1'\">small/Bold-400/line-height-1 (smallBold1)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'bodyBold1'\">body/Bold-400/line-height-1 (bodyBold1)</p>\r\n\r\n  <br><br>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'smallBoldAuto'\">small/Boldold-400/line-height-Auto (smallBoldAuto)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'bodyBoldAuto'\">body/Boldold-400/line-height-Auto (bodyBoldAuto)</p>\r\n  `\r\n})"
                },
                {
                    "name": "TemplateTextRegular",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudTypographyComponent>",
                    "defaultValue": "(\r\n  args: FreudTypographyComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'smallRegular1-5'\">small/regular-400/line-height-1.5 (smallRegular1-5)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'bodyRegular1-5'\">body/regular-400/line-height-1.5 (bodyRegular1-5)</p>\r\n\r\n    <br><br>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'smallRegular1-2'\">small/regular-400/line-height-1.2 (smallRegular1-2)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'bodyRegular1-2'\">body/regular-400/line-height-1.2 (bodyRegular1-2)</p>\r\n\r\n    <br><br>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'smallRegular1'\">small/regular-400/line-height-1 (smallRegular1)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'bodyRegular1'\">body/regular-400/line-height-1 (bodyRegular1)</p>\r\n\r\n    <br><br>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'smallRegularAuto'\">small/regular-400/line-height-Auto (smallRegularAuto)</p>\r\n    <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'bodyRegularAuto'\">body/regular-400/line-height-Auto (bodyRegularAuto)</p>\r\n  `\r\n})"
                },
                {
                    "name": "TemplateTextSemibold",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudTypographyComponent>",
                    "defaultValue": "(\r\n  args: FreudTypographyComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'smallSemibold1-5'\">small/Semibold-400/line-height-1.5 (smallSemibold1-5)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'bodySemibold1-5'\">body/Semibold-400/line-height-1.5 (bodySemibold1-5)</p>\r\n\r\n  <br><br>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'smallSemibold1-2'\">small/Semibold-400/line-height-1.2 (smallSemibold1-2)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'bodySemibold1-2'\">body/Semibold-400/line-height-1.2 (bodySemibold1-2)</p>\r\n\r\n  <br><br>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'smallSemibold1'\">small/Semibold-400/line-height-1 (smallSemibold1)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'bodySemibold1'\">body/Semibold-400/line-height-1 (bodySemibold1)</p>\r\n\r\n  <br><br>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'smallSemiboldAuto'\">small/Semibold-400/line-height-Auto (smallSemiboldAuto)</p>\r\n  <p style=\"margin-bottom: 8px\" freud-typography [fontType]=\"'bodySemiboldAuto'\">body/Semibold-400/line-height-Auto (bodySemiboldAuto)</p>\r\n  `\r\n})"
                },
                {
                    "name": "TextBold",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateTextBold.bind({})"
                },
                {
                    "name": "TextRegular",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateTextRegular.bind({})"
                },
                {
                    "name": "TextSemibold",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/typography/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateTextSemibold.bind({})"
                }
            ],
            "stories/tooltip/Tooltip.stories.ts": [
                {
                    "name": "BgColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/tooltip/Tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Bottom",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/tooltip/Tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Left",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/tooltip/Tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Right",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/tooltip/Tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/tooltip/Tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudTooltipComponent>",
                    "defaultValue": "(\r\n  args: FreudTooltipComponent\r\n) => ({\r\n  props: { ...args },\r\n  template: `\r\n    <span freud-tooltip style=\"color:{{bgColor ? 'white' : 'black'}}\"\r\n      [tooltipLabel]=\"tooltipLabel\"\r\n      [tooltipPosition]=\"tooltipPosition\"\r\n      [bgColor]=\"bgColor\">Passe o mouse aqui!</span>\r\n  `,\r\n})"
                },
                {
                    "name": "Top",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/tooltip/Tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "projects/web-components/src/components/typography/typrography.type.ts": [
                {
                    "name": "bodyTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/web-components/src/components/typography/typrography.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  // Regular\r\n  'smallRegular1-5',\r\n  'bodyRegular1-5',\r\n\r\n  'smallRegular1-2',\r\n  'bodyRegular1-2',\r\n\r\n  'smallRegular1',\r\n  'bodyRegular1',\r\n  \r\n  'smallRegularAuto',\r\n  'bodyRegularAuto',\r\n\r\n  // Semibold\r\n  'smallSemibold1-5',\r\n  'bodySemibold1-5',\r\n\r\n  'smallSemibold1-2',\r\n  'bodySemibold1-2',\r\n\r\n  'smallSemibold1',\r\n  'bodySemibold1',\r\n\r\n  'smallSemiboldAuto',\r\n  'bodySemiboldAuto',\r\n\r\n  // Bold\r\n  'smallBold1-5',\r\n  'bodyBold1-5',\r\n\r\n  'smallBold1-2',\r\n  'bodyBold1-2',\r\n\r\n  'smallBold1',\r\n  'bodyBold1',\r\n\r\n  'smallBoldAuto',\r\n  'bodyBoldAuto',\r\n]"
                },
                {
                    "name": "headingTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/web-components/src/components/typography/typrography.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  // Regular\r\n  'h1Regular1-5',\r\n  'h2Regular1-5',\r\n  'h3Regular1-5',\r\n  'h4Regular1-5',\r\n  'h5Regular1-5',\r\n  'h6Regular1-5',\r\n\r\n  'h1Regular1-2',\r\n  'h2Regular1-2',\r\n  'h3Regular1-2',\r\n  'h4Regular1-2',\r\n  'h5Regular1-2',\r\n  'h6Regular1-2',\r\n\r\n  'h1Regular1',\r\n  'h2Regular1',\r\n  'h3Regular1',\r\n  'h4Regular1',\r\n  'h5Regular1',\r\n  'h6Regular1',\r\n  \r\n  'h1RegularAuto',\r\n  'h2RegularAuto',\r\n  'h3RegularAuto',\r\n  'h4RegularAuto',\r\n  'h5RegularAuto',\r\n  'h6RegularAuto',\r\n\r\n  // Semibold\r\n  'h1Semibold1-5',\r\n  'h2Semibold1-5',\r\n  'h3Semibold1-5',\r\n  'h4Semibold1-5',\r\n  'h5Semibold1-5',\r\n  'h6Semibold1-5',\r\n\r\n  'h1Semibold1-2',\r\n  'h2Semibold1-2',\r\n  'h3Semibold1-2',\r\n  'h4Semibold1-2',\r\n  'h5Semibold1-2',\r\n  'h6Semibold1-2',\r\n\r\n  'h1Semibold1',\r\n  'h2Semibold1',\r\n  'h3Semibold1',\r\n  'h4Semibold1',\r\n  'h5Semibold1',\r\n  'h6Semibold1',\r\n\r\n  'h1SemiboldAuto',\r\n  'h2SemiboldAuto',\r\n  'h3SemiboldAuto',\r\n  'h4SemiboldAuto',\r\n  'h5SemiboldAuto',\r\n  'h6SemiboldAuto',\r\n\r\n  // Bold\r\n  'h1Bold1-5',\r\n  'h2Bold1-5',\r\n  'h3Bold1-5',\r\n  'h4Bold1-5',\r\n  'h5Bold1-5',\r\n  'h6Bold1-5',\r\n\r\n  'h1Bold1-2',\r\n  'h2Bold1-2',\r\n  'h3Bold1-2',\r\n  'h4Bold1-2',\r\n  'h5Bold1-2',\r\n  'h6Bold1-2',\r\n\r\n  'h1Bold1',\r\n  'h2Bold1',\r\n  'h3Bold1',\r\n  'h4Bold1',\r\n  'h5Bold1',\r\n  'h6Bold1',\r\n\r\n  'h1BoldAuto',\r\n  'h2BoldAuto',\r\n  'h3BoldAuto',\r\n  'h4BoldAuto',\r\n  'h5BoldAuto',\r\n  'h6BoldAuto',\r\n]"
                }
            ],
            "projects/web-components/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/web-components/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/web-components/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "stories/button/Button.stories.ts": [
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateDisabled.bind({})"
                },
                {
                    "name": "Ghost",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "GhostBackground",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateIcon.bind({})"
                },
                {
                    "name": "IconButtonRight",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateLoading .bind({})"
                },
                {
                    "name": "Loading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateLoading.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PrimaryBackground",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SecondaryBackground",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SizeLG",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateSize.bind({})"
                },
                {
                    "name": "SizeMD",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateSize.bind({})"
                },
                {
                    "name": "SizeSM",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateSize.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudButtonComponent>",
                    "defaultValue": "(args: FreudButtonComponent) => ({\n  props: { ...args },\n  template: templateHTML.replace('{{label}}', 'Button {{color}}'),\n})"
                },
                {
                    "name": "TemplateDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudButtonComponent>",
                    "defaultValue": "(args: FreudButtonComponent) => ({\n  props: { ...args },\n  template: templateHTML.replace('{{label}}', 'Disabled'),\n})"
                },
                {
                    "name": "templateHTML",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\n    <freud-button\n      [color]=\"color\"\n      [bgColor]=\"bgColor\"\n      [size]=\"size\"\n      [disabled]=\"disabled\"\n      [loading]=\"loading\"\n      [icon]=\"icon\"\n      >{{label}}</freud-button>\n`"
                },
                {
                    "name": "TemplateIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudButtonComponent>",
                    "defaultValue": "(args: FreudButtonComponent) => ({\n  props: { ...args },\n  template: templateHTML.replace(\n    '{{label}}',\n    '<span class=\"freud-icon freud-icon-check freud-icon-20px\"></span>'\n  ),\n})"
                },
                {
                    "name": "TemplateLoading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudButtonComponent>",
                    "defaultValue": "(args: FreudButtonComponent) => ({\n  props: { ...args },\n  template: templateHTML.replace('{{label}}', 'Button'),\n})"
                },
                {
                    "name": "TemplateSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FreudButtonComponent>",
                    "defaultValue": "(args: FreudButtonComponent) => ({\n  props: { ...args },\n  template: templateHTML.replace('{{label}}', 'Button {{size}}'),\n})"
                }
            ],
            "projects/web-components/src/components/typography/typography.component.ts": [
                {
                    "name": "types",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/web-components/src/components/typography/typography.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "headingTypes.concat(bodyTypes)"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/web-components/src/components/avatar/avatar.component.ts": [
                {
                    "name": "avatarSizes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"sm\" | \"md\" | \"lg\"",
                    "file": "projects/web-components/src/components/avatar/avatar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/web-components/src/components/button/button.component.ts": [
                {
                    "name": "buttonColors",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"ghost\"",
                    "file": "projects/web-components/src/components/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "buttonSizes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"sm\" | \"md\" | \"lg\"",
                    "file": "projects/web-components/src/components/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/web-components/src/components/badge/badge.component.ts": [
                {
                    "name": "colors",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"success\" | \"info\" | \"warning\" | \"error\" | \"actived\"",
                    "file": "projects/web-components/src/components/badge/badge.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "sizes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"large\"",
                    "file": "projects/web-components/src/components/badge/badge.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/web-components/src/components/tag/tag.component.ts": [
                {
                    "name": "colors",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"success\" | \"info\" | \"warning\" | \"error\"",
                    "file": "projects/web-components/src/components/tag/tag.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/web-components/src/components/speed-dial/speed-dial.component.ts": [
                {
                    "name": "directions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"up\" | \"down\" | \"left\" | \"right\" | \"up-left\" | \"up-right\" | \"down-left\" | \"down-right\"",
                    "file": "projects/web-components/src/components/speed-dial/speed-dial.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "types",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"linear\" | \"circle\" | \"semi-circle\" | \"quarter-circle\"",
                    "file": "projects/web-components/src/components/speed-dial/speed-dial.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/web-components/src/components/typography/typography.component.ts": [
                {
                    "name": "fontTypes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/web-components/src/components/typography/typography.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "projects/web-components/src/components/tooltip/tooltip.component.ts": [
                {
                    "name": "position",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"top\" | \"bottom\" | \"left\" | \"right\"",
                    "file": "projects/web-components/src/components/tooltip/tooltip.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/web-components/src/components/knob/knob.component.ts": [
                {
                    "name": "sizes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"large\"",
                    "file": "projects/web-components/src/components/knob/knob.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/web-components/src/api/menu.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FreudMenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/components/avatar/avatar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FreudAvatarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/components/badge/badge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FreudBadgeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FreudButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/components/knob/knob.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FreudKnobComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/components/progress-spinner/progress-spinner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FreudProgressSpinnerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/components/rating/rating.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FreudRatingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/components/select-button/select-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FreudSelectButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/components/skeleton/skeleton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FreudSkeletonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/components/speed-dial/speed-dial.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FreudSpeedDialComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/components/split-button/split-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FreudSplitButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/components/steps/steps.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FreudStepsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/components/steps/steps.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StepMenu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/components/tag/tag.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FreudTagComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/components/tooltip/tooltip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FreudTooltipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/components/typography/typography.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FreudTypographyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/components/typography/typography.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "types",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/components/typography/typrography.type.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bodyTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/components/typography/typrography.type.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "headingTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/services/confirmation.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FreudConfirmationService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/web-components/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/avatar/Avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BgColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/avatar/Avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconMedium",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/avatar/Avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Imagem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/avatar/Avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/avatar/Avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Medium",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/avatar/Avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/avatar/Avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/avatar/Avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithBadge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/avatar/Avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/badge/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Actived",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/badge/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BgColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/badge/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/badge/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/badge/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/badge/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/badge/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/badge/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/badge/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/badge/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateBgColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/badge/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateBlank",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/badge/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Warning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Ghost",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GhostBackground",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconButtonRight",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Loading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrimaryBackground",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SecondaryBackground",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SizeLG",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SizeMD",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SizeSM",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "templateHTML",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateLoading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FreudHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "stories/knob/Knob.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BgColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/knob/Knob.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BgColorDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/knob/Knob.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/knob/Knob.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/knob/Knob.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SizeDefault",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/knob/Knob.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SizeLarge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/knob/Knob.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/progress-spinner/ProgressSpinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BgColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/progress-spinner/ProgressSpinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/progress-spinner/ProgressSpinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/rating/Rating.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BgColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/rating/Rating.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BgColorDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/rating/Rating.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/rating/Rating.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/rating/Rating.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/select-button/SelectButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Background",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/select-button/SelectButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/select-button/SelectButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/select-button/SelectButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OptionDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/select-button/SelectButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "options",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/select-button/SelectButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "optionsDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/select-button/SelectButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/select-button/SelectButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "templateHTML",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/skeleton/Skeleton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BgColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/skeleton/Skeleton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/skeleton/Skeleton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/speed-dial/SpeedDial.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BgColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/speed-dial/SpeedDial.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BgColorDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/speed-dial/SpeedDial.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DirectionDown",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/speed-dial/SpeedDial.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DirectionLeft",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/speed-dial/SpeedDial.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/speed-dial/SpeedDial.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "itemsWithLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/speed-dial/SpeedDial.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Mask",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/speed-dial/SpeedDial.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/speed-dial/SpeedDial.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateCircle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/speed-dial/SpeedDial.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeCircle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/speed-dial/SpeedDial.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeQuarterCircle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/speed-dial/SpeedDial.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeQuarterDownRight",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/split-button/SplitButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BgColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/split-button/SplitButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/split-button/SplitButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/split-button/SplitButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/split-button/SplitButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "itemsWithoutIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/split-button/SplitButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/split-button/SplitButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "templateHTML",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/steps/Steps.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BgColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/steps/Steps.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/steps/Steps.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "itens",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/steps/Steps.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/tag/Tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BgColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/tag/Tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BgColorOutLine",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/tag/Tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/tag/Tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/tag/Tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OutlineError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/tag/Tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OutlineInfo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/tag/Tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OutlinePrimary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/tag/Tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OutlineSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/tag/Tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OutlineWarning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/tag/Tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/tag/Tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/tag/Tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/tag/Tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateBgColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/tag/Tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Warning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/tooltip/Tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BgColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/tooltip/Tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Bottom",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/tooltip/Tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Left",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/tooltip/Tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Right",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/tooltip/Tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/tooltip/Tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Top",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BgColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HeadingBold",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HeadingRegular",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HeadingSemibold",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateBold",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateRegular",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateSemibold",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateTextBold",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateTextRegular",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateTextSemibold",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextBold",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextRegular",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/typography/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextSemibold",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}